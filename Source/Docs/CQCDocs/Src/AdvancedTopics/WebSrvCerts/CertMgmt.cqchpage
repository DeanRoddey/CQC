<?xml version="1.0" encoding="Latin1"?>
<!DOCTYPE HelpPage PUBLIC "urn:charmedquark.com:CQC-Documentation.DTD" "CQCDocs.DTD">

<HelpPage>
    <Title>Certificate Management (Windows)</Title>

    <HelpText>

        <P>Once you have generated or purchased the necessary certificates, you need to install them so that other programs can make use of them. For the Web Server, its certificate (which includes its public key) has to be installed, to serve up to clients, and its private key has to be installed so that it can be used locally by the server itself.</P>

        <P>If you are self-signing certificates, then your Certificate Authority certificate must be installed on any clients that are going to access the Web Server securely, so that they can verify the certificate that they get from the server.</P>

        <P>Windows uses what it calls a 'Certificate Store' to hold these files. It is broken up into three major sections, each of which has a set of sub-folders under it that hold certificates of specific types.</P>

        <Code>
            Current User (only available to this user)
                ...sub-folders of personal certificates...
            Local Machine (for all users of this machine)
                ...sub-folders of machine certificates...
            Service (for specific services)
                ...sub-folders of service certificates...
        </Code>

        <P>You have to be careful to put the files in the right areas, because each area is accessible to different users/programs and each sub-folder defines certificates for specific purposes or at specific levels of trust.</P>

        <P>For our purposes, the Local Machine area is appropriate. The files that the Web Server needs can't be stored per-user, they have to be at the machine level because the Web Server runs in the background, and has to get to it whether anyone is logged in or not. For clients, you might choose to only allow specific users to access the Web Server, but it's unlikely. If you did, you would use the Current User section of the Certificate Store. You will choose which major section below when we install the files.</P>

        <P>Different key generation programs or CAs will provide you with different files. But we need some concrete example, so we'll use a scenario easily generated by the tools that come with the Microsoft Visual Studio system. In that case, if you are signing your own certificates for local use, then you will likely have these files, assuming in our example that we are going to call our personal CA "CQSL CA".</P>

        <List Type="Unordered">
            <LItem Ref="CQSL CA.cer">This is your CA certificate. It includes the public key for your CA, so you will install this on any clients that need to access the Web Server securely, so that they can authenticate your server's certificate. Or, if you are running some local certificate authority server, install it there.</LItem>
            <LItem Ref="CQSL CA.pfx">This is a convenience file. It includes all of the certificate and private key info together in a single file that you can store away safely, not somewhere accessible from the network, public or private. We won't use it here.</LItem>
            <LItem Ref="CQSL CA.pvk">This is your CA private key. This is what will be used to sign your server certificates. This also should be stored away safely, not somewhere accessible from the network, public or private. If this is compromised, everything is compromised really.</LItem>
        </List>

        <Note>If you were to double click your CA certificate file at this point, to get information about it, you would see that it shows up as an untrusted certificate, because it's not installed in the certificate store yet.</Note>


        <P>For the actual Web Server itself, you will generally have some files like this, where we just used the prefix "Srv_" on the file names to remember that these are for the server itself, and CQSL-VM-HOST is name of the server it is for in this example:</P>

        <List Type="Unordered">
            <LItem Ref="Srv_CQSL-VM-HOST.cer">The server's certificate. This is what will be sent to the clients when they connect. It contains the server's public key and info about what CA it is signed by and so forth. We won't actually use it here, but it might be needed by some certificate repository server you might use.</LItem>
            <LItem Ref="Srv_CQSL-VM-HOST.pvk">The server's private key. This one won't be used here, but store it away safely, as above.</LItem>
            <LItem Ref="Srv_CQSL-VM-HOST.pfx">As above, this is a convenience that includes the certificate and private key information. In this case, this is the file we will install on the server side, because the server needs both the certificate info, to send to the clients, and the private key to exchange PK encrypted data with the client. Though we are installing it in the Windows certificate store, still hide the file away safely so that it cannot be gotten to.</LItem>
        </List>


        <SecTitle>Client Side Installation</SecTitle>

        <P>If you are using your own signed certificates, then the clients have to have a CA certificate to validate the server certificates they get from the server when they connect to it. So you need to install the CA certificate on any clients that want to access the server. You might use some local certificate authority type server, but most of you won't be doing that, and will just install the CA certificate on the clients. This is fine, it is the public key certificate and that's meant to be openly available anyway.</P>

        <P>For those client programs that use the Windows certificate store, which is most of them, this section describes how to install the CA certificate appropriately. Some browsers may have their own certificate store.</P>


        <P>To start we need to open the Certificate Manager snap-in for Windows. This is done via the Windows 'MMC Console' program. On Windows 7, click the start menu and enter mmc.exe in the search field and hit enter. On Windows 10, right click the start menu button and select Search.This will bring up an empty MMC console, possibly after prompting you for admin rights. Use the File->Add/Remove Snapin menu option, which will bring up a dialog box that lets you add new snap-ins. On the left select the one named Certificates and press the Add button to move it to the right hand list.</P>

        <Image Ref="AdvancedTopics/ClientCert1.jpg"/>

        <P>You will be asked which of the certificate store areas you want to access, and in this case you will want the Computer Account section, which corresponds to the Local Machine area of the store. These certificates will be available to any validly logged in user. You could limit access to the current user account. But generally you'd want any Windows user to be able to access the Web Server. </P>

        <P>You may also then be given a choice to manage another machine on the network, instead of the one you are currently on. Select Local Computer to affect the local machine. Hit OK, to complete this process and you will now see the new snap-in in the MMC on the left, which you can expand out to access certificates.</P>

        <Image Ref="AdvancedTopics/ClientCert2.jpg"/>

        <P>Expand the list on the left and one of the sections will be called "Trusted Root Certification Authorities", which you should expand out and then click the Certificates folder under that. You will then see all of the currently installed trusted CAs installed on your machine (in the local machine section, there could be others in the other sections.)</P>

        <P>Drag and drop your CA certificate file (CQSL CA.cer in our example above) into the list on the right and it should show up in the list. You can also right click on the Trusted Root -> Certificates sub-folder and select All Tasks -> Import and navigate over to the file and select it that way.</P>

        <Image Ref="AdvancedTopics/ClientCert3.jpg"/>

        <P>Now, if you go back to your .cer file and double click on it again, you should see something like below. The untrusted description is now gone, and it indicates the purpose of the certificate. Note it also has a valid time range, though it is quite a long time. I doubt I'll be around when it expires.</P>

        <Image Ref="AdvancedTopics/ClientCertInfo.jpg"/>


        <SecTitle>Server Side Installation</SecTitle>

        <P>On any machine where you want to run a CQC Web Server you will have to obtain or generate the appropriate server certificate/private key as outlined above, remembering that each certificate includes the name of the server being accessed so you must generate the files for each machine you want to host the CQC Web Server on (at least those that you want to support secure connections.) Here again, you will install the file in the Local Machine section of the Windows Certificate Store. So, open the MMC as above (if on the same machine as before just use the one already opened.)</P>

        <Note>For your own generated certificates you must use your CA private key to sign the server certificate. We assume that has already been done. See the instructions included with your certificate generation program for how to do this.</Note>

        <P>In this case we want to expand out the Personal folder on the left side, and then click on Certificates under that, showing all of the personal certificates currently installed at the Local Machine level. Probably there won't be any, or very few. In our example we will drag and drop the Srv_CQSL-VM-HOST.pfx file into the list on the right, use the appropriate file in your case.</P>

        <Image Ref="AdvancedTopics/ServerCert1.jpg"/>

        <P>If you now go back and double click on your Srv_myserver.pfx file, you should see something like below:</P>

        <Image Ref="AdvancedTopics/ServerCertInfo.jpg"/>

        <P>It now indicates that the purpose of this certificate is to identify a remote computer, i.e. this certificate will be sent by the CQC Web Server to the client when the client connects to it. Note that the valid time range for this type of certificate is much shorter, so that it will have to be updated regularly.</P>

        <P>Also note that it was 'issued by' our 'CQSL CA' pseudo certificate authority. That means that it was signed using our own CA certificate.</P>


        <SecTitle>Summary</SecTitle>

        <P>Other key generating programs may generate slightly differently named files, or may not generate all of these files. But they will generate basically the same content that we actually installed here, since those bits are necessary for the process to work. Just follow the instructions given by the certificate generation program you are using.</P>


        <SecTitle>Configuring the Web Server</SecTitle>

        <P>Once you have the certificates installed, you will need to set up the CQC Web Server to use the certificate. For more information, see the <Link Type="Page" Ref="/Installation/AdvInst/" Id="/WebServer">installation documentation</Link> section on the Web Server.</P>

    </HelpText>

</HelpPage>
