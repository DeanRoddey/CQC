<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE HelpPage PUBLIC "urn:charmedquark.com:CQC-Documentation.DTD" "CQCDocs.DTD">

<HelpPage>
    <Title>CQC Automation Overview</Title>
    <HelpText>
        <P>We will start at the very simplest level.  If you are already familiar with automation in general, then you can probably skip a few sections, which are to help those new to automation to understand it before moving on to CQC specific topics.</P>

        <P>So what actually is automation?  To start with, to be a bit pedantic, the full term is 'control and automation' but usually it is shortened to 'automation'.  They really need to be addressed separately, so let's start with control.  All of you have likely experienced the control aspect of control and automation, since a very simple example of it is usually sitting on your end table or couch in the form of a remote control. A remote control is called a remote control because it does just that, it provides control of a device or devices remotely.  Though it is very simple, it is absolutely the same sort of control that is referred to by 'control and automation'.  It provides you the means to make a device do what you want, to 'control it'.  Even the buttons on the front panel of the device counts as control if we get technical about it, but that's not the kind of control we are interested in here.  We are more interested in 'control from a distance', since that opens up many more possibilities.</P>

        <P>We all know the shortcomings of remote controls.  The biggest one is that every device usually has its own so you end up with a big pile of them and have to cycle through them one at a time to get all your gear powered up or down and to set up everything for what you want to do.  Another, possibly less obvious, limitation is that you have to have line of site to the device.  You can't easily control devices off in a closet somewhere using a remote control from your couch.  Another shortcoming is that they are very 'literal', i.e.  they typically have one button for each basic function.  They are usually very much just proxies for the buttons on the front panel of the device.  You have to know which buttons to press in what sequence in order to achieve your goal.  As devices, particularly in the home theater, have gotten more and more complex, their remote controls have also become increasingly incomprehensible and easy to make mistakes with by pressing the wrong button.</P>

        <P>We could take another step up the food chain, as many people do, and utilize a learning remote. These remote controls let you learn in commands from other remote controls (and/or often have pre-fab libraries of them built in), and they can spit out commands to various devices from one remote control.  This simplifies things somewhat, in that there's now a single remote, but it doesn't fundamentally change the picture since all those remote controls are still there, they are just now 'virtual' remote controls.  You press one of a set of devices (TV, Amplifier, etc...) to select which virtual remote you want to use.</P>

        <P>We are still so far in the 'control' part of control and automation, but the next step will take us into the automation side of the equation.  Many of these learning remote controls are smart enough to let you record a sequence of buttons that you might need to press in order to engage in some sort of activity, like 'Watch TV'.  It can then play that sequence of commands back from a single button.  That is the simplest form of automation, in that you are automating (or making automatic) the spitting out of a sequence of commands to achieve some goal, or to initiate some type of activity.</P>

        <P>So the automation side of control and automation builds on the control side and adds the ability to automatically spit out multiple control commands.  In a nutshell, that is how it works.  An automation system, like CQC, at its core, provides these same capabilities, just much more intelligently and with many more possibilities.</P>

    </HelpText>

</HelpPage>

