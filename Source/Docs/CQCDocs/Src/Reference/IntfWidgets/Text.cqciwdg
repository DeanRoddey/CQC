<?xml version="1.0" encoding="Latin1"?>
<!DOCTYPE IntfWidget PUBLIC "urn:charmedquark.com:CQC-Documentation.DTD" "CQCDocs.DTD">

<IntfWidget>

    <Title>Text</Title>

    <WdgDescr>

        <P>Text widgets allow you to place decorative or descriptive fixed text on your templates or to display the value of fields or variables in text form. Static text widgets take a text value at design time to display (though they have some other uses as well as discussed below.) Field and variable based text widgets display the value of their associated field or variable, respectively.</P>

        <P>The static text widget is kind of a special one because it provides various commands that allow you to modify the text value it is displaying. These commands effectively allow you to implement simple, single line text editing, commonly used in login or password or search popups. You implement a set of buttons are provided to send a static text widget commands to enter letters and/or numbers, backspace, clear, etc...</P>

        <P>It also provides a command to send the value it currently contains to a field, and to deal gracefully with the fact that it might be rejected, generating an OnError event that you can respond to by displaying an error message to the user and letting him try again. So it's a pretty powerful tool for user interface creation.</P>

        <P>The Marquee widgets are effectively extensions of these more fundamental text widgets, which just scroll the text value instead of displaying it in fixed position. It wouldn't make much sense to use a scrolling marquee as a text editor type widget, but the same commands documented below for the static text widget are available on the static marquee.</P>

        <P>There are some specialized text display widgets also, which deal with special types of values that you may want more control over the format of, e.g. the Time/Date Text widget or the Numeric Text widget. When you use a regular text widget for a field or variable, you'll get the default format for the type of the field or variable. You can set the radix and decimal digits on a numeric variable when you create it, to provide some more control over the display format.</P>

        <P>For the field and variable based text widgets, you can still enter some fixed text. You just put a %(f) replacement token in the caption text somewhere and that will be replaced by the actual formatted field or variable value. This lets you do something like "Value =10" without having to create a separate static text to provide the Value= part. The reason the token is 'f' is because historically there were only field based widgets, no variable based ones, so 'f' meant the 'field' value. But it works the same for variable based ones.</P>

    </WdgDescr>

    <IntfEvents>

        <IntfEvent Name="OnError">
            This is only generated by the SendValue command. If the field write invoked by SendValue fails, then this event is invoked. You can use it to react to the error and display some sort of message to the user, either via a popup or writing it to a static text widget generally.
        </IntfEvent>

        <IntfEvent Name="OnSuccess">
            This is only generated by the SendValue command. If the field write invoked by SendValue works, then this event is invoked. You can use it to inform the user of success, or to handle any followup activity that should be invoked after a successful field write (though generally that would just be done in the subsequent action steps after the SendValue command.)
        </IntfEvent>
    </IntfEvents>

    <IntfCmds>

        <WdgDescr>
            Commands marked with [*] return a True/False status and can be used in If/Else type commands.
        </WdgDescr>

        <CQCActCmd Name="Append">
            <ActDescr>
                Sends a static text widget some text to append to its current content. Not valid for field or variable variations.
            </ActDescr>
            <CQCActParm Name="toappend" Descr="The text to append."/>
        </CQCActCmd>

        <CQCActCmd Name="Clear">
            <ActDescr>
                Tells a static text widget to clear out its current text content, i.e. go back to an empty text value.
            </ActDescr>
        </CQCActCmd>

        <CQCActCmd Name="DeleteLast">
            <ActDescr>
                Tells a static text widget to delete the last character of its content, if has any. This is used to implement a backspace type function generally.
            </ActDescr>
            <CQCActParm Name="toappend" Descr="The text to append."/>
        </CQCActCmd>

        <CQCActCmd Name="GetText">
            <ActDescr>
                Queries the current text of a static text widget into the provided variable.
            </ActDescr>
            <CQCActParm Name="targetvar" Descr="The name of the variable to put the text into."/>
        </CQCActCmd>

        <CQCActCmd Name="LinkToField">
            <ActDescr>
                You can change at viewing time the field that the widget is associated with, allowing it to display different information as desired.
            </ActDescr>
            <CQCActParm Name="newfield" Descr="The name of the new field to link to in moniker.field form."/>
        </CQCActCmd>

        <CQCActCmd Name="LinkToVar">
            <ActDescr>
                You can change at viewing time the variable that the widget is associated with, allowing it to display different information as desired.
            </ActDescr>
            <CQCActParm Name="newvar" Descr="The name of the new (global) variable to link to"/>
        </CQCActCmd>

        <CQCActCmd Name="SendValue">
            <ActDescr>

                This one will make the static text widget send it's current value, optionally formatted into a string by replacing the %(v) token with the text value, and to write that to a string field of a driver. If you just want to send the text itself just set the patterm to %(v) by itself.

                <Note>When you configure the Send Value command, if you use the replacement token discussed above, then the %(v) must actually be \%(v), because it will otherwise look like a runtime value and will cause an error because there is no such runtime value. Using the slash in front of the percent sign escapes it so that it is not interpreted as the start of a runtime value.</Note>

            </ActDescr>
            <CQCActParm Name="tarfield" Descr="The target field in moniker.field form"/>
            <CQCActParm Name="fmtpattern" Descr="The pattern to format the value into"/>
        </CQCActCmd>

        <CQCActCmd Name="SetMaxChars">
            <ActDescr>
                Sets the maximum characters the widget will accept. When implementing an entry field style widget, this makes it convenient because you don't have to constantly check whether you have let the user enter the maximum number of characters yet or not. It just starts ignoring Append commands.
            </ActDescr>
            <CQCActParm Name="newmax" Descr="The new max number of characters to accept"/>
        </CQCActCmd>

        <CQCActCmd Name="SetPattern">
            <ActDescr>
                <P>Sets a regular expression that is used to validate the content. Again, when used to implement an entry field type widget, this can be very convenient. For every call to Append, it appends the new text to a temporary copy of the current contents, and then validates that against this regular expression. If it fails, then the new content is ignored.</P>

                <P>By default there is no pattern and any input is accepted (possibly constrained by a call to SetMaxChars.)</P>
            </ActDescr>
            <CQCActParm Name="pattern" Descr="The regular expression pattern to set"/>
        </CQCActCmd>

        <CQCActCmd Name="SetSecretMode">
            <ActDescr>
                Puts a static text widget into or out of  'secret' or 'password' mode, where it just displays asterisks instead of the actual characters entered. This is typically used for implementing login screens.
            </ActDescr>
            <CQCActParm Name="newstate" Descr="True to enter secret mode or False to exit"/>
        </CQCActCmd>

        <CQCActCmd Name="SetText">
            <ActDescr>
                Allows you to set new content to a static text widget. It will just repalce any existing content. This will not be limited by SetMaxChars, that only controls appending new data.
            </ActDescr>
            <CQCActParm Name="newtext" Descr="The new text to set"/>
        </CQCActCmd>

    </IntfCmds>

    <IntfRTVs>

        <IntfRTV Name="StdRTV:ErrorMsg">
            Only available during the OnError event, this contains the error text, should you want to display it to the user.
        </IntfRTV>

    </IntfRTVs>

</IntfWidget>
