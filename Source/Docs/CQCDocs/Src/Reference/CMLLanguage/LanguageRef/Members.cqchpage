<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE HelpPage PUBLIC "urn:charmedquark.com:CQC-Documentation.DTD" "CQCDocs.DTD">

<HelpPage>
    <Title>Members</Title>

    <HelpText>

        <P>Each class, other than the intrinsic classes, is made up of instances of other classes. For instance, an Area class would need an origin (two MEng.Int4 objects probably) and an extent (two MEng.Card4 objects), which means that instances of the Area class will have inside it instances of these other classes. Pretty much any class will be the same, since almost all classes are designed to maintain some state information, and that information has to be made up of instances of other classes.</P>

        <Code>
            Members=
                Int4    m_X;
                Int4    m_Y;
                Card4   m_CX;
                Card4   m_CY;
            EndMembers;
        </Code>

        <Note>It is possible to have a class that only performs operations on data passed to it, but this is the exception rather than the rule.</Note>

        <P>These child objects are called 'members' in most object oriented languages, for obvious reasons, as you would refer to the people in a group as the members of that group. Each instance of an object gets its own instances of the members defined by its class. So in our Area example above, the class would define the indicated members, and each new instance of the class (each Area object) would get its own unique origin and extent members.</P>

    </HelpText>

</HelpPage>
