<?xml version="1.0" encoding="Latin1"?>
<!DOCTYPE CMLClass PUBLIC "urn:charmedquark.com:CQC-Documentation.DTD" "CQCDocs.DTD">

<CMLClass   Copyable="True"
             Final="True"
             ClsPath="MEng.System.Runtime.MD5Hash"
             ParPath="MEng.Formattable">

    <Title>MD5Hash</Title>

    <ClassDescr>
    MEng.System.Runtime.MD5Hash holds the results of hashes generated by the hash digest class MEng.System.Runtime.MD5Digest. It is a 128 bit bit sequence.
    </ClassDescr>

    <MethodGrp Ctor="Yes">
        <!-- Constructor -->
        <Method>
            <MethodDescr>
            There is just a default constructor available, which creates an empty hash of all zeros.
            </MethodDescr>

            <MethodVar Name="Constructor"/>
        </Method>

    </MethodGrp>

    <MethodGrp Const="Yes" Final="Yes">
        <!-- CopyToMemBuf -->
        <Method>
            <MethodDescr>
            Copies the bytes of this hash out to the target buffer. The target buffer must have a maximum size of at least 16 bytes to hold the results, or it will throw an exception.
            </MethodDescr>

            <MethodVar Name="CopyToMemBuf" RetType="MEng.Card4">
                <MethodParm Name="ToFill" Dir="Out" Type="MEng.System.Runtime.MemBuf"/>
            </MethodVar>
        </Method>

        <!-- Equal -->
        <Method>
            <MethodDescr>
            Compares the two objects and returns True if they are equal and False if they are unequal. Neither object is affected. They do the same thing, are only only syntactically different.
            </MethodDescr>

            <MethodVar Name="Equal" RetType="MEng.Boolean">
                <MethodParm Name="ToComp" Dir="In" Type="MEng.System.Runtime.MD5Hash"/>
            </MethodVar>
            <MethodVar Name="operator=" RetType="MEng.Boolean">
                <MethodParm Name="Val1" Dir="In" Type="MEng.System.Runtime.MD5Hash"/>
                <MethodParm Name="Val2" Dir="In" Type="MEng.System.Runtime.MD5Hash"/>
            </MethodVar>
        </Method>

        <!-- GetAsString -->
        <Method>
            <MethodDescr>
            Returns a formatted version of the hash, in the form of 8 bytes, a dash, then 8 more bytes. Each byte is formatted as a two character hex digit, with leading zero if it is less than 16, for instance "D41D8CD98F00B204-E9800998ECF8427E".
            </MethodDescr>

            <MethodVar Name="GetAsString" RetType="MEng.String"/>
        </Method>

        <!-- GetByteCount -->
        <Method>
            <MethodDescr>
            Returns the number of bytes in the hash. It is always 16 bytes, 128 bits, but it's probably always best not to hard code such magic values, so use this instead.
            </MethodDescr>

            <MethodVar Name="GetByteCount" RetType="MEng.Card4"/>
        </Method>

    </MethodGrp>

    <MethodGrp Const="No" Final="Yes">
        <!-- Reset -->
        <Method>
            <MethodDescr>
            Resets the hash back to all zeros.
            </MethodDescr>

            <MethodVar Name="Reset" RetType="MEng.Void"/>
        </Method>

    </MethodGrp>

</CMLClass>
