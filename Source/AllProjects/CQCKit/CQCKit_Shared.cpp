// ----------------------------------------------------------------------------
//  FILE: CQCKit_Shared.cpp
//  DATE: Tue, Jan 19 17:39:54 2021 -0500
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

#include "CQCKit_.hpp"

const TString kCQCKit::strPubTopic_EvTriggers(L"/CQC/CQCKit/EvTriggers");
const TString kCQCKit::strAttr_Actions(L"/Actions/Actions");
const TString kCQCKit::strAttr_Expr_CompVal(L"/Expr/CompVal");
const TString kCQCKit::strAttr_Expr_Descr(L"/Expr/Descr");
const TString kCQCKit::strAttr_Expr_Negated(L"/Expr/Negated");
const TString kCQCKit::strAttr_Expr_Statement(L"/Expr/Statement");
const TString kCQCKit::strAttr_Expr_Type(L"/Expr/Type");
const TString kCQCKit::strWRIVA_RepoPref(L"CQCRepo::");
const TString kCQCKit::strWRIVA_ArtPref(L"MediaArt::");
const TString kCQCKit::strWRIVA_WebPref(L"WebImg::");
const TString kCQCKit::strWRIVA_DrvPref(L"DrvImg::");
const TString kCQCKit::strWRIVA_PArtPref(L"MediaPArt::");
const TString kCQCKit::strWRIVA_NSRendArtPref(L"NSRendArt::");
const TString kCQCKit::strWRIVA_IVOTFPref(L"IVOTF::");
const TString kCQCKit::strRTVPref_Std(L"StdRTV:");
const TString kCQCKit::strRTVPref_EvFld(L"TEvRTV:");
const TString kCQCKit::strActVarPref_GVar(L"GVar:");
const TString kCQCKit::strActVarPref_LVar(L"LVar:");
const TString kCQCKit::strActVarPref_Parm(L"LVar:CQCActParm_");
const TString kCQCKit::strTarPref_Std(L"StdTarget:");
const TString kCQCKit::strTarPref_Widgets(L"IWdgTarget:");
const TString kCQCKit::strTarPref_Interface(L"IntfTarget:");
const TString kCQCKit::strCTarId_MacroEngine(L"StdTarget:MacroEng");
const TString kCQCKit::strCTarId_Fields(L"StdTarget:Fields");
const TString kCQCKit::strCTarId_System(L"StdTarget:System");
const TString kCQCKit::strCTarId_GVars(L"StdTarget:GVars");
const TString kCQCKit::strCTarId_LVars(L"StdTarget:LVars");
const TString kCQCKit::strCTarId_TrigEvent(L"StdTarget:TrigEvemt");
const TString kCQCKit::strCTarId_EventSrv(L"StdTarget:EventSrv");
const TString kCQCKit::strCmdId_Pause(L"StdCmd:Pause");
const TString kCQCKit::strCmdId_Append(L"StdCmd:Append");
const TString kCQCKit::strCmdId_Clear(L"StdCmd:Clear");
const TString kCQCKit::strCmdId_Delete(L"StdCmd:Delete");
const TString kCQCKit::strCmdId_DeleteLast(L"StdCmd:DeleteLast");
const TString kCQCKit::strCmdId_Enable(L"StdCmd:Enable");
const TString kCQCKit::strCmdId_ExecApp(L"StdCmd:ExecApp");
const TString kCQCKit::strCmdId_Exit(L"StdCmd:Exit");
const TString kCQCKit::strCmdId_FieldWrite(L"StdCmd:FieldWrite");
const TString kCQCKit::strCmdId_HideShow(L"StdCmd:HideShow");
const TString kCQCKit::strCmdId_RunMacro(L"StdCmd:RunMacro");
const TString kCQCKit::strCmdId_SayText(L"StdCmd:SayText");
const TString kCQCKit::strCmdId_SendValue(L"StdCmd:SendValue");
const TString kCQCKit::strCmdId_ScrollList(L"StdCmd:ScrollList");
const TString kCQCKit::strCmdId_ScrollToChar(L"StdCmd:ScrollToChar");
const TString kCQCKit::strCmdId_SetColor(L"StdCmd:SetColor");
const TString kCQCKit::strCmdId_SetImage(L"StdCmd:SetImage");
const TString kCQCKit::strCmdId_SetNamedImage(L"StdCmd:SetNamedImage");
const TString kCQCKit::strCmdId_SetPattern(L"StdCmd:SetPattern");
const TString kCQCKit::strCmdId_SetText(L"StdCmd:SetText");
const TString kCQCKit::strCmdId_ShowText(L"StdCmd:ShowText");
const TString kCQCKit::strCmdId_WaitDriverReady(L"StdCmd:WaitDriverReady");
const TString kCQCKit::strCmdId_WaitFieldVal(L"StdCmd:WaitFieldVal");
const TString kCQCKit::strCmdId_WebNavOp(L"StdCmd:WebNavOp");
const TString kCQCKit::strCmdId_WebNavURL(L"StdCmd:WebNavURL");
const TString kCQCKit::strCmdId_SetSysVolume(L"StdCmd:SetSysVolume");
const TString kCQCKit::strCmdId_MuteSystem(L"StdCmd:MuteSystem");
const TString kCQCKit::strCmdId_Add(L"StdCmd:Add");
const TString kCQCKit::strCmdId_AND(L"StdCmd:AND");
const TString kCQCKit::strCmdId_Back(L"StdCmd:Back");
const TString kCQCKit::strCmdId_BitIsOn(L"StdCmd:BitIsOn");
const TString kCQCKit::strCmdId_CapAt(L"StdCmd:CapAt");
const TString kCQCKit::strCmdId_DelSubStr(L"StdCmd:DelSubStr");
const TString kCQCKit::strCmdId_DelVariable(L"StdCmd:DelVariable");
const TString kCQCKit::strCmdId_Divide(L"StdCmd:Divide");
const TString kCQCKit::strCmdId_Exists(L"StdCmd:Exists");
const TString kCQCKit::strCmdId_Find(L"StdCmd:Find");
const TString kCQCKit::strCmdId_FmtNumAsSpoken(L"StdCmd:FormatNumAsSpoken");
const TString kCQCKit::strCmdId_GetLength(L"StdCmd:GetLength");
const TString kCQCKit::strCmdId_GetNthToken(L"StdCmd:GetNthToken");
const TString kCQCKit::strCmdId_GetSubStr(L"StdCmd:GetSubStr");
const TString kCQCKit::strCmdId_GetText(L"StdCmd:GetText");
const TString kCQCKit::strCmdId_Insert(L"StdCmd:Insert");
const TString kCQCKit::strCmdId_Multiply(L"StdCmd:Multiply");
const TString kCQCKit::strCmdId_OR(L"StdCmd:OR");
const TString kCQCKit::strCmdId_Replace(L"StdCmd:Replace");
const TString kCQCKit::strCmdId_ReplaceToken(L"StdCmd:ReplaceToken");
const TString kCQCKit::strCmdId_SetVariable(L"StdCmd:SetVariable");
const TString kCQCKit::strCmdId_SpeakChars(L"StdCmd:SpeakChars");
const TString kCQCKit::strCmdId_SplitAt(L"StdCmd:SplitAt");
const TString kCQCKit::strCmdId_Subtract(L"StdCmd:Subtract");
const TString kCQCKit::strCmdId_ToLower(L"StdCmd:ToLower");
const TString kCQCKit::strCmdId_ToUpper(L"StdCmd:ToUpper");
const TString kCQCKit::strCmdId_UpLevel(L"StdCmd:ToLevel");
const TString kCQCKit::strCmdId_Equals(L"StdCmd:Equals");
const TString kCQCKit::strCmdId_GreaterTh(L"StdCmd:GreaterTh");
const TString kCQCKit::strCmdId_GreaterThEq(L"StdCmd:GreaterThEq");
const TString kCQCKit::strCmdId_IsInNumericRange(L"StdCmd::IsInNumericRange");
const TString kCQCKit::strCmdId_IsInTimeRange(L"StdCmd:IsInTimeRange");
const TString kCQCKit::strCmdId_LessTh(L"StdCmd:LessTh");
const TString kCQCKit::strCmdId_LessThEq(L"StdCmd:LessThEq");
const TString kCQCKit::strCmdId_StartsWith(L"StdCmd::StartsWith");
const TString kCQCKit::strCmdId_DriverReady(L"StdCmd:DriverReady");
const TString kCQCKit::strCmdId_FieldRead(L"StdCmd:FieldRead");
const TString kCQCKit::strCmdId_FieldRead2(L"StdCmd:FieldRead2");
const TString kCQCKit::strCmdId_FieldWrite2(L"StdCmd:FieldWrite2");
const TString kCQCKit::strCmdId_GetTimerVal(L"StdCmd:GetTimerVal");
const TString kCQCKit::strCmdId_IsNightTime(L"StdCmd:IsNightTime");
const TString kCQCKit::strCmdId_PlayWAV(L"StdCmd:PlayWAV");
const TString kCQCKit::strCmdId_SendWOL(L"StdCmd:SendWOL");
const TString kCQCKit::strCmdId_StartRemApp(L"StdCmd:StartRemApp");
const TString kCQCKit::strCmdId_Stop(L"StdCmd:Stop");
const TString kCQCKit::strCmdId_ResetTimer(L"StdCmd:ResetTimer");
const TString kCQCKit::strCmdId_WaitTimer(L"StdCmd:WaitTimer");
const TString kCQCKit::strCmdId_IsFldChangeEv(L"TrigEvCmd:IsFldChangeEv");
const TString kCQCKit::strCmdId_IsFldChangeEvFor(L"TrigEvCmd:IsFldChangeEvFor");
const TString kCQCKit::strCmdId_IsUserActionEv(L"TrigEvCmd:IsUserActionEv");
const TString kCQCKit::strCmdId_IsUserActionEvFor(L"TrigEvCmd:IsUserActionEvFor");
const TString kCQCKit::strCmdId_GetEventFld(L"TrigEvCmd:GetEventFld");
const TString kCQCKit::strCmdId_GenRandNum(L"TrigEvCmd:GenRandNum");
const TString kCQCKit::strCmdId_IsUserActionEvFrom(L"TrigEvCmd:IsUserActionEvFrom");
const TString kCQCKit::strCmdId_GetUserActionVals(L"TrigEvCmd:GetUserActionVals");
const TString kCQCKit::strCmdId_ClearDrvStats(L"StdCmd:ClearDrvStats");
const TString kCQCKit::strCmdId_LogMsg(L"StdCmd:LogMsg");
const TString kCQCKit::strCmdId_EMail(L"StdCmd:EMail");
const TString kCQCKit::strCmdId_Strip(L"StdCmd:Strip");
const TString kCQCKit::strCmdId_IsThisUserActionEv(L"TrigEvCmd:IsThisUserActionEv");
const TString kCQCKit::strCmdId_FormatTimeVal(L"StdCmd:FormatTimeVal");
const TString kCQCKit::strCmdId_QueryDrvText(L"StdCmd:QueryDrvText");
const TString kCQCKit::strCmdId_SendDrvCmd(L"StdCmd:SendDrvCmd");
const TString kCQCKit::strCmdId_GetShowText(L"StdCmd:GetShowText");
const TString kCQCKit::strCmdId_SetButtonText(L"StdCmd:SetButtonText");
const TString kCQCKit::strCmdId_PauseSchEvent(L"StdCmd:PauseSchEvent");
const TString kCQCKit::strCmdId_GetSchEvInfo(L"StdCmd:GetSchEvInfo");
const TString kCQCKit::strCmdId_SetSchEvTime(L"StdCmd:SetSchEvTime");
const TString kCQCKit::strCmdId_GetSunEvInfo(L"StdCmd:GetSunEvInfo");
const TString kCQCKit::strCmdId_SetSunEvOffset(L"StdCmd:SetSunEvOffset");
const TString kCQCKit::strCmdId_GetPerEvInfo(L"StdCmd:GetPerEvInfo");
const TString kCQCKit::strCmdId_SetPerEvTime(L"StdCmd:SetPerEvTime");
const TString kCQCKit::strCmdId_GetDateParts(L"StdCmd:GetDateParts");
const TString kCQCKit::strCmdId_GetTimeParts(L"StdCmd:GetTimeParts");
const TString kCQCKit::strCmdId_AddQListValue(L"StdCmd:AddQListValue");
const TString kCQCKit::strCmdId_GetState(L"StdCmd:GetState");
const TString kCQCKit::strCmdId_SetState(L"StdCmd:SetState");
const TString kCQCKit::strCmdId_SetValue(L"StdCmd:SetValue");
const TString kCQCKit::strCmdId_SetPeriod(L"StdCmd:SetPeriod");
const TString kCQCKit::strCmdId_CreateVariable(L"StdCmd:CreateVariable");
const TString kCQCKit::strCmdId_SetVarFmt(L"StdCmd:SetVarFmt");
const TString kCQCKit::strCmdId_LinkToField(L"StdCmd:LinkToField");
const TString kCQCKit::strCmdId_LinkToVar(L"StdCmd:LinkToVar");
const TString kCQCKit::strCmdId_TimedFldChange(L"StdCmd:TimedFldChange");
const TString kCQCKit::strCmdId_CancelTimedFldChange(L"StdCmd:CancelTimedFldChange");
const TString kCQCKit::strCmdId_HasQueuedFldChange(L"StdCmd:HasQueuedFldChange");
const TString kCQCKit::strCmdId_HTMLEMail(L"StdCmd:HTMLEMail");
const TString kCQCKit::strCmdId_GetNumericRange(L"StdCmd:GetNumericRange");
const TString kCQCKit::strCmdId_InvokeFile(L"StdCmd:InvokeFile");
const TString kCQCKit::strCmdId_EnableSchEvent(L"StdCmd:EnableSchEv");
const TString kCQCKit::strCmdId_WaitTTSDone(L"StdCmd::WaitTTSDone");
const TString kCQCKit::strCmdId_SayTextAndWait(L"StdCmd:SayTextWait");
const TString kCQCKit::strCmdId_ScrollToIndex(L"StdCmd:ScrollToIndex");
const TString kCQCKit::strCmdId_GetCount(L"StdCmd:GetCount");
const TString kCQCKit::strCmdId_GetIndex(L"StdCmd:GetIndex");
const TString kCQCKit::strCmdId_CvtToElapsed(L"StdCmd:CvtToElapsed");
const TString kCQCKit::strCmdId_TrySetVariable(L"StdCmd:TrySetVariable");
const TString kCQCKit::strCmdId_SetNowPlus(L"StdCmd:SetNowPlus");
const TString kCQCKit::strCmdId_ElapsedSince(L"StdCmd:ElapsedSince");
const TString kCQCKit::strCmdId_GetStrListCnt(L"StdCmd:GetStrListCnt");
const TString kCQCKit::strCmdId_GetJulianDate(L"StdCmd:GetJulianDate");
const TString kCQCKit::strCmdId_TestAndSet(L"StdCmd:TestAndSet");
const TString kCQCKit::strCmdId_ReplaceSubStr(L"StdCmd:ReplaceSubStr");
const TString kCQCKit::strCmdId_DoGlobalAct(L"StdCmd:DoGlobalAct");
const TString kCQCKit::strCmdId_Reset(L"StdCmd:Reset");
const TString kCQCKit::strCmdId_AdjustEnumValue(L"StdCmd:AdjustEnumValue");
const TString kCQCKit::strCmdId_SetValueFrom(L"StdCmd:SetValueFrom");
const TString kCQCKit::strCmdId_GetEnumOrdinal(L"StdCmd:GetEnumOrdinal");
const TString kCQCKit::strCmdId_QueryDrvBoolVal(L"StdCmd:QueryDrvBoolVal");
const TString kCQCKit::strCmdId_SayIVText(L"StdCmd:SayIVText");
const TString kCQCKit::strCmdId_PlayIVWAV(L"StdCmd:PlayIVWAV");
const TString kCQCKit::strCmdId_SetIVTemplate(L"StdCmd:SetIVTemplate");
const TString kCQCKit::strCmdId_SafeCreateVariable(L"StdCmd:SafeCreateVariable");
const TString kCQCKit::strCmdId_MarkByIndex(L"StdCmd:MarkByIndex");
const TString kCQCKit::strCmdId_GetMarkedIndex(L"StdCmd:GetMarkedIndex");
const TString kCQCKit::strCmdId_SafeWaitFieldVal(L"StdCmd:SafeWaitFieldVal");
const TString kCQCKit::strCmdId_IsCharAt(L"StdCmd:IsCharAt");
const TString kCQCKit::strCmdId_PutCharAt(L"StdCmd:PutCharAt");
const TString kCQCKit::strCmdId_GetPresenceInfo(L"StdCmd:GetPresenceInfo");
const TString kCQCKit::strCmdId_FindDrivers(L"StdCmd:FindDrivers");
const TString kCQCKit::strCmdId_SetMoniker(L"StdCmd:Moniker");
const TString kCQCKit::strCmdId_SetTimeVar(L"StdCmd:SetTimeVar");
const TString kCQCKit::strCmdId_FindByText(L"StdCmd:FindByText");
const TString kCQCKit::strCmdId_GetLockStatusInfo(L"StdCmd:GetLockStatusInfo");
const TString kCQCKit::strCmdId_EMailURLImg(L"StdCmd:EMailURLImg");
const TString kCQCKit::strCmdId_SaveURLImg(L"StdCmd:SaveURLImg");
const TString kCQCKit::strCmdId_GetZoneAlarmInfo(L"TrigEvCmd:GetZoneAlarmInfo");
const TString kCQCKit::strCmdId_IsFldSrc(L"TrigEvCmd:IsFldSource");
const TString kCQCKit::strCmdId_IsDevSrc(L"TrigEvCmd:IsDevSource");
const TString kCQCKit::strCmdId_GetFldChangeInfo(L"TrigEvCmd:GetFldChangeInfo");
const TString kCQCKit::strCmdId_GetMotionInfo(L"TrigEvCmd:GetMotionInfo");
const TString kCQCKit::strCmdId_GetLoadChangeInfo(L"TrigEvCmd:GetLoadChangeInfo");
const TString kCQCKit::strCmdId_Negate(L"StdCmd:Negate");
const TString kCQCKit::strCmdId_IsInList(L"StdCmd:IsInList");
const TString kCQCKit::strCmdId_Scroll(L"StdCmd:Scroll");
const TString kCQCKit::strCmdId_CalcGeoDistance(L"StdCmd:CalcGeoDistance");
const TString kCQCKit::strCmdId_GetColor(L"StdCmd:GetColor");
const TString kCQCKit::strCmdId_SetClrComps(L"StdCmd:SetClrComps");
const TString kCQCKit::strCmdId_GetNthEnumVal(L"StdCmd:GetNthEnumVal");
const TString kCQCKit::strCmdId_CreateVarFromField(L"StdCmd:CreateVarFromField");
const TString kCQCKit::strCmdId_QueryDrvCardVal(L"StdCmd:QueryDrvCardVal");
const TString kCQCKit::strCmdId_QueryDrvIntVal(L"StdCmd:QueryDrvIntVal");
const TString kCQCKit::strCmdId_SetIVBlanker(L"StdCmd:SetIVBlanker");
const TString kCQCKit::strCmdId_PauseEvMon(L"StdCmd:PauseEvMon");
const TString kCQCKit::strCmdId_HTTPGet(L"StdCmd:HTTPGet");
const TString kCQCKit::strCmdId_IsWeekDay(L"StdCmd:IsWeekDay");
const TString kCQCKit::strCmdId_GetDayOfWeek(L"StdCmd:GetDayOfWeek");
const TString kCQCKit::strCmdId_GetSemFields(L"StdCmd:GetSemFields");
const TString kCQCKit::strCmdId_PauseTrgEvent(L"StdCmd:PauseTrgEvent");
const TString kCQCKit::strCmdId_EvalExpr(L"StdCmd:EvalExpression");
const TString kCQCKit::strCmdId_SetURL(L"StdCmd:SetURL");
const TString kCQCKit::strCmdId_SetMute(L"StdCmd:SetMute");
const TString kCQCKit::strCmdId_SetVolume(L"StdCmd:SetVolume");
const TString kCQCKit::strCmdId_SetWebURL(L"StdCmd:SetWebURL");
const TString kCQCKit::strCmdId_GetUserData(L"StdCmd:GetUserData");
const TString kCQCKit::strCmdId_GetValue(L"StdCmd:GetValue");
const TString kCQCKit::strCmdId_GetCurTimeStamp(L"StdCmd:GetCurTimeStamp");
const TString kCQCKit::strCmdId_FindFields(L"StdCmd:FindFields");
const TString kCQCKit::strEvId_OnRepeat(L"StdEvent:OnRepeat");
const TString kCQCKit::strEvId_OnPress(L"StdEvent:OnPress");
const TString kCQCKit::strEvId_OnRelease(L"StdEvent:OnRelease");
const TString kCQCKit::strEvId_OnDrag(L"StdEvent:OnDrag");
const TString kCQCKit::strEvId_OnSelect(L"StdEvent:OnSelect");
const TString kCQCKit::strEvId_OnLoad(L"StdEvent:OnLoad");
const TString kCQCKit::strEvId_OnScheduledTime(L"StdEvent:OnScheduledTime");
const TString kCQCKit::strEvId_OnClick(L"StdEvent:OnClick");
const TString kCQCKit::strEvId_OnFalseClick(L"StdEvent:OnFalseClick");
const TString kCQCKit::strEvId_OnTrueClick(L"StdEvent:OnTrueClick");
const TString kCQCKit::strEvId_OnSet(L"StdEvent:OnSet");
const TString kCQCKit::strEvId_OnTrigger(L"StdEvent:OnTrigger");
const TString kCQCKit::strEvId_OnError(L"StdEvent:OnError");
const TString kCQCKit::strEvId_OnSuccess(L"StdEvent:OnSuccess");
const TString kCQCKit::strEvId_OnScroll(L"StdEvent:OnScroll");
const TString kCQCKit::strEvId_OnPreload(L"StdEvent:OnPreload");
const TString kCQCKit::strEvId_OnTimeout(L"StdEvent:OnTimeout");
const TString kCQCKit::strEvId_OnExit(L"StdEvent:OnExit");
const TString kCQCKit::strEvId_OnExtClick(L"StdEvent:OnExtClick");
const TString kCQCKit::strEvId_OnFlick(L"StdEvent:OnFlick");
const TString kCQCKit::strRepoScope_User(L"/User");
const TString kCQCKit::strRepoScope_UserTS(L"/User/");
const TString kCQCKit::strRepoScope_System(L"/System");
const TString kCQCKit::strRepoScope_SystemTS(L"/System/");
const TString kCQCKit::strRTVId_Millis(L"StdRTV:Millis");
const TString kCQCKit::strRTVId_MMDDYYYY(L"StdRTV:MMDDYYYY");
const TString kCQCKit::strRTVId_DDMMYYYY(L"StdRTV:DDMMYYYY");
const TString kCQCKit::strRTVId_YYYY(L"StdRTV:YYYY");
const TString kCQCKit::strRTVId_HHMM(L"StdRTV:HHMM");
const TString kCQCKit::strRTVId_HHMMSS(L"StdRTV:HHMMSS");
const TString kCQCKit::strRTVId_HostName(L"StdRTV:HostName");
const TString kCQCKit::strRTVId_WeekDay(L"StdRTV:WeekDay");
const TString kCQCKit::strRTVId_CurValue(L"StdRTV:CurValue");
const TString kCQCKit::strRTVId_Env01(L"StdRTV:Env01");
const TString kCQCKit::strRTVId_Env02(L"StdRTV:Env02");
const TString kCQCKit::strRTVId_Env03(L"StdRTV:Env03");
const TString kCQCKit::strRTVId_Env04(L"StdRTV:Env04");
const TString kCQCKit::strRTVId_Env05(L"StdRTV:Env05");
const TString kCQCKit::strRTVId_Env06(L"StdRTV:Env06");
const TString kCQCKit::strRTVId_Env07(L"StdRTV:Env07");
const TString kCQCKit::strRTVId_Env08(L"StdRTV:Env08");
const TString kCQCKit::strRTVId_Env09(L"StdRTV:Env09");
const TString kCQCKit::strRTVId_ErrorMsg(L"StdRTV:ErrorMsg");
const TString kCQCKit::strRTVId_DayNumber(L"StdRTV:DayNumber");
const TString kCQCKit::strRTVId_Hour(L"StdRTV:Hour");
const TString kCQCKit::strRTVId_Minute(L"StdRTV:Minute");
const TString kCQCKit::strRTVId_Month(L"StdRTV:Month");
const TString kCQCKit::strRTVId_MonthNumber(L"StdRTV:MonthNumber");
const TString kCQCKit::strRTVId_CurUserName(L"StdRTV:CurUserName");
const TString kCQCKit::strRTVId_IPAddr(L"StdRTV:IPAddr");
const TString kCQCKit::strRTVId_CQCVersion(L"StdRTV:CQCVersion");
const TString kCQCKit::strRTVId_FirstIndex(L"StdRTV:FirstIndex");
const TString kCQCKit::strRTVId_SelectIndex(L"StdRTV:SelectIndex");
const TString kCQCKit::strRTVId_CurDateTime(L"StdRTV:CurDateTime");
const TString kCQCKit::strRTVId_TimeStamp(L"StdRTV:TimeStamp");
const TString kCQCKit::strRTVId_TEvClass(L"TEvRTV:Class");
const TString kCQCKit::strRTVId_TEvSource(L"TEvRTV:Source");
const TString kCQCKit::strRTVId_TEvNewFldVal(L"TEvRTV:NewFldVal");
const TString kCQCKit::strRTVId_TEvSrcMoniker(L"TEvRTV:SrcMoniker");
const TString kCQCKit::strRTVId_TEvSrcField(L"TEvRTV:SrcField");
const TString kCQCKit::strRTVId_CurUserRole(L"TEvRTV:CurUserRole");
const TString kCQCKit::strRTVId_MarkIndex(L"StdRTV:MarkIndex");
const TString kCQCKit::strRTVId_SelTime(L"StdRTV:SelTime");
const TString kCQCKit::strRTVId_MSHost(L"StdRTV:MSHost");
const TString kCQCKit::strRTVId_CurText(L"StdRTV:CurText");
const TString kCQCKit::strMSWebSrv(L"Master");


static TEnumMap::TEnumValItem aeitemValues_EActCmdCtx[5] = 
{
    {  tCIDLib::TInt4(tCQCKit::EActCmdCtx::Standard), 0, 0,  { L"", L"", L"", L"Standard", L"EActCmdCtx::Standard", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EActCmdCtx::IVEvent), 0, 0,  { L"", L"", L"", L"IVEvent", L"EActCmdCtx::IVEvent", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EActCmdCtx::NoContChange), 0, 0,  { L"", L"", L"", L"NoContChange", L"EActCmdCtx::NoContChange", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EActCmdCtx::Preload), 0, 0,  { L"", L"", L"", L"Preload", L"EActCmdCtx::Preload", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EActCmdCtx::OnError), 0, 0,  { L"", L"", L"", L"OnError", L"EActCmdCtx::OnError", L"" } }

};

static TEnumMap emapEActCmdCtx
(
     L"EActCmdCtx"
     , 5
     , kCIDLib::False
     , aeitemValues_EActCmdCtx
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EActCmdCtx::Count)
);

const TString& tCQCKit::strXlatEActCmdCtx(const tCQCKit::EActCmdCtx eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEActCmdCtx.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EActCmdCtx tCQCKit::eXlatEActCmdCtx(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EActCmdCtx(emapEActCmdCtx.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EActCmdCtx* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EActCmdCtx(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EActCmdCtx* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EActCmdCtx eVal)
{
    return emapEActCmdCtx.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EActOps[5] = 
{
    {  tCIDLib::TInt4(tCQCKit::EActOps::If), 0, kKitMsgs::midActOp_If,  { L"", L"", L"", L"If", L"EActOps::If", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EActOps::Else), 0, kKitMsgs::midActOp_Else,  { L"", L"", L"", L"Else", L"EActOps::Else", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EActOps::Cmd), 0, kKitMsgs::midActOp_Cmd,  { L"", L"", L"", L"Cmd", L"EActOps::Cmd", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EActOps::End), 0, kKitMsgs::midActOp_End,  { L"", L"", L"", L"End", L"EActOps::End", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EActOps::Comment), 0, kKitMsgs::midActOp_Comment,  { L"", L"", L"", L"Comment", L"EActOps::Comment", L"" } }

};

static TEnumMap emapEActOps
(
     L"EActOps"
     , 5
     , kCIDLib::False
     , aeitemValues_EActOps
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::EActOps::Count)
);

const TString& tCQCKit::strXlatEActOps(const tCQCKit::EActOps eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEActOps.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EActOps tCQCKit::eXlatEActOps(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EActOps(emapEActOps.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EActOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EActOps(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EActOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EActOps eVal)
{
    return emapEActOps.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ECmdPrepRes[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::ECmdPrepRes::Unchanged), 0, 0,  { L"", L"", L"", L"Unchanged", L"ECmdPrepRes::Unchanged", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPrepRes::Failed), 0, 0,  { L"", L"", L"", L"Failed", L"ECmdPrepRes::Failed", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPrepRes::Changed), 0, 0,  { L"", L"", L"", L"Changed", L"ECmdPrepRes::Changed", L"" } }

};

static TEnumMap emapECmdPrepRes
(
     L"ECmdPrepRes"
     , 3
     , kCIDLib::False
     , aeitemValues_ECmdPrepRes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::ECmdPrepRes::Count)
);

const TString& tCQCKit::strAltXlatECmdPrepRes(const tCQCKit::ECmdPrepRes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapECmdPrepRes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::ECmdPrepRes tCQCKit::eAltXlatECmdPrepRes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ECmdPrepRes(emapECmdPrepRes.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ECmdPrepRes eVal)
{
    return emapECmdPrepRes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ECmdRes[6] = 
{
    {  tCIDLib::TInt4(tCQCKit::ECmdRes::Ok), 0, 0,  { L"", L"", L"", L"Ok", L"ECmdRes::Ok", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdRes::Stop), 0, 0,  { L"", L"", L"", L"Stop", L"ECmdRes::Stop", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdRes::Exit), 0, 0,  { L"", L"", L"", L"Exit", L"ECmdRes::Exit", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdRes::Except), 0, 0,  { L"", L"", L"", L"Except", L"ECmdRes::Except", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdRes::UnknownExcept), 0, 0,  { L"", L"", L"", L"UnknownExcept", L"ECmdRes::UnknownExcept", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdRes::Unknown), 0, 0,  { L"", L"", L"", L"Unknown", L"ECmdRes::Unknown", L"" } }

};

static TEnumMap emapECmdRes
(
     L"ECmdRes"
     , 6
     , kCIDLib::False
     , aeitemValues_ECmdRes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::ECmdRes::Count)
);

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ECmdRes eVal)
{
    return emapECmdRes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ECmdPTypes[31] = 
{
    {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::None), 0, 0,  { L"", L"", L"", L"None", L"ECmdPTypes::None", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Application), 0, 0,  { L"", L"", L"", L"Application", L"ECmdPTypes::Application", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Area), 0, 0,  { L"", L"", L"", L"Area", L"ECmdPTypes::Area", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Boolean), 0, 0,  { L"", L"", L"", L"Boolean", L"ECmdPTypes::Boolean", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Driver), 0, 0,  { L"", L"", L"", L"Driver", L"ECmdPTypes::Driver", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Enum), 0, 0,  { L"", L"", L"", L"Enum", L"ECmdPTypes::Enum", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Field), 0, 0,  { L"", L"", L"", L"Field", L"ECmdPTypes::Field", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::ImgPath), 0, 0,  { L"", L"", L"", L"ImgPath", L"ECmdPTypes::ImgPath", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Macro), 0, 0,  { L"", L"", L"", L"Macro", L"ECmdPTypes::Macro", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Point), 0, 0,  { L"", L"", L"", L"Point", L"ECmdPTypes::Point", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::RegXText), 0, 0,  { L"", L"", L"", L"RegXText", L"ECmdPTypes::RegXText", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Signed), 0, 0,  { L"", L"", L"", L"Signed", L"ECmdPTypes::Signed", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Template), 0, 0,  { L"", L"", L"", L"Template", L"ECmdPTypes::Template", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Text), 0, 0,  { L"", L"", L"", L"Text", L"ECmdPTypes::Text", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Unsigned), 0, 0,  { L"", L"", L"", L"Unsigned", L"ECmdPTypes::Unsigned", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Color), 0, 0,  { L"", L"", L"", L"Color", L"ECmdPTypes::Color", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Path), 0, 0,  { L"", L"", L"", L"Path", L"ECmdPTypes::Path", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::File), 0, 0,  { L"", L"", L"", L"File", L"ECmdPTypes::File", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::EMailAcct), 0, 0,  { L"", L"", L"", L"EMailAcct", L"ECmdPTypes::EMailAcct", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::SchEvId), 0, 0,  { L"", L"", L"", L"SchEvId", L"ECmdPTypes::SchEvId", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::TarSubAction), 0, 0,  { L"", L"", L"", L"TarSubAction", L"ECmdPTypes::TarSubAction", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::VarName), 0, 0,  { L"", L"", L"", L"VarName", L"ECmdPTypes::VarName", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::GlobAction), 0, 0,  { L"", L"", L"", L"GlobAction", L"ECmdPTypes::GlobAction", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::QuotedList), 0, 0,  { L"", L"", L"", L"QuotedList", L"ECmdPTypes::QuotedList", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::TrayMonBinding), 0, 0,  { L"", L"", L"", L"TrayMonBinding", L"ECmdPTypes::TrayMonBinding", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Host), 0, 0,  { L"", L"", L"", L"Host", L"ECmdPTypes::Host", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::IV), 0, 0,  { L"", L"", L"", L"IV", L"ECmdPTypes::IV", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::EvMonId), 0, 0,  { L"", L"", L"", L"EvMonId", L"ECmdPTypes::EvMonId", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::TrgEvId), 0, 0,  { L"", L"", L"", L"TrgEvId", L"ECmdPTypes::TrgEvId", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Expression), 0, 0,  { L"", L"", L"", L"Expression", L"ECmdPTypes::Expression", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdPTypes::Number), 0, 0,  { L"", L"", L"", L"Number", L"ECmdPTypes::Number", L"" } }

};

static TEnumMap emapECmdPTypes
(
     L"ECmdPTypes"
     , 31
     , kCIDLib::False
     , aeitemValues_ECmdPTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::ECmdPTypes::Count)
);

const TString& tCQCKit::strXlatECmdPTypes(const tCQCKit::ECmdPTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapECmdPTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::ECmdPTypes tCQCKit::eXlatECmdPTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ECmdPTypes(emapECmdPTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::ECmdPTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::ECmdPTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::ECmdPTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ECmdPTypes eVal)
{
    return emapECmdPTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ECmdValRes[4] = 
{
    {  tCIDLib::TInt4(tCQCKit::ECmdValRes::Ok), 0, 0,  { L"", L"", L"", L"Ok", L"ECmdValRes::Ok", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdValRes::Failed), 0, 0,  { L"", L"", L"", L"Failed", L"ECmdValRes::Failed", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdValRes::Confirm), 0, 0,  { L"", L"", L"", L"Confirm", L"ECmdValRes::Confirm", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ECmdValRes::UnknownCmd), 0, 0,  { L"", L"", L"", L"UnknownCmd", L"ECmdValRes::UnknownCmd", L"" } }

};

static TEnumMap emapECmdValRes
(
     L"ECmdValRes"
     , 4
     , kCIDLib::False
     , aeitemValues_ECmdValRes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::ECmdValRes::Count)
);

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ECmdValRes eVal)
{
    return emapECmdValRes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ECommResults[23] = 
{
    {  tCIDLib::TInt4(tCQCKit::ECommResults::Success), 0, 0,  { L"", L"", L"", L"Success", L"ECommResults::Success", L"Success" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::LostConnection), 0, 0,  { L"", L"", L"", L"LostConnection", L"ECommResults::LostConnection", L"Lost Connection" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::LostCommRes), 0, 0,  { L"", L"", L"", L"LostCommRes", L"ECommResults::LostCommRes", L"Lost Comm Resource" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::ValueRejected), 0, 0,  { L"", L"", L"", L"ValueRejected", L"ECommResults::ValueRejected", L"Value Rejected" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::Access), 0, 0,  { L"", L"", L"", L"Access", L"ECommResults::Access", L"Access Denied" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::BadValue), 0, 0,  { L"", L"", L"", L"BadValue", L"ECommResults::BadValue", L"Bad Value" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::Busy), 0, 0,  { L"", L"", L"", L"Busy", L"ECommResults::Busy", L"Device Busy" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::CmdParms), 0, 0,  { L"", L"", L"", L"CmdParms", L"ECommResults::CmdParms", L"Invalid Command Parameters" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::CommError), 0, 0,  { L"", L"", L"", L"CommError", L"ECommResults::CommError", L"Comm Error" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::DeviceResponse), 0, 0,  { L"", L"", L"", L"DeviceResponse", L"ECommResults::DeviceResponse", L"Device Rejected" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::Exception), 0, 0,  { L"", L"", L"", L"Exception", L"ECommResults::Exception", L"Exception Occurred" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::FieldNotFound), 0, 0,  { L"", L"", L"", L"FieldNotFound", L"ECommResults::FieldNotFound", L"Field Not Found" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::Full), 0, 0,  { L"", L"", L"", L"Full", L"ECommResults::Full", L"No Space Available" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::Internal), 0, 0,  { L"", L"", L"", L"Internal", L"ECommResults::Internal", L"Internal Error" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::Limits), 0, 0,  { L"", L"", L"", L"Limits", L"ECommResults::Limits", L"Out of Limit Range" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::MissingInfo), 0, 0,  { L"", L"", L"", L"MissingInfo", L"ECommResults::MissingInfo", L"Missing Information" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::NotReady), 0, 0,  { L"", L"", L"", L"NotReady", L"ECommResults::NotReady", L"Not Ready" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::NotSupported), 0, 0,  { L"", L"", L"", L"NotSupported", L"ECommResults::NotSupported", L"Not Supported" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::PowerState), 0, 0,  { L"", L"", L"", L"PowerState", L"ECommResults::PowerState", L"Wrong Power State" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::ResNotAvail), 0, 0,  { L"", L"", L"", L"ResNotAvail", L"ECommResults::ResNotAvail", L"Resource Not Available" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::ResNotFound), 0, 0,  { L"", L"", L"", L"ResNotFound", L"ECommResults::ResNotFound", L"Resource Not Found" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::Unhandled), 0, 0,  { L"", L"", L"", L"Unhandled", L"ECommResults::Unhandled", L"Write Not Handled" } }
  , {  tCIDLib::TInt4(tCQCKit::ECommResults::UnknownCmd), 0, 0,  { L"", L"", L"", L"UnknownCmd", L"ECommResults::UnknownCmd", L"Unknown Command" } }

};

static TEnumMap emapECommResults
(
     L"ECommResults"
     , 23
     , kCIDLib::False
     , aeitemValues_ECommResults
     , nullptr
     , tCIDLib::TCard4(tCQCKit::ECommResults::Count)
);

const TString& tCQCKit::strAltXlatECommResults(const tCQCKit::ECommResults eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapECommResults.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::ECommResults tCQCKit::eAltXlatECommResults(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ECommResults(emapECommResults.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

const TString& tCQCKit::strXlatECommResults(const tCQCKit::ECommResults eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapECommResults.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::ECommResults tCQCKit::eXlatECommResults(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ECommResults(emapECommResults.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::ECommResults eVal)
{
    strmTar << emapECommResults.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::ECommResults* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::ECommResults(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::ECommResults* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ECommResults eVal)
{
    return emapECommResults.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EDevCats[56] = 
{
    {  tCIDLib::TInt4(tCQCKit::EDevCats::Amplifier), 0, 0,  { L"", L"", L"", L"Amplifier", L"EDevCats::Amplifier", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::AudioSwitcher), 0, 0,  { L"", L"", L"", L"AudioSwitcher", L"EDevCats::AudioSwitcher", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::CDPlayer), 0, 0,  { L"", L"", L"", L"CDPlayer", L"EDevCats::CDPlayer", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::ContactClosure), 0, 0,  { L"", L"", L"", L"ContactClosure", L"EDevCats::ContactClosure", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::DVD), 0, 0,  { L"", L"", L"", L"DVD", L"EDevCats::DVD", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::DVDScalerCombo), 0, 0,  { L"", L"", L"", L"DVDScalerCombo", L"EDevCats::DVDScalerCombo", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::TV), 0, 0,  { L"", L"", L"", L"TV", L"EDevCats::TV", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::FrontProjector), 0, 0,  { L"", L"", L"", L"FrontProjector", L"EDevCats::FrontProjector", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::HVAC), 0, 0,  { L"", L"", L"", L"HVAC", L"EDevCats::HVAC", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::IRBlaster), 0, 0,  { L"", L"", L"", L"IRBlaster", L"EDevCats::IRBlaster", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::IRCombo), 0, 0,  { L"", L"", L"", L"IRCombo", L"EDevCats::IRCombo", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::IRReceiver), 0, 0,  { L"", L"", L"", L"IRReceiver", L"EDevCats::IRReceiver", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::JukeBox), 0, 0,  { L"", L"", L"", L"JukeBox", L"EDevCats::JukeBox", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::LightingSystem), 0, 0,  { L"", L"", L"", L"LightingSystem", L"EDevCats::LightingSystem", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::LD), 0, 0,  { L"", L"", L"", L"LD", L"EDevCats::LD", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Miscellaneous), 0, 0,  { L"", L"", L"", L"Miscellaneous", L"EDevCats::Miscellaneous", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::MiniDisc), 0, 0,  { L"", L"", L"", L"MiniDisc", L"EDevCats::MiniDisc", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Motor), 0, 0,  { L"", L"", L"", L"Motor", L"EDevCats::Motor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Plasma), 0, 0,  { L"", L"", L"", L"Plasma", L"EDevCats::Plasma", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::PLC), 0, 0,  { L"", L"", L"", L"PLC", L"EDevCats::PLC", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::PowerStrip), 0, 0,  { L"", L"", L"", L"PowerStrip", L"EDevCats::PowerStrip", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Processor), 0, 0,  { L"", L"", L"", L"Processor", L"EDevCats::Processor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::PVR), 0, 0,  { L"", L"", L"", L"PVR", L"EDevCats::PVR", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::RearProjector), 0, 0,  { L"", L"", L"", L"RearProjector", L"EDevCats::RearProjector", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Receiver), 0, 0,  { L"", L"", L"", L"Receiver", L"EDevCats::Receiver", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Relay), 0, 0,  { L"", L"", L"", L"Relay", L"EDevCats::Relay", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Router), 0, 0,  { L"", L"", L"", L"Router", L"EDevCats::Router", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Security), 0, 0,  { L"", L"", L"", L"Security", L"EDevCats::Security", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::SetTopBox), 0, 0,  { L"", L"", L"", L"SetTopBox", L"EDevCats::SetTopBox", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::SmartController), 0, 0,  { L"", L"", L"", L"SmartController", L"EDevCats::SmartController", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::SmartPanel), 0, 0,  { L"", L"", L"", L"SmartPanel", L"EDevCats::SmartPanel", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Speaker), 0, 0,  { L"", L"", L"", L"Speaker", L"EDevCats::Speaker", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Transducer), 0, 0,  { L"", L"", L"", L"Transducer", L"EDevCats::Transducer", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Tuner), 0, 0,  { L"", L"", L"", L"Tuner", L"EDevCats::Tuner", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::VCR), 0, 0,  { L"", L"", L"", L"VCR", L"EDevCats::VCR", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::VCRTVCombo), 0, 0,  { L"", L"", L"", L"VCRTVCombo", L"EDevCats::VCRTVCombo", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::VideoProcessor), 0, 0,  { L"", L"", L"", L"VideoProcessor", L"EDevCats::VideoProcessor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::VideoScaler), 0, 0,  { L"", L"", L"", L"VideoScaler", L"EDevCats::VideoScaler", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::VideoSwitcher), 0, 0,  { L"", L"", L"", L"VideoSwitcher", L"EDevCats::VideoSwitcher", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::X10), 0, 0,  { L"", L"", L"", L"X10", L"EDevCats::X10", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Thermostat), 0, 0,  { L"", L"", L"", L"Thermostat", L"EDevCats::Thermostat", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::MediaCombo), 0, 0,  { L"", L"", L"", L"MediaCombo", L"EDevCats::MediaCombo", L"MediaCombo" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::MediaRenderer), 0, 0,  { L"", L"", L"", L"MediaRenderer", L"EDevCats::MediaRenderer", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::MediaRepository), 0, 0,  { L"", L"", L"", L"MediaRepository", L"EDevCats::MediaRepository", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::PBX), 0, 0,  { L"", L"", L"", L"PBX", L"EDevCats::PBX", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::IRLearner), 0, 0,  { L"", L"", L"", L"IRLearner", L"EDevCats::IRLearner", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::MZAudio), 0, 0,  { L"", L"", L"", L"MZAudio", L"EDevCats::MZAudio", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::ADIO), 0, 0,  { L"", L"", L"", L"ADIO", L"EDevCats::ADIO", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Speech), 0, 0,  { L"", L"", L"", L"Speech", L"EDevCats::Speech", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Scheduling), 0, 0,  { L"", L"", L"", L"Scheduling", L"EDevCats::Scheduling", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::VideoConf), 0, 0,  { L"", L"", L"", L"VideoConf", L"EDevCats::VideoConf", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::MediaPlayer), 0, 0,  { L"", L"", L"", L"MediaPlayer", L"EDevCats::MediaPlayer", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Appliance), 0, 0,  { L"", L"", L"", L"Appliance", L"EDevCats::Appliance", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Weather), 0, 0,  { L"", L"", L"", L"Weather", L"EDevCats::Weather", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::PowerMon), 0, 0,  { L"", L"", L"", L"PowerMon", L"EDevCats::PowerMon", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevCats::Irrigation), 0, 0,  { L"", L"", L"", L"Irrigation", L"EDevCats::Irrigation", L"" } }

};

static TEnumMap emapEDevCats
(
     L"EDevCats"
     , 56
     , kCIDLib::False
     , aeitemValues_EDevCats
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EDevCats::Count)
);

tCIDLib::TVoid tCQCKit::FormatEDevCats(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEDevCats.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCKit::strXlatEDevCats(const tCQCKit::EDevCats eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDevCats.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EDevCats tCQCKit::eXlatEDevCats(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EDevCats(emapEDevCats.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EDevCats eVal)
{
    strmTar << emapEDevCats.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EDevCats* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EDevCats(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EDevCats* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EDevCats eVal)
{
    return emapEDevCats.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EDevClasses[43] = 
{
    {  tCIDLib::TInt4(tCQCKit::EDevClasses::None), 0, 0,  { L"", L"None", L"None", L"None", L"EDevClasses::None", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Amplifier), 0, 0,  { L"", L"AMP", L"Amplifier", L"Amplifier", L"EDevClasses::Amplifier", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Audio), 0, 0,  { L"", L"AUD", L"Audio", L"Audio", L"EDevClasses::Audio", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::AIO), 0, 0,  { L"", L"AIO", L"Analog I/O", L"AIO", L"EDevClasses::AIO", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::AVProcessor), 0, 0,  { L"", L"AVPRC", L"AV Processor", L"AVProcessor", L"EDevClasses::AVProcessor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::ClrLighting), 0, 0,  { L"", L"CLGHT", L"Color Lighting", L"ClrLighting", L"EDevClasses::ClrLighting", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::ContactClosure), 0, 0,  { L"", L"CTCL", L"Contact Closure", L"ContactClosure", L"EDevClasses::ContactClosure", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::DeviceInfo), 0, 0,  { L"", L"DEVI", L"Device Info", L"DeviceInfo", L"EDevClasses::DeviceInfo", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::DIO), 0, 0,  { L"", L"DIO", L"Digital I/O", L"DIO", L"EDevClasses::DIO", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::HVAC), 0, 0,  { L"", L"HVAC", L"HVAC", L"HVAC", L"EDevClasses::HVAC", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Irrigation), 0, 0,  { L"", L"IRRIG", L"Irrigation", L"Irrigation", L"EDevClasses::Irrigation", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::IRBlaster), 0, 0,  { L"", L"IRBL", L"IR Blaster", L"IRBlaster", L"EDevClasses::IRBlaster", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::IRLearner), 0, 0,  { L"", L"IRLRN", L"IR Learner", L"IRLearner", L"EDevClasses::IRLearner", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::IRReceiver), 0, 0,  { L"", L"IRREC", L"IR Receiver", L"IRReceiver", L"EDevClasses::IRReceiver", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Lighting), 0, 0,  { L"", L"LGHT", L"Lighting", L"Lighting", L"EDevClasses::Lighting", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Lock), 0, 0,  { L"", L"LOCK", L"Lock", L"Lock", L"EDevClasses::Lock", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::MediaPlayer), 0, 0,  { L"", L"MPLAY", L"Media Player", L"MediaPlayer", L"EDevClasses::MediaPlayer", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::MediaRenderer), 0, 0,  { L"", L"MREND", L"Media Renderer", L"MediaRenderer", L"EDevClasses::MediaRenderer", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::MediaRepository), 0, 0,  { L"", L"MREPO", L"Media Repository", L"MediaRepository", L"EDevClasses::MediaRepository", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::MediaTransport), 0, 0,  { L"", L"MTRANS", L"Media Transport", L"MediaTransport", L"EDevClasses::MediaTransport", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::NowPlaying), 0, 0,  { L"", L"NWPLY", L"Now Playing", L"NowPlaying", L"EDevClasses::NowPlaying", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::MotionSensor), 0, 0,  { L"", L"MOT", L"Motion Sensor", L"MotionSensor", L"EDevClasses::MotionSensor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::MZAudio), 0, 0,  { L"", L"MZAUD", L"Multizone Audio", L"MZAudio", L"EDevClasses::MZAudio", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::PBX), 0, 0,  { L"", L"PBX", L"PBX", L"PBX", L"EDevClasses::PBX", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::PoolCtrl), 0, 0,  { L"", L"PCTRL", L"Pool Controller", L"PoolCtrl", L"EDevClasses::PoolCtrl", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Power), 0, 0,  { L"", L"PWR", L"Power", L"Power", L"EDevClasses::Power", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Projector), 0, 0,  { L"", L"PROJ", L"Projector", L"Projector", L"EDevClasses::Projector", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::PVR), 0, 0,  { L"", L"PVR", L"PVR", L"PVR", L"EDevClasses::PVR", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Relay), 0, 0,  { L"", L"RELY", L"Relay", L"Relay", L"EDevClasses::Relay", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::ResMon), 0, 0,  { L"", L"RESMON", L"Resource Monitor", L"ResMon", L"EDevClasses::ResMon", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Router), 0, 0,  { L"", L"ROUT", L"Router", L"Router", L"EDevClasses::Router", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::SceneCtrl), 0, 0,  { L"", L"SCNE", L"Scene Controller", L"SceneCtrl", L"EDevClasses::SceneCtrl", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Security), 0, 0,  { L"", L"SEC", L"Security", L"Security", L"EDevClasses::Security", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::SetTopBox), 0, 0,  { L"", L"STB", L"Set Top Box", L"SetTopBox", L"EDevClasses::SetTopBox", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Shades), 0, 0,  { L"", L"SHAD", L"Shades", L"Shades", L"EDevClasses::Shades", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Simulator), 0, 0,  { L"", L"SIM", L"Simulator", L"Simulator", L"EDevClasses::Simulator", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Stereo), 0, 0,  { L"", L"STREO", L"Stereo Controls", L"Stereo", L"EDevClasses::Stereo", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Switcher), 0, 0,  { L"", L"SWTCH", L"Switcher", L"Switcher", L"EDevClasses::Switcher", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::TempSensor), 0, 0,  { L"", L"TEMPS", L"Temp Sensor", L"TempSensor", L"EDevClasses::TempSensor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Thermostat), 0, 0,  { L"", L"THERM", L"Thermostat", L"Thermostat", L"EDevClasses::Thermostat", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Tuner), 0, 0,  { L"", L"TUNR", L"Tuner", L"Tuner", L"EDevClasses::Tuner", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::TV), 0, 0,  { L"", L"TV", L"TV", L"TV", L"EDevClasses::TV", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDevClasses::Weather), 0, 0,  { L"", L"WEATH", L"Weather", L"Weather", L"EDevClasses::Weather", L"" } }

};

static TEnumMap emapEDevClasses
(
     L"EDevClasses"
     , 43
     , kCIDLib::False
     , aeitemValues_EDevClasses
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EDevClasses::Count)
);

const TString& tCQCKit::strAltXlatEDevClasses(const tCQCKit::EDevClasses eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDevClasses.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::AltText, bThrowIfNot);
}

tCQCKit::EDevClasses tCQCKit::eAltXlatEDevClasses(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EDevClasses(emapEDevClasses.i4MapEnumText(strVal, TEnumMap::ETextVals::AltText, bThrowIfNot));
}

const TString& tCQCKit::strAltXlat2EDevClasses(const tCQCKit::EDevClasses eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDevClasses.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::AltText2, bThrowIfNot);
}

tCQCKit::EDevClasses tCQCKit::eAltXlat2EDevClasses(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EDevClasses(emapEDevClasses.i4MapEnumText(strVal, TEnumMap::ETextVals::AltText2, bThrowIfNot));
}

const TString& tCQCKit::strXlatEDevClasses(const tCQCKit::EDevClasses eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDevClasses.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EDevClasses tCQCKit::eXlatEDevClasses(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EDevClasses(emapEDevClasses.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EDevClasses eVal)
{
    strmTar << emapEDevClasses.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EDevClasses* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EDevClasses(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EDevClasses* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EDevClasses eVal)
{
    return emapEDevClasses.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EDrvCaps[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EDrvCaps::None), 0, 0,  { L"", L"", L"", L"None", L"EDrvCaps::None", L"None" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvCaps::DevProbe), 0, 0,  { L"", L"", L"", L"DevProbe", L"EDrvCaps::DevProbe", L"Can Probe Device" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvCaps::AutoLoc), 0, 0,  { L"", L"", L"", L"AutoLoc", L"EDrvCaps::AutoLoc", L"Can Auto-Locate" } }

};

static TEnumMap emapEDrvCaps
(
     L"EDrvCaps"
     , 3
     , kCIDLib::False
     , aeitemValues_EDrvCaps
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EDrvCaps::Count)
);

const TString& tCQCKit::strXlatEDrvCaps(const tCQCKit::EDrvCaps eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDrvCaps.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EDrvCaps tCQCKit::eXlatEDrvCaps(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EDrvCaps(emapEDrvCaps.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EDrvCaps eVal)
{
    return emapEDrvCaps.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EDrvCmdWaits[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EDrvCmdWaits::DontCare), 0, 0,  { L"", L"", L"", L"DontCare", L"EDrvCmdWaits::DontCare", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvCmdWaits::Wait), 0, 0,  { L"", L"", L"", L"Wait", L"EDrvCmdWaits::Wait", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvCmdWaits::NoWait), 0, 0,  { L"", L"", L"", L"NoWait", L"EDrvCmdWaits::NoWait", L"" } }

};

static TEnumMap emapEDrvCmdWaits
(
     L"EDrvCmdWaits"
     , 3
     , kCIDLib::False
     , aeitemValues_EDrvCmdWaits
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EDrvCmdWaits::Count)
);

const TString& tCQCKit::strLoadEDrvCmdWaits(const tCQCKit::EDrvCmdWaits eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDrvCmdWaits.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}
const TString& tCQCKit::strXlatEDrvCmdWaits(const tCQCKit::EDrvCmdWaits eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDrvCmdWaits.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EDrvCmdWaits tCQCKit::eXlatEDrvCmdWaits(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EDrvCmdWaits(emapEDrvCmdWaits.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EDrvCmdWaits eVal)
{
    strmTar << emapEDrvCmdWaits.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EDrvCmdWaits* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EDrvCmdWaits(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EDrvCmdWaits* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EDrvCmdWaits eVal)
{
    return emapEDrvCmdWaits.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EDrvStates[9] = 
{
    {  tCIDLib::TInt4(tCQCKit::EDrvStates::NotLoaded), 0, kKitMsgs::midDrvS_NotLoaded,  { L"", L"", L"", L"NotLoaded", L"EDrvStates::NotLoaded", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvStates::Failed), 0, kKitMsgs::midDrvS_Failed,  { L"", L"", L"", L"Failed", L"EDrvStates::Failed", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvStates::Paused), 0, kKitMsgs::midDrvS_Paused,  { L"", L"", L"", L"Paused", L"EDrvStates::Paused", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvStates::WaitInit), 0, kKitMsgs::midDrvS_WaitInit,  { L"", L"", L"", L"WaitInit", L"EDrvStates::WaitInit", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvStates::WaitConfig), 0, kKitMsgs::midDrvS_WaitConfig,  { L"", L"", L"", L"WaitConfig", L"EDrvStates::WaitConfig", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvStates::WaitCommRes), 0, kKitMsgs::midDrvS_WaitCommRes,  { L"", L"", L"", L"WaitCommRes", L"EDrvStates::WaitCommRes", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvStates::WaitConnect), 0, kKitMsgs::midDrvS_WaitConnect,  { L"", L"", L"", L"WaitConnect", L"EDrvStates::WaitConnect", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvStates::Connected), 0, kKitMsgs::midDrvS_Connected,  { L"", L"", L"", L"Connected", L"EDrvStates::Connected", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvStates::Terminated), 0, kKitMsgs::midDrvS_Terminated,  { L"", L"", L"", L"Terminated", L"EDrvStates::Terminated", L"" } }

};

static TEnumMap emapEDrvStates
(
     L"EDrvStates"
     , 9
     , kCIDLib::False
     , aeitemValues_EDrvStates
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::EDrvStates::Count)
);

const TString& tCQCKit::strAltXlatEDrvStates(const tCQCKit::EDrvStates eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDrvStates.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EDrvStates tCQCKit::eAltXlatEDrvStates(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EDrvStates(emapEDrvStates.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

const TString& tCQCKit::strXlatEDrvStates(const tCQCKit::EDrvStates eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDrvStates.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EDrvStates tCQCKit::eXlatEDrvStates(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EDrvStates(emapEDrvStates.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EDrvStates eVal)
{
    strmTar << emapEDrvStates.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EDrvStates* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EDrvStates(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EDrvStates* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EDrvStates eVal)
{
    return emapEDrvStates.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EDrvTypes[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EDrvTypes::CppLib), 0, 0,  { L"", L"", L"", L"CppLib", L"EDrvTypes::CppLib", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvTypes::Macro), 0, 0,  { L"", L"", L"", L"Macro", L"EDrvTypes::Macro", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EDrvTypes::GenProto), 0, 0,  { L"", L"", L"", L"GenProto", L"EDrvTypes::GenProto", L"" } }

};

static TEnumMap emapEDrvTypes
(
     L"EDrvTypes"
     , 3
     , kCIDLib::False
     , aeitemValues_EDrvTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EDrvTypes::Count)
);

const TString& tCQCKit::strLoadEDrvTypes(const tCQCKit::EDrvTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDrvTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EDrvTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EDrvTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EDrvTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EDrvTypes eVal)
{
    return emapEDrvTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EEvProcTypes[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EEvProcTypes::Receive), 0, 0,  { L"", L"", L"", L"Receive", L"EEvProcTypes::Receive", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvProcTypes::Send), 0, 0,  { L"", L"", L"", L"Send", L"EEvProcTypes::Send", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvProcTypes::Both), 0, 0,  { L"", L"", L"", L"Both", L"EEvProcTypes::Both", L"" } }

};

static TEnumMap emapEEvProcTypes
(
     L"EEvProcTypes"
     , 3
     , kCIDLib::True
     , aeitemValues_EEvProcTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EEvProcTypes::None)
);

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EEvProcTypes eVal)
{
    return emapEEvProcTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EEvFTypes[6] = 
{
    {  tCIDLib::TInt4(tCQCKit::EEvFTypes::Boolean), 0, 0,  { L"", L"", L"", L"Boolean", L"EEvFTypes::Boolean", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvFTypes::Int4), 0, 0,  { L"", L"", L"", L"Int4", L"EEvFTypes::Int4", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvFTypes::Card4), 0, 0,  { L"", L"", L"", L"Card4", L"EEvFTypes::Card4", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvFTypes::Card8), 0, 0,  { L"", L"", L"", L"Card8", L"EEvFTypes::Card8", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvFTypes::Float8), 0, 0,  { L"", L"", L"", L"Float8", L"EEvFTypes::Float8", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvFTypes::String), 0, 0,  { L"", L"", L"", L"String", L"EEvFTypes::String", L"" } }

};

static TEnumMap emapEEvFTypes
(
     L"EEvFTypes"
     , 6
     , kCIDLib::False
     , aeitemValues_EEvFTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EEvFTypes::Count)
);

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EEvFTypes eVal)
{
    return emapEEvFTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EEvTrLatches[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EEvTrLatches::Unlatched), 0, 0,  { L"", L"", L"", L"Unlatched", L"EEvTrLatches::Unlatched", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvTrLatches::Unidirectional), 0, 0,  { L"", L"", L"", L"Unidirectional", L"EEvTrLatches::Unidirectional", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvTrLatches::Bidirectional), 0, 0,  { L"", L"", L"", L"Bidirectional", L"EEvTrLatches::Bidirectional", L"" } }

};

static TEnumMap emapEEvTrLatches
(
     L"EEvTrLatches"
     , 3
     , kCIDLib::False
     , aeitemValues_EEvTrLatches
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EEvTrLatches::Count)
);

const TString& tCQCKit::strLoadEEvTrLatches(const tCQCKit::EEvTrLatches eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEEvTrLatches.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EEvTrLatches* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EEvTrLatches(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EEvTrLatches* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EEvTrLatches eVal)
{
    return emapEEvTrLatches.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EEvTrLatchSts[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EEvTrLatchSts::First), 0, 0,  { L"", L"", L"", L"First", L"EEvTrLatchSts::First", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvTrLatchSts::False), 0, 0,  { L"", L"", L"", L"False", L"EEvTrLatchSts::False", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvTrLatchSts::True), 0, 0,  { L"", L"", L"", L"True", L"EEvTrLatchSts::True", L"" } }

};

static TEnumMap emapEEvTrLatchSts
(
     L"EEvTrLatchSts"
     , 3
     , kCIDLib::False
     , aeitemValues_EEvTrLatchSts
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EEvTrLatchSts::Count)
);

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EEvTrLatchSts eVal)
{
    return emapEEvTrLatchSts.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EEvTrTypes[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EEvTrTypes::Unused), 0, 0,  { L"", L"", L"", L"Unused", L"EEvTrTypes::Unused", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvTrTypes::OnChange), 0, 0,  { L"", L"", L"", L"OnChange", L"EEvTrTypes::OnChange", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvTrTypes::OnExpression), 0, 0,  { L"", L"", L"", L"OnExpression", L"EEvTrTypes::OnExpression", L"" } }

};

static TEnumMap emapEEvTrTypes
(
     L"EEvTrTypes"
     , 3
     , kCIDLib::False
     , aeitemValues_EEvTrTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EEvTrTypes::Count)
);

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EEvTrTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EEvTrTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EEvTrTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EEvTrTypes eVal)
{
    return emapEEvTrTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EEMailTypes[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EEMailTypes::Unused), 0, 0,  { L"", L"", L"", L"Unused", L"EEMailTypes::Unused", L"[Unused]" } }
  , {  tCIDLib::TInt4(tCQCKit::EEMailTypes::SMTP), 0, 0,  { L"", L"", L"", L"SMTP", L"EEMailTypes::SMTP", L"SMTP" } }
  , {  tCIDLib::TInt4(tCQCKit::EEMailTypes::SMTPS), 0, 0,  { L"", L"", L"", L"SMTPS", L"EEMailTypes::SMTPS", L"SMTP (Secure)" } }

};

static TEnumMap emapEEMailTypes
(
     L"EEMailTypes"
     , 3
     , kCIDLib::False
     , aeitemValues_EEMailTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EEMailTypes::Count)
);

const TString& tCQCKit::strXlatEEMailTypes(const tCQCKit::EEMailTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEEMailTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EEMailTypes tCQCKit::eXlatEEMailTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EEMailTypes(emapEEMailTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EEMailTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EEMailTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EEMailTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EEMailTypes eVal)
{
    return emapEEMailTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EEvMonStates[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EEvMonStates::Paused), 0, 0,  { L"", L"", L"", L"Paused", L"EEvMonStates::Paused", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvMonStates::Failed), 0, 0,  { L"", L"", L"", L"Failed", L"EEvMonStates::Failed", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvMonStates::Running), 0, 0,  { L"", L"", L"", L"Running", L"EEvMonStates::Running", L"" } }

};

static TEnumMap emapEEvMonStates
(
     L"EEvMonStates"
     , 3
     , kCIDLib::False
     , aeitemValues_EEvMonStates
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EEvMonStates::Count)
);

const TString& tCQCKit::strXlatEEvMonStates(const tCQCKit::EEvMonStates eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEEvMonStates.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EEvMonStates tCQCKit::eXlatEEvMonStates(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EEvMonStates(emapEEvMonStates.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EEvMonStates* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EEvMonStates(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EEvMonStates* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EEvMonStates eVal)
{
    return emapEEvMonStates.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EExprTypes[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::EExprTypes::None), 0, kKitMsgs::midExpr_None,  { L"", L"", L"", L"None", L"EExprTypes::None", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EExprTypes::RegEx), 0, kKitMsgs::midExpr_RegEx,  { L"", L"", L"", L"RegEx", L"EExprTypes::RegEx", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EExprTypes::Statement), 0, kKitMsgs::midExpr_Statement,  { L"", L"", L"", L"Statement", L"EExprTypes::Statement", L"" } }

};

static TEnumMap emapEExprTypes
(
     L"EExprTypes"
     , 3
     , kCIDLib::False
     , aeitemValues_EExprTypes
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::EExprTypes::Count)
);

const TString& tCQCKit::strXlatEExprTypes(const tCQCKit::EExprTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEExprTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EExprTypes tCQCKit::eXlatEExprTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EExprTypes(emapEExprTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EExprTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EExprTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EExprTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EExprTypes eVal)
{
    return emapEExprTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EFldAccess[4] = 
{
    {  tCIDLib::TInt4(tCQCKit::EFldAccess::None), 0, 0,  { L"", L"", L"", L"None", L"EFldAccess::None", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldAccess::Read), 0, 0,  { L"", L"R", L"", L"Read", L"EFldAccess::Read", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldAccess::Write), 0, 0,  { L"", L"W", L"", L"Write", L"EFldAccess::Write", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldAccess::ReadWrite), 0, 0,  { L"", L"RW", L"", L"ReadWrite", L"EFldAccess::ReadWrite", L"" } }

};

static TEnumMap emapEFldAccess
(
     L"EFldAccess"
     , 4
     , kCIDLib::False
     , aeitemValues_EFldAccess
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EFldAccess::Count)
);

const TString& tCQCKit::strAltXlatEFldAccess(const tCQCKit::EFldAccess eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEFldAccess.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::AltText, bThrowIfNot);
}

tCQCKit::EFldAccess tCQCKit::eAltXlatEFldAccess(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EFldAccess(emapEFldAccess.i4MapEnumText(strVal, TEnumMap::ETextVals::AltText, bThrowIfNot));
}

const TString& tCQCKit::strXlatEFldAccess(const tCQCKit::EFldAccess eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEFldAccess.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EFldAccess tCQCKit::eXlatEFldAccess(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EFldAccess(emapEFldAccess.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EFldAccess eVal)
{
    strmTar << emapEFldAccess.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EFldAccess* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EFldAccess(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EFldAccess* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EFldAccess eVal)
{
    return emapEFldAccess.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EFldSTypes[41] = 
{
    {  tCIDLib::TInt4(tCQCKit::EFldSTypes::AnalogIO), 0, 0,  { L"", L"", L"", L"AnalogIO", L"EFldSTypes::AnalogIO", L"Analog Input/Outout" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::BoolSwitch), 0, 0,  { L"", L"", L"", L"BoolSwitch", L"EFldSTypes::BoolSwitch", L"Boolean Switch" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::CatCookie), 0, 0,  { L"", L"", L"", L"CatCookie", L"EFldSTypes::CatCookie", L"Media Category Cookie" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::ChannelAdj), 0, 0,  { L"", L"", L"", L"ChannelAdj", L"EFldSTypes::ChannelAdj", L"Channel Adjust" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::ClrLight), 0, 0,  { L"", L"", L"", L"ClrLight", L"EFldSTypes::ClrLight", L"Color Light" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::ColCookie), 0, 0,  { L"", L"", L"", L"ColCookie", L"EFldSTypes::ColCookie", L"Media Collect Cookie" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::ContactClosure), 0, 0,  { L"", L"", L"", L"ContactClosure", L"EFldSTypes::ContactClosure", L"Contact Closure" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::CurChannel), 0, 0,  { L"", L"", L"", L"CurChannel", L"EFldSTypes::CurChannel", L"Current Channel" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::CurExtHumidity), 0, 0,  { L"", L"", L"", L"CurExtHumidity", L"EFldSTypes::CurExtHumidity", L"Current Ext. Humidity" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::CurExtTemp), 0, 0,  { L"", L"", L"", L"CurExtTemp", L"EFldSTypes::CurExtTemp", L"Current Ext. Temp" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::CurTemp), 0, 0,  { L"", L"", L"", L"CurTemp", L"EFldSTypes::CurTemp", L"Current Temp" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::CurWeather), 0, 0,  { L"", L"", L"", L"CurWeather", L"EFldSTypes::CurWeather", L"Current Weather" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::DigitalIO), 0, 0,  { L"", L"", L"", L"DigitalIO", L"EFldSTypes::DigitalIO", L"Digital Input/Output" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::Dimmer), 0, 0,  { L"", L"", L"", L"Dimmer", L"EFldSTypes::Dimmer", L"Dimmer" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::DriverMoniker), 0, 0,  { L"", L"", L"", L"DriverMoniker", L"EFldSTypes::DriverMoniker", L"DriverMoniker" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::Generic), 0, 0,  { L"", L"", L"", L"Generic", L"EFldSTypes::Generic", L"Generic" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::HighSetPnt), 0, 0,  { L"", L"", L"", L"HighSetPnt", L"EFldSTypes::HighSetPnt", L"High Set Point" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::HumSensor), 0, 0,  { L"", L"", L"", L"HumSensor", L"EFldSTypes::HumSensor", L"Humidity Sensor" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::ItemCookie), 0, 0,  { L"", L"", L"", L"ItemCookie", L"EFldSTypes::ItemCookie", L"Media Item Cookie" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::LEDStatus), 0, 0,  { L"", L"", L"", L"LEDStatus", L"EFldSTypes::LEDStatus", L"LED Status" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::LightSwitch), 0, 0,  { L"", L"", L"", L"LightSwitch", L"EFldSTypes::LightSwitch", L"Light Switch" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::LowSetPnt), 0, 0,  { L"", L"", L"", L"LowSetPnt", L"EFldSTypes::LowSetPnt", L"Low Set Point" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::MediaCookie), 0, 0,  { L"", L"", L"", L"MediaCookie", L"EFldSTypes::MediaCookie", L"Media Cookie" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::MediaRepoDrv), 0, 0,  { L"", L"", L"", L"MediaRepoDrv", L"EFldSTypes::MediaRepoDrv", L"Media Repo Moniker" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::MediaSrc), 0, 0,  { L"", L"", L"", L"MediaSrc", L"EFldSTypes::MediaSrc", L"MediaSrc" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::MediaState), 0, 0,  { L"", L"", L"", L"MediaState", L"EFldSTypes::MediaState", L"MediaState" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::MediaTransport), 0, 0,  { L"", L"", L"", L"MediaTransport", L"EFldSTypes::MediaTransport", L"Media Transport" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::Mute), 0, 0,  { L"", L"", L"", L"Mute", L"EFldSTypes::Mute", L"Mute" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::MotionSensor), 0, 0,  { L"", L"", L"", L"MotionSensor", L"EFldSTypes::MotionSensor", L"Motion Sensor" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::Power), 0, 0,  { L"", L"", L"", L"Power", L"EFldSTypes::Power", L"Power" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::PowerState), 0, 0,  { L"", L"", L"", L"PowerState", L"EFldSTypes::PowerState", L"Power State" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::Relay), 0, 0,  { L"", L"", L"", L"Relay", L"EFldSTypes::Relay", L"Relay" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::RFIDTag), 0, 0,  { L"", L"", L"", L"RFIDTag", L"EFldSTypes::RFIDTag", L"RFID Tag" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::SecZoneStat), 0, 0,  { L"", L"", L"", L"SecZoneStat", L"EFldSTypes::SecZoneStat", L"Security Zone Status" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::SourceInp), 0, 0,  { L"", L"", L"", L"SourceInp", L"EFldSTypes::SourceInp", L"Source Input" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::TempSensor), 0, 0,  { L"", L"", L"", L"TempSensor", L"EFldSTypes::TempSensor", L"TempSensor" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::TitleCookie), 0, 0,  { L"", L"", L"", L"TitleCookie", L"EFldSTypes::TitleCookie", L"Media Title Set Cookie" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::TunerFreq), 0, 0,  { L"", L"", L"", L"TunerFreq", L"EFldSTypes::TunerFreq", L"Tuner Frequency" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::Volume), 0, 0,  { L"", L"", L"", L"Volume", L"EFldSTypes::Volume", L"Volume" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::VolumeAdj), 0, 0,  { L"", L"", L"", L"VolumeAdj", L"EFldSTypes::VolumeAdj", L"Volume Adjust" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldSTypes::LockState), 0, 0,  { L"", L"", L"", L"LockState", L"EFldSTypes::LockState", L"Lock State" } }

};

static TEnumMap emapEFldSTypes
(
     L"EFldSTypes"
     , 41
     , kCIDLib::False
     , aeitemValues_EFldSTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EFldSTypes::Count)
);

const TString& tCQCKit::strAltXlatEFldSTypes(const tCQCKit::EFldSTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEFldSTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EFldSTypes tCQCKit::eAltXlatEFldSTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EFldSTypes(emapEFldSTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

const TString& tCQCKit::strXlatEFldSTypes(const tCQCKit::EFldSTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEFldSTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EFldSTypes tCQCKit::eXlatEFldSTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EFldSTypes(emapEFldSTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EFldSTypes eVal)
{
    strmTar << emapEFldSTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EFldSTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EFldSTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EFldSTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EFldSTypes eVal)
{
    return emapEFldSTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EFldTypes[7] = 
{
    {  tCIDLib::TInt4(tCQCKit::EFldTypes::Boolean), 0, 0,  { L"", L"", L"", L"Boolean", L"EFldTypes::Boolean", L"MEng.Boolean" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldTypes::Card), 0, 0,  { L"", L"", L"", L"Card", L"EFldTypes::Card", L"MEng.Card4" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldTypes::Float), 0, 0,  { L"", L"", L"", L"Float", L"EFldTypes::Float", L"MEng.Float8" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldTypes::Int), 0, 0,  { L"", L"", L"", L"Int", L"EFldTypes::Int", L"MEng.Int4" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldTypes::String), 0, 0,  { L"", L"", L"", L"String", L"EFldTypes::String", L"MEng.String" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldTypes::StringList), 0, 0,  { L"", L"", L"", L"StringList", L"EFldTypes::StringList", L"MEng.StringList" } }
  , {  tCIDLib::TInt4(tCQCKit::EFldTypes::Time), 0, 0,  { L"", L"", L"", L"Time", L"EFldTypes::Time", L"MEng.Time" } }

};

static TEnumMap emapEFldTypes
(
     L"EFldTypes"
     , 7
     , kCIDLib::False
     , aeitemValues_EFldTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EFldTypes::Count)
);

const TString& tCQCKit::strAltXlatEFldTypes(const tCQCKit::EFldTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEFldTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EFldTypes tCQCKit::eAltXlatEFldTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EFldTypes(emapEFldTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

const TString& tCQCKit::strXlatEFldTypes(const tCQCKit::EFldTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEFldTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EFldTypes tCQCKit::eXlatEFldTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EFldTypes(emapEFldTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EFldTypes eVal)
{
    strmTar << emapEFldTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EFldTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EFldTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EFldTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EFldTypes eVal)
{
    return emapEFldTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EIVFrmOps[8] = 
{
    {  tCIDLib::TInt4(tCQCKit::EIVFrmOps::FSMode), 0, 0,  { L"", L"", L"", L"FSMode", L"EIVFrmOps::FSMode", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVFrmOps::Hide), 0, 0,  { L"", L"", L"", L"Hide", L"EIVFrmOps::Hide", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVFrmOps::Maximize), 0, 0,  { L"", L"", L"", L"Maximize", L"EIVFrmOps::Maximize", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVFrmOps::Minimize), 0, 0,  { L"", L"", L"", L"Minimize", L"EIVFrmOps::Minimize", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVFrmOps::Restore), 0, 0,  { L"", L"", L"", L"Restore", L"EIVFrmOps::Restore", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVFrmOps::Show), 0, 0,  { L"", L"", L"", L"Show", L"EIVFrmOps::Show", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVFrmOps::ToFront), 0, 0,  { L"", L"", L"", L"ToFront", L"EIVFrmOps::ToFront", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVFrmOps::ToBack), 0, 0,  { L"", L"", L"", L"ToBack", L"EIVFrmOps::ToBack", L"" } }

};

static TEnumMap emapEIVFrmOps
(
     L"EIVFrmOps"
     , 8
     , kCIDLib::False
     , aeitemValues_EIVFrmOps
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EIVFrmOps::Count)
);

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EIVFrmOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EIVFrmOps(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EIVFrmOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EIVFrmOps eVal)
{
    return emapEIVFrmOps.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ELogOps[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::ELogOps::OR), 0, kKitMsgs::midLogOp_OR,  { L"", L"Any True", L"", L"OR", L"ELogOps::OR", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ELogOps::AND), 0, kKitMsgs::midLogOp_AND,  { L"", L"All True", L"", L"AND", L"ELogOps::AND", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ELogOps::XOR), 0, kKitMsgs::midLogOp_XOR,  { L"", L"Only One True", L"", L"XOR", L"ELogOps::XOR", L"" } }

};

static TEnumMap emapELogOps
(
     L"ELogOps"
     , 3
     , kCIDLib::False
     , aeitemValues_ELogOps
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::ELogOps::Count)
);

const TString& tCQCKit::strAltXlatELogOps(const tCQCKit::ELogOps eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapELogOps.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::AltText, bThrowIfNot);
}

tCQCKit::ELogOps tCQCKit::eAltXlatELogOps(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ELogOps(emapELogOps.i4MapEnumText(strVal, TEnumMap::ETextVals::AltText, bThrowIfNot));
}

tCIDLib::TVoid tCQCKit::FormatELogOps(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapELogOps.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCKit::strXlatELogOps(const tCQCKit::ELogOps eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapELogOps.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::ELogOps tCQCKit::eXlatELogOps(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ELogOps(emapELogOps.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::ELogOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::ELogOps(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::ELogOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ELogOps eVal)
{
    return emapELogOps.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ELoginRes[5] = 
{
    {  tCIDLib::TInt4(tCQCKit::ELoginRes::Ok), 0, kKitMsgs::midLoginRes_Ok,  { L"", L"", L"", L"Ok", L"ELoginRes::Ok", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ELoginRes::BadCred), 0, kKitMsgs::midLoginRes_BadCred,  { L"", L"", L"", L"BadCred", L"ELoginRes::BadCred", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ELoginRes::TimeLimits), 0, kKitMsgs::midLoginRes_TimeLimits,  { L"", L"", L"", L"TimeLimits", L"ELoginRes::TimeLimits", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ELoginRes::Limit), 0, kKitMsgs::midLoginRes_Limit,  { L"", L"", L"", L"Limit", L"ELoginRes::Limit", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ELoginRes::Exception), 0, kKitMsgs::midLoginRes_Exception,  { L"", L"", L"", L"Exception", L"ELoginRes::Exception", L"" } }

};

static TEnumMap emapELoginRes
(
     L"ELoginRes"
     , 5
     , kCIDLib::False
     , aeitemValues_ELoginRes
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::ELoginRes::Count)
);

const TString& tCQCKit::strXlatELoginRes(const tCQCKit::ELoginRes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapELoginRes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::ELoginRes tCQCKit::eXlatELoginRes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ELoginRes(emapELoginRes.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::ELoginRes eVal)
{
    strmTar << emapELoginRes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::ELoginRes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::ELoginRes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::ELoginRes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ELoginRes eVal)
{
    return emapELoginRes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EIVMiscOps[6] = 
{
    {  tCIDLib::TInt4(tCQCKit::EIVMiscOps::Blanker), 0, 0,  { L"", L"Blanker", L"", L"Blanker", L"EIVMiscOps::Blanker", L"Blanker" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVMiscOps::BlankDisplay), 0, 0,  { L"", L"Blank Display", L"", L"BlankDisplay", L"EIVMiscOps::BlankDisplay", L"Blank Display" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVMiscOps::BlankAndBlanker), 0, 0,  { L"", L"Blank and Blanker", L"", L"BlankAndBlanker", L"EIVMiscOps::BlankAndBlanker", L"Blank and Blanker" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVMiscOps::ClockBlanker), 0, 0,  { L"", L"Clock Blanker", L"", L"ClockBlanker", L"EIVMiscOps::ClockBlanker", L"Clock Blanker" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVMiscOps::ShowBlanker), 0, 0,  { L"", L"Slideshow Blanker", L"", L"ShowBlanker", L"EIVMiscOps::ShowBlanker", L"Slideshow Blanker" } }
  , {  tCIDLib::TInt4(tCQCKit::EIVMiscOps::Unblank), 0, 0,  { L"", L"Unblank", L"", L"Unblank", L"EIVMiscOps::Unblank", L"Unblank" } }

};

static TEnumMap emapEIVMiscOps
(
     L"EIVMiscOps"
     , 6
     , kCIDLib::False
     , aeitemValues_EIVMiscOps
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EIVMiscOps::Count)
);

const TString& tCQCKit::strAltXlatEIVMiscOps(const tCQCKit::EIVMiscOps eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEIVMiscOps.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::AltText, bThrowIfNot);
}

tCQCKit::EIVMiscOps tCQCKit::eAltXlatEIVMiscOps(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EIVMiscOps(emapEIVMiscOps.i4MapEnumText(strVal, TEnumMap::ETextVals::AltText, bThrowIfNot));
}

const TString& tCQCKit::strXlatEIVMiscOps(const tCQCKit::EIVMiscOps eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEIVMiscOps.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EIVMiscOps tCQCKit::eXlatEIVMiscOps(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EIVMiscOps(emapEIVMiscOps.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EIVMiscOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EIVMiscOps(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EIVMiscOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EIVMiscOps eVal)
{
    return emapEIVMiscOps.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EPackTypes[5] = 
{
    {  tCIDLib::TInt4(tCQCKit::EPackTypes::ProtocolDrv), 0, 0,  { L"", L"", L"", L"ProtocolDrv", L"EPackTypes::ProtocolDrv", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPackTypes::CMLDrv), 0, 0,  { L"", L"", L"", L"CMLDrv", L"EPackTypes::CMLDrv", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPackTypes::MacroBundle), 0, 0,  { L"", L"", L"", L"MacroBundle", L"EPackTypes::MacroBundle", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPackTypes::ImgBundle), 0, 0,  { L"", L"", L"", L"ImgBundle", L"EPackTypes::ImgBundle", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPackTypes::IntfTemplate), 0, 0,  { L"", L"", L"", L"IntfTemplate", L"EPackTypes::IntfTemplate", L"" } }

};

static TEnumMap emapEPackTypes
(
     L"EPackTypes"
     , 5
     , kCIDLib::False
     , aeitemValues_EPackTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EPackTypes::Count)
);

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EPackTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EPackTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EPackTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EPackTypes eVal)
{
    return emapEPackTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EPackFlTypes[6] = 
{
    {  tCIDLib::TInt4(tCQCKit::EPackFlTypes::Manifest), 0, 0,  { L"", L"", L"", L"Manifest", L"EPackFlTypes::Manifest", L"Driver Manifest" } }
  , {  tCIDLib::TInt4(tCQCKit::EPackFlTypes::CMLMacro), 0, 0,  { L"", L"", L"", L"CMLMacro", L"EPackFlTypes::CMLMacro", L"CML Macro" } }
  , {  tCIDLib::TInt4(tCQCKit::EPackFlTypes::PDLFile), 0, 0,  { L"", L"", L"", L"PDLFile", L"EPackFlTypes::PDLFile", L"PDL File" } }
  , {  tCIDLib::TInt4(tCQCKit::EPackFlTypes::PNGImage), 0, 0,  { L"", L"", L"", L"PNGImage", L"EPackFlTypes::PNGImage", L"PNG Image" } }
  , {  tCIDLib::TInt4(tCQCKit::EPackFlTypes::IntfTmpl), 0, 0,  { L"", L"", L"", L"IntfTmpl", L"EPackFlTypes::IntfTmpl", L"Interface Template" } }
  , {  tCIDLib::TInt4(tCQCKit::EPackFlTypes::DevMap), 0, 0,  { L"", L"", L"", L"DevMap", L"EPackFlTypes::DevMap", L"Device Map" } }

};

static TEnumMap emapEPackFlTypes
(
     L"EPackFlTypes"
     , 6
     , kCIDLib::False
     , aeitemValues_EPackFlTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EPackFlTypes::Count)
);

const TString& tCQCKit::strLoadEPackFlTypes(const tCQCKit::EPackFlTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEPackFlTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}
const TString& tCQCKit::strXlatEPackFlTypes(const tCQCKit::EPackFlTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEPackFlTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EPackFlTypes tCQCKit::eXlatEPackFlTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EPackFlTypes(emapEPackFlTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EPackFlTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EPackFlTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EPackFlTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EPackFlTypes eVal)
{
    return emapEPackFlTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EPowerStatus[5] = 
{
    {  tCIDLib::TInt4(tCQCKit::EPowerStatus::Off), 0, 0,  { L"", L"", L"", L"Off", L"EPowerStatus::Off", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPowerStatus::Starting), 0, 0,  { L"", L"", L"", L"Starting", L"EPowerStatus::Starting", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPowerStatus::Ready), 0, 0,  { L"", L"", L"", L"Ready", L"EPowerStatus::Ready", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPowerStatus::Stopping), 0, 0,  { L"", L"", L"", L"Stopping", L"EPowerStatus::Stopping", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPowerStatus::Failed), 0, 0,  { L"", L"", L"", L"Failed", L"EPowerStatus::Failed", L"" } }

};

static TEnumMap emapEPowerStatus
(
     L"EPowerStatus"
     , 5
     , kCIDLib::False
     , aeitemValues_EPowerStatus
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EPowerStatus::Count)
);

const TString& tCQCKit::strXlatEPowerStatus(const tCQCKit::EPowerStatus eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEPowerStatus.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EPowerStatus tCQCKit::eXlatEPowerStatus(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EPowerStatus(emapEPowerStatus.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EPowerStatus eVal)
{
    strmTar << emapEPowerStatus.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EPowerStatus* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EPowerStatus(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EPowerStatus* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EPowerStatus eVal)
{
    return emapEPowerStatus.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EPromptTypes[13] = 
{
    {  tCIDLib::TInt4(tCQCKit::EPromptTypes::Bool), 0, 0,  { L"", L"", L"", L"Bool", L"EPromptTypes::Bool", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::List), 0, 0,  { L"", L"", L"", L"List", L"EPromptTypes::List", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::Text), 0, 0,  { L"", L"", L"", L"Text", L"EPromptTypes::Text", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::Range), 0, 0,  { L"", L"", L"", L"Range", L"EPromptTypes::Range", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::TrayMonBinding), 0, 0,  { L"", L"", L"", L"TrayMonBinding", L"EPromptTypes::TrayMonBinding", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::Path), 0, 0,  { L"", L"", L"", L"Path", L"EPromptTypes::Path", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::File), 0, 0,  { L"", L"", L"", L"File", L"EPromptTypes::File", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::RepoDriver), 0, 0,  { L"", L"", L"", L"RepoDriver", L"EPromptTypes::RepoDriver", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::MultiList), 0, 0,  { L"", L"", L"", L"MultiList", L"EPromptTypes::MultiList", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::ODBCSrc), 0, 0,  { L"", L"", L"", L"ODBCSrc", L"EPromptTypes::ODBCSrc", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::AudioDev), 0, 0,  { L"", L"", L"", L"AudioDev", L"EPromptTypes::AudioDev", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::TTSVoice), 0, 0,  { L"", L"", L"", L"TTSVoice", L"EPromptTypes::TTSVoice", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EPromptTypes::NamedMList), 0, 0,  { L"", L"", L"", L"NamedMList", L"EPromptTypes::NamedMList", L"" } }

};

static TEnumMap emapEPromptTypes
(
     L"EPromptTypes"
     , 13
     , kCIDLib::False
     , aeitemValues_EPromptTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EPromptTypes::Count)
);

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EPromptTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EPromptTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EPromptTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EPromptTypes eVal)
{
    return emapEPromptTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EReplyStyles[4] = 
{
    {  tCIDLib::TInt4(tCQCKit::EReplyStyles::None), 0, 0,  { L"", L"", L"", L"None", L"EReplyStyles::None", L"None" } }
  , {  tCIDLib::TInt4(tCQCKit::EReplyStyles::Visual), 0, 0,  { L"", L"", L"", L"Visual", L"EReplyStyles::Visual", L"Visual Text" } }
  , {  tCIDLib::TInt4(tCQCKit::EReplyStyles::Spoken), 0, 0,  { L"", L"", L"", L"Spoken", L"EReplyStyles::Spoken", L"Spoken text" } }
  , {  tCIDLib::TInt4(tCQCKit::EReplyStyles::Both), 0, 0,  { L"", L"", L"", L"Both", L"EReplyStyles::Both", L"Visual and Spoken" } }

};

static TEnumMap emapEReplyStyles
(
     L"EReplyStyles"
     , 4
     , kCIDLib::False
     , aeitemValues_EReplyStyles
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EReplyStyles::Count)
);

const TString& tCQCKit::strAltXlatEReplyStyles(const tCQCKit::EReplyStyles eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEReplyStyles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EReplyStyles tCQCKit::eAltXlatEReplyStyles(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EReplyStyles(emapEReplyStyles.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

const TString& tCQCKit::strXlatEReplyStyles(const tCQCKit::EReplyStyles eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEReplyStyles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EReplyStyles tCQCKit::eXlatEReplyStyles(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EReplyStyles(emapEReplyStyles.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EReplyStyles* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EReplyStyles(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EReplyStyles* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EReplyStyles eVal)
{
    return emapEReplyStyles.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EReqAccess[10] = 
{
    {  tCIDLib::TInt4(tCQCKit::EReqAccess::CanRead), 0, 0,  { L"", L"", L"", L"CanRead", L"EReqAccess::CanRead", L"Can Read" } }
  , {  tCIDLib::TInt4(tCQCKit::EReqAccess::CanWrite), 0, 0,  { L"", L"", L"", L"CanWrite", L"EReqAccess::CanWrite", L"Can Write" } }
  , {  tCIDLib::TInt4(tCQCKit::EReqAccess::ReadOrWrite), 0, 0,  { L"", L"", L"", L"ReadOrWrite", L"EReqAccess::ReadOrWrite", L"Read or Write" } }
  , {  tCIDLib::TInt4(tCQCKit::EReqAccess::MustRead), 0, 0,  { L"", L"", L"", L"MustRead", L"EReqAccess::MustRead", L"Must Read" } }
  , {  tCIDLib::TInt4(tCQCKit::EReqAccess::ReadOnly), 0, 0,  { L"", L"", L"", L"ReadOnly", L"EReqAccess::ReadOnly", L"Read Only" } }
  , {  tCIDLib::TInt4(tCQCKit::EReqAccess::MReadCWrite), 0, 0,  { L"", L"", L"", L"MReadCWrite", L"EReqAccess::MReadCWrite", L"Must Read/Can Write" } }
  , {  tCIDLib::TInt4(tCQCKit::EReqAccess::MustWrite), 0, 0,  { L"", L"", L"", L"MustWrite", L"EReqAccess::MustWrite", L"Must Write" } }
  , {  tCIDLib::TInt4(tCQCKit::EReqAccess::WriteOnly), 0, 0,  { L"", L"", L"", L"WriteOnly", L"EReqAccess::WriteOnly", L"Write Only" } }
  , {  tCIDLib::TInt4(tCQCKit::EReqAccess::CReadMWrite), 0, 0,  { L"", L"", L"", L"CReadMWrite", L"EReqAccess::CReadMWrite", L"Can Read/Must Write" } }
  , {  tCIDLib::TInt4(tCQCKit::EReqAccess::ReadAndWrite), 0, 0,  { L"", L"", L"", L"ReadAndWrite", L"EReqAccess::ReadAndWrite", L"Read and Write" } }

};

static TEnumMap emapEReqAccess
(
     L"EReqAccess"
     , 10
     , kCIDLib::True
     , aeitemValues_EReqAccess
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EReqAccess::None)
);

const TString& tCQCKit::strAltXlatEReqAccess(const tCQCKit::EReqAccess eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEReqAccess.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EReqAccess tCQCKit::eAltXlatEReqAccess(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EReqAccess(emapEReqAccess.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

const TString& tCQCKit::strLoadEReqAccess(const tCQCKit::EReqAccess eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEReqAccess.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}
tCIDLib::TVoid tCQCKit::FormatEReqAccess(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEReqAccess.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCKit::strXlatEReqAccess(const tCQCKit::EReqAccess eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEReqAccess.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EReqAccess tCQCKit::eXlatEReqAccess(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EReqAccess(emapEReqAccess.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EReqAccess* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EReqAccess(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EReqAccess* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EReqAccess eVal)
{
    return emapEReqAccess.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ESchTypes[9] = 
{
    {  tCIDLib::TInt4(tCQCKit::ESchTypes::Once), 0, kKitMsgs::midSchType_Once,  { L"", L"", L"", L"Once", L"ESchTypes::Once", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ESchTypes::Daily), 0, kKitMsgs::midSchType_Daily,  { L"", L"", L"", L"Daily", L"ESchTypes::Daily", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ESchTypes::Weekly), 0, kKitMsgs::midSchType_Weekly,  { L"", L"", L"", L"Weekly", L"ESchTypes::Weekly", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ESchTypes::Monthly), 0, kKitMsgs::midSchType_Monthly,  { L"", L"", L"", L"Monthly", L"ESchTypes::Monthly", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ESchTypes::MinPeriod), 0, kKitMsgs::midSchType_MinPeriod,  { L"", L"", L"", L"MinPeriod", L"ESchTypes::MinPeriod", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ESchTypes::HrPeriod), 0, kKitMsgs::midSchType_HrPeriod,  { L"", L"", L"", L"HrPeriod", L"ESchTypes::HrPeriod", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ESchTypes::DayPeriod), 0, kKitMsgs::midSchType_DayPeriod,  { L"", L"", L"", L"DayPeriod", L"ESchTypes::DayPeriod", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ESchTypes::Sunrise), 0, kKitMsgs::midSchType_Sunrise,  { L"", L"", L"", L"Sunrise", L"ESchTypes::Sunrise", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ESchTypes::Sunset), 0, kKitMsgs::midSchType_Sunset,  { L"", L"", L"", L"Sunset", L"ESchTypes::Sunset", L"" } }

};

static TEnumMap emapESchTypes
(
     L"ESchTypes"
     , 9
     , kCIDLib::False
     , aeitemValues_ESchTypes
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::ESchTypes::Count)
);

const TString& tCQCKit::strLoadESchTypes(const tCQCKit::ESchTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapESchTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}
const TString& tCQCKit::strXlatESchTypes(const tCQCKit::ESchTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapESchTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::ESchTypes tCQCKit::eXlatESchTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ESchTypes(emapESchTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::ESchTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::ESchTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::ESchTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ESchTypes eVal)
{
    return emapESchTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EScrNavOps[11] = 
{
    {  tCIDLib::TInt4(tCQCKit::EScrNavOps::Back), 0, 0,  { L"", L"", L"", L"Back", L"EScrNavOps::Back", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::Down), 0, 0,  { L"", L"", L"", L"Down", L"EScrNavOps::Down", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::End), 0, 0,  { L"", L"", L"", L"End", L"EScrNavOps::End", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::Home), 0, 0,  { L"", L"", L"", L"Home", L"EScrNavOps::Home", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::Left), 0, 0,  { L"", L"", L"", L"Left", L"EScrNavOps::Left", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::Prev), 0, 0,  { L"", L"", L"", L"Prev", L"EScrNavOps::Prev", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::PrevPage), 0, 0,  { L"", L"", L"", L"PrevPage", L"EScrNavOps::PrevPage", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::Next), 0, 0,  { L"", L"", L"", L"Next", L"EScrNavOps::Next", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::NextPage), 0, 0,  { L"", L"", L"", L"NextPage", L"EScrNavOps::NextPage", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::Right), 0, 0,  { L"", L"", L"", L"Right", L"EScrNavOps::Right", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EScrNavOps::Up), 0, 0,  { L"", L"", L"", L"Up", L"EScrNavOps::Up", L"" } }

};

static TEnumMap emapEScrNavOps
(
     L"EScrNavOps"
     , 11
     , kCIDLib::False
     , aeitemValues_EScrNavOps
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EScrNavOps::Count)
);

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EScrNavOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EScrNavOps(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EScrNavOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EScrNavOps eVal)
{
    return emapEScrNavOps.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EStatements[17] = 
{
    {  tCIDLib::TInt4(tCQCKit::EStatements::None), 0, kKitMsgs::midStatement_None,  { L"", L"", L"", L"None", L"EStatements::None", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsEqual), 0, kKitMsgs::midStatement_IsEqual,  { L"", L"", L"", L"IsEqual", L"EStatements::IsEqual", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::NotEqual), 0, kKitMsgs::midStatement_NotEqual,  { L"", L"", L"", L"NotEqual", L"EStatements::NotEqual", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsTrue), 0, kKitMsgs::midStatement_IsTrue,  { L"", L"", L"", L"IsTrue", L"EStatements::IsTrue", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsFalse), 0, kKitMsgs::midStatement_IsFalse,  { L"", L"", L"", L"IsFalse", L"EStatements::IsFalse", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsGThan), 0, kKitMsgs::midStatement_IsGThan,  { L"", L"", L"", L"IsGThan", L"EStatements::IsGThan", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsGThanEq), 0, kKitMsgs::midStatement_IsGThanEq,  { L"", L"", L"", L"IsGThanEq", L"EStatements::IsGThanEq", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsLsThan), 0, kKitMsgs::midStatement_IsLsThan,  { L"", L"", L"", L"IsLsThan", L"EStatements::IsLsThan", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsLsThanEq), 0, kKitMsgs::midStatement_IsLsThanEq,  { L"", L"", L"", L"IsLsThanEq", L"EStatements::IsLsThanEq", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsNonNull), 0, kKitMsgs::midStatement_IsNonNull,  { L"", L"", L"", L"IsNonNull", L"EStatements::IsNonNull", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsNegative), 0, kKitMsgs::midStatement_IsNegative,  { L"", L"", L"", L"IsNegative", L"EStatements::IsNegative", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsPositive), 0, kKitMsgs::midStatement_IsPositive,  { L"", L"", L"", L"IsPositive", L"EStatements::IsPositive", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsEven), 0, kKitMsgs::midStatement_IsEven,  { L"", L"", L"", L"IsEven", L"EStatements::IsEven", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsOdd), 0, kKitMsgs::midStatement_IsOdd,  { L"", L"", L"", L"IsOdd", L"EStatements::IsOdd", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsMultipleOf), 0, kKitMsgs::midStatement_IsMultipleOf,  { L"", L"", L"", L"IsMultipleOf", L"EStatements::IsMultipleOf", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsAlpha), 0, kKitMsgs::midStatement_IsAlpha,  { L"", L"", L"", L"IsAlpha", L"EStatements::IsAlpha", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStatements::IsAlphaNum), 0, kKitMsgs::midStatement_IsAlphaNum,  { L"", L"", L"", L"IsAlphaNum", L"EStatements::IsAlphaNum", L"" } }

};

static TEnumMap emapEStatements
(
     L"EStatements"
     , 17
     , kCIDLib::False
     , aeitemValues_EStatements
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::EStatements::Count)
);

const TString& tCQCKit::strXlatEStatements(const tCQCKit::EStatements eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEStatements.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EStatements tCQCKit::eXlatEStatements(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EStatements(emapEStatements.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EStatements* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EStatements(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EStatements* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EStatements eVal)
{
    return emapEStatements.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EStmtRes[4] = 
{
    {  tCIDLib::TInt4(tCQCKit::EStmtRes::True), 0, 0,  { L"", L"", L"", L"True", L"EStmtRes::True", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStmtRes::False), 0, 0,  { L"", L"", L"", L"False", L"EStmtRes::False", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStmtRes::BadValue), 0, 0,  { L"", L"", L"", L"BadValue", L"EStmtRes::BadValue", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStmtRes::BadStatement), 0, 0,  { L"", L"", L"", L"BadStatement", L"EStmtRes::BadStatement", L"" } }

};

static TEnumMap emapEStmtRes
(
     L"EStmtRes"
     , 4
     , kCIDLib::False
     , aeitemValues_EStmtRes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EStmtRes::Count)
);

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EStmtRes eVal)
{
    return emapEStmtRes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EStdACOps[5] = 
{
    {  tCIDLib::TInt4(tCQCKit::EStdACOps::Maximize), 0, 0,  { L"", L"", L"", L"Maximize", L"EStdACOps::Maximize", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdACOps::Minimize), 0, 0,  { L"", L"", L"", L"Minimize", L"EStdACOps::Minimize", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdACOps::Restore), 0, 0,  { L"", L"", L"", L"Restore", L"EStdACOps::Restore", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdACOps::ToTop), 0, 0,  { L"", L"", L"", L"ToTop", L"EStdACOps::ToTop", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdACOps::ToBack), 0, 0,  { L"", L"", L"", L"ToBack", L"EStdACOps::ToBack", L"" } }

};

static TEnumMap emapEStdACOps
(
     L"EStdACOps"
     , 5
     , kCIDLib::False
     , aeitemValues_EStdACOps
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EStdACOps::Count)
);

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EStdACOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EStdACOps(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EStdACOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EStdACOps eVal)
{
    return emapEStdACOps.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EStdDrvEvs[7] = 
{
    {  tCIDLib::TInt4(tCQCKit::EStdDrvEvs::FldChange), 0, 0,  { L"", L"", L"", L"FldChange", L"EStdDrvEvs::FldChange", L"cqsl.fldchange" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdDrvEvs::LoadChange), 0, 0,  { L"", L"", L"", L"LoadChange", L"EStdDrvEvs::LoadChange", L"cqsl.loadchange" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdDrvEvs::LockStatus), 0, 0,  { L"", L"", L"", L"LockStatus", L"EStdDrvEvs::LockStatus", L"cqsl.lockstatus" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdDrvEvs::Motion), 0, 0,  { L"", L"", L"", L"Motion", L"EStdDrvEvs::Motion", L"cqsl.motion" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdDrvEvs::Presence), 0, 0,  { L"", L"", L"", L"Presence", L"EStdDrvEvs::Presence", L"cqsl.presence" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdDrvEvs::UserAction), 0, 0,  { L"", L"", L"", L"UserAction", L"EStdDrvEvs::UserAction", L"cqsl.useract" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdDrvEvs::ZoneAlarm), 0, 0,  { L"", L"", L"", L"ZoneAlarm", L"EStdDrvEvs::ZoneAlarm", L"cqsl.zonealarm" } }

};

static TEnumMap emapEStdDrvEvs
(
     L"EStdDrvEvs"
     , 7
     , kCIDLib::False
     , aeitemValues_EStdDrvEvs
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EStdDrvEvs::Count)
);

const TString& tCQCKit::strLoadEStdDrvEvs(const tCQCKit::EStdDrvEvs eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEStdDrvEvs.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}
const TString& tCQCKit::strXlatEStdDrvEvs(const tCQCKit::EStdDrvEvs eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEStdDrvEvs.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EStdDrvEvs tCQCKit::eXlatEStdDrvEvs(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EStdDrvEvs(emapEStdDrvEvs.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EStdDrvEvs eVal)
{
    return emapEStdDrvEvs.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EStdFields[11] = 
{
    {  tCIDLib::TInt4(tCQCKit::EStdFields::BadMsgs), 0, 0,  { L"", L"$BadMsgs", L"", L"BadMsgs", L"EStdFields::BadMsgs", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::FailedWrites), 0, 0,  { L"", L"$FailedWrites", L"", L"FailedWrites", L"EStdFields::FailedWrites", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::LoadTime), 0, 0,  { L"", L"$LoadTime", L"", L"LoadTime", L"EStdFields::LoadTime", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::LostCommRes), 0, 0,  { L"", L"$LostCommRes", L"", L"LostCommRes", L"EStdFields::LostCommRes", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::LostConn), 0, 0,  { L"", L"$LostConn", L"", L"LostConn", L"EStdFields::LostConn", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::Naks), 0, 0,  { L"", L"$Naks", L"", L"Naks", L"EStdFields::Naks", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::Reconfigs), 0, 0,  { L"", L"$Reconfigs", L"", L"Reconfigs", L"EStdFields::Reconfigs", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::Timeouts), 0, 0,  { L"", L"$Timeouts", L"", L"Timeouts", L"EStdFields::Timeouts", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::UnknownMsgs), 0, 0,  { L"", L"$UnknownMsgs", L"", L"UnknownMsgs", L"EStdFields::UnknownMsgs", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::UnknownWrites), 0, 0,  { L"", L"$UnknownWrites", L"", L"UnknownWrites", L"EStdFields::UnknownWrites", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EStdFields::Verbosity), 0, 0,  { L"", L"$Verbosity", L"", L"Verbosity", L"EStdFields::Verbosity", L"" } }

};

static TEnumMap emapEStdFields
(
     L"EStdFields"
     , 11
     , kCIDLib::False
     , aeitemValues_EStdFields
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EStdFields::Count)
);

const TString& tCQCKit::strAltXlatEStdFields(const tCQCKit::EStdFields eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEStdFields.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::AltText, bThrowIfNot);
}

tCQCKit::EStdFields tCQCKit::eAltXlatEStdFields(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EStdFields(emapEStdFields.i4MapEnumText(strVal, TEnumMap::ETextVals::AltText, bThrowIfNot));
}

const TString& tCQCKit::strXlatEStdFields(const tCQCKit::EStdFields eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEStdFields.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EStdFields tCQCKit::eXlatEStdFields(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EStdFields(emapEStdFields.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EStdFields eVal)
{
    strmTar << emapEStdFields.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EStdFields* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EStdFields(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EStdFields* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EStdFields eVal)
{
    return emapEStdFields.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ETEvFilters[37] = 
{
    {  tCIDLib::TInt4(tCQCKit::ETEvFilters::Unused), 0, kKitMsgs::midTEvFT_Unused,  { L"", L"", L"", L"Unused", L"ETEvFilters::Unused", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::Arbitrary), 0, kKitMsgs::midTEvFT_Arbitrary,  { L"", L"", L"", L"Arbitrary", L"ETEvFilters::Arbitrary", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::FldValEquals), 0, kKitMsgs::midTEvFT_FldValEquals,  { L"", L"", L"", L"FldValEquals", L"ETEvFilters::FldValEquals", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsDevReady), 0, kKitMsgs::midTEvFT_IsDevReady,  { L"", L"", L"", L"IsDevReady", L"ETEvFilters::IsDevReady", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsFieldChange), 0, kKitMsgs::midTEvFT_IsFieldChange,  { L"", L"", L"", L"IsFieldChange", L"ETEvFilters::IsFieldChange", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsFieldChangeFor), 0, kKitMsgs::midTEvFT_IsFieldChangeFor,  { L"", L"", L"", L"IsFieldChangeFor", L"ETEvFilters::IsFieldChangeFor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsFromSource), 0, kKitMsgs::midTEvFT_IsFromSource,  { L"", L"", L"", L"IsFromSource", L"ETEvFilters::IsFromSource", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsNewFldValFor), 0, kKitMsgs::midTEvFT_IsNewFldValFor,  { L"", L"", L"", L"IsNewFldValFor", L"ETEvFilters::IsNewFldValFor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsInTimeRange), 0, kKitMsgs::midTEvFT_IsInTimeRange,  { L"", L"", L"", L"IsInTimeRange", L"ETEvFilters::IsInTimeRange", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsNight), 0, kKitMsgs::midTEvFT_IsNight,  { L"", L"", L"", L"IsNight", L"ETEvFilters::IsNight", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsOfClass), 0, kKitMsgs::midTEvFT_IsOfClass,  { L"", L"", L"", L"IsOfClass", L"ETEvFilters::IsOfClass", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsUserAction), 0, kKitMsgs::midTEvFT_IsUserAction,  { L"", L"", L"", L"IsUserAction", L"ETEvFilters::IsUserAction", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsUserActionFor), 0, kKitMsgs::midTEvFT_IsUserActionFor,  { L"", L"", L"", L"IsUserActionFor", L"ETEvFilters::IsUserActionFor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsUserActionFrom), 0, kKitMsgs::midTEvFT_IsUserActionFrom,  { L"", L"", L"", L"IsUserActionFrom", L"ETEvFilters::IsUserActionFrom", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsThisUserAction), 0, kKitMsgs::midTEvFT_IsThisUserAction,  { L"", L"", L"", L"IsThisUserAction", L"ETEvFilters::IsThisUserAction", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsLoadChange), 0, kKitMsgs::midTEvFT_IsLoadChange,  { L"", L"", L"", L"IsLoadChange", L"ETEvFilters::IsLoadChange", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsLoadChangeFor), 0, kKitMsgs::midTEvFT_IsLoadChangeFor,  { L"", L"", L"", L"IsLoadChangeFor", L"ETEvFilters::IsLoadChangeFor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsLoadChangeFrom), 0, kKitMsgs::midTEvFT_IsLoadChangeFrom,  { L"", L"", L"", L"IsLoadChangeFrom", L"ETEvFilters::IsLoadChangeFrom", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsLoadChangeOn), 0, kKitMsgs::midTEvFT_IsLoadChangeOn,  { L"", L"", L"", L"IsLoadChangeOn", L"ETEvFilters::IsLoadChangeOn", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsLoadChangeOff), 0, kKitMsgs::midTEvFT_IsLoadChangeOff,  { L"", L"", L"", L"IsLoadChangeOff", L"ETEvFilters::IsLoadChangeOff", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsMotionEv), 0, kKitMsgs::midTEvFT_IsMotionEv,  { L"", L"", L"", L"IsMotionEv", L"ETEvFilters::IsMotionEv", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsMotionEvFor), 0, kKitMsgs::midTEvFT_IsMotionEvFor,  { L"", L"", L"", L"IsMotionEvFor", L"ETEvFilters::IsMotionEvFor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsMotionEvFrom), 0, kKitMsgs::midTEvFT_IsMotionEvFrom,  { L"", L"", L"", L"IsMotionEvFrom", L"ETEvFilters::IsMotionEvFrom", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsMotionStartEv), 0, kKitMsgs::midTEvFT_IsMotionStartEv,  { L"", L"", L"", L"IsMotionStartEv", L"ETEvFilters::IsMotionStartEv", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsMotionEndEv), 0, kKitMsgs::midTEvFT_IsMotionEndEv,  { L"", L"", L"", L"IsMotionEndEv", L"ETEvFilters::IsMotionEndEv", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsZoneAlarm), 0, kKitMsgs::midTEvFT_IsZoneAlarm,  { L"", L"", L"", L"IsZoneAlarm", L"ETEvFilters::IsZoneAlarm", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsZoneAlarmFor), 0, kKitMsgs::midTEvFT_IsZoneAlarmFor,  { L"", L"", L"", L"IsZoneAlarmFor", L"ETEvFilters::IsZoneAlarmFor", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsZoneAlarmFrom), 0, kKitMsgs::midTEvFT_IsZoneAlarmFrom,  { L"", L"", L"", L"IsZoneAlarmFrom", L"ETEvFilters::IsZoneAlarmFrom", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsZoneViolated), 0, kKitMsgs::midTEvFT_IsZoneViolated,  { L"", L"", L"", L"IsZoneViolated", L"ETEvFilters::IsZoneViolated", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsZoneSecured), 0, kKitMsgs::midTEvFT_IsZoneSecured,  { L"", L"", L"", L"IsZoneSecured", L"ETEvFilters::IsZoneSecured", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsWeekDay), 0, kKitMsgs::midTEvFT_IsWeekDay,  { L"", L"", L"", L"IsWeekDay", L"ETEvFilters::IsWeekDay", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsPresenceEv), 0, kKitMsgs::midTEvFT_IsPresenceEv,  { L"", L"", L"", L"IsPresenceEv", L"ETEvFilters::IsPresenceEv", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsPresenceEvFrom), 0, kKitMsgs::midTEvFT_IsPresenceEvFrom,  { L"", L"", L"", L"IsPresenceEvFrom", L"ETEvFilters::IsPresenceEvFrom", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsPresenceEvInArea), 0, kKitMsgs::midTEvFT_IsPresenceEvInArea,  { L"", L"", L"", L"IsPresenceEvInArea", L"ETEvFilters::IsPresenceEvInArea", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsLockStatus), 0, kKitMsgs::midTEvFT_IsLockStatus,  { L"", L"", L"", L"IsLockStatus", L"ETEvFilters::IsLockStatus", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsLockStatusFrom), 0, kKitMsgs::midTEvFT_IsLockStatusFrom,  { L"", L"", L"", L"IsLockStatusFrom", L"ETEvFilters::IsLockStatusFrom", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFilters::IsLockStatusCode), 0, kKitMsgs::midTEvFT_IsLockStatusCode,  { L"", L"", L"", L"IsLockStatusCode", L"ETEvFilters::IsLockStatusCode", L"" } }

};

static TEnumMap emapETEvFilters
(
     L"ETEvFilters"
     , 37
     , kCIDLib::False
     , aeitemValues_ETEvFilters
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::ETEvFilters::Count)
);

const TString& tCQCKit::strXlatETEvFilters(const tCQCKit::ETEvFilters eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapETEvFilters.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::ETEvFilters tCQCKit::eXlatETEvFilters(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ETEvFilters(emapETEvFilters.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::ETEvFilters eVal)
{
    strmTar << emapETEvFilters.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::ETEvFilters* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::ETEvFilters(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::ETEvFilters* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ETEvFilters eVal)
{
    return emapETEvFilters.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ETEvFiltLOps[3] = 
{
    {  tCIDLib::TInt4(tCQCKit::ETEvFiltLOps::AND), 0, kKitMsgs::midTEvFLO_AND,  { L"", L"", L"", L"AND", L"ETEvFiltLOps::AND", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFiltLOps::OR), 0, kKitMsgs::midTEvFLO_OR,  { L"", L"", L"", L"OR", L"ETEvFiltLOps::OR", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::ETEvFiltLOps::XOR), 0, kKitMsgs::midTEvFLO_XOR,  { L"", L"", L"", L"XOR", L"ETEvFiltLOps::XOR", L"" } }

};

static TEnumMap emapETEvFiltLOps
(
     L"ETEvFiltLOps"
     , 3
     , kCIDLib::False
     , aeitemValues_ETEvFiltLOps
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::ETEvFiltLOps::Count)
);

const TString& tCQCKit::strXlatETEvFiltLOps(const tCQCKit::ETEvFiltLOps eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapETEvFiltLOps.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::ETEvFiltLOps tCQCKit::eXlatETEvFiltLOps(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::ETEvFiltLOps(emapETEvFiltLOps.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::ETEvFiltLOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::ETEvFiltLOps(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::ETEvFiltLOps* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::ETEvFiltLOps eVal)
{
    return emapETEvFiltLOps.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EEvSrvTypes[4] = 
{
    {  tCIDLib::TInt4(tCQCKit::EEvSrvTypes::None), 0, 0,  { L"", L"", L"", L"None", L"EEvSrvTypes::None", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvSrvTypes::EvMonitor), 0, 0,  { L"", L"", L"", L"EvMonitor", L"EEvSrvTypes::EvMonitor", L"Event Monitor" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvSrvTypes::TrgEvent), 0, 0,  { L"", L"", L"", L"TrgEvent", L"EEvSrvTypes::TrgEvent", L"Triggered Event" } }
  , {  tCIDLib::TInt4(tCQCKit::EEvSrvTypes::SchEvent), 0, 0,  { L"", L"", L"", L"SchEvent", L"EEvSrvTypes::SchEvent", L"Scheduled Event" } }

};

static TEnumMap emapEEvSrvTypes
(
     L"EEvSrvTypes"
     , 4
     , kCIDLib::False
     , aeitemValues_EEvSrvTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EEvSrvTypes::Count)
);

const TString& tCQCKit::strAltXlatEEvSrvTypes(const tCQCKit::EEvSrvTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEEvSrvTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EEvSrvTypes tCQCKit::eAltXlatEEvSrvTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EEvSrvTypes(emapEEvSrvTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

const TString& tCQCKit::strXlatEEvSrvTypes(const tCQCKit::EEvSrvTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEEvSrvTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EEvSrvTypes tCQCKit::eXlatEEvSrvTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EEvSrvTypes(emapEEvSrvTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EEvSrvTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EEvSrvTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EEvSrvTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EEvSrvTypes eVal)
{
    return emapEEvSrvTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EUserTypes[2] = 
{
    {  tCIDLib::TInt4(tCQCKit::EUserTypes::Standard), 0, 0,  { L"", L"", L"", L"Standard", L"EUserTypes::Standard", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EUserTypes::SecServer), 0, 0,  { L"", L"", L"", L"SecServer", L"EUserTypes::SecServer", L"" } }

};

static TEnumMap emapEUserTypes
(
     L"EUserTypes"
     , 2
     , kCIDLib::False
     , aeitemValues_EUserTypes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EUserTypes::Count)
);

tCIDLib::TVoid tCQCKit::FormatEUserTypes(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEUserTypes.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EUserTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EUserTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EUserTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EUserTypes eVal)
{
    return emapEUserTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EUserRoles[4] = 
{
    {  tCIDLib::TInt4(tCQCKit::EUserRoles::LimitedUser), 0, kKitMsgs::midRole_LimitedUser,  { L"", L"", L"", L"LimitedUser", L"EUserRoles::LimitedUser", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EUserRoles::NormalUser), 0, kKitMsgs::midRole_NormalUser,  { L"", L"", L"", L"NormalUser", L"EUserRoles::NormalUser", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EUserRoles::PowerUser), 0, kKitMsgs::midRole_PowerUser,  { L"", L"", L"", L"PowerUser", L"EUserRoles::PowerUser", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EUserRoles::SystemAdmin), 0, kKitMsgs::midRole_SystemAdmin,  { L"", L"", L"", L"SystemAdmin", L"EUserRoles::SystemAdmin", L"" } }

};

static TEnumMap emapEUserRoles
(
     L"EUserRoles"
     , 4
     , kCIDLib::False
     , aeitemValues_EUserRoles
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::EUserRoles::Count)
);

const TString& tCQCKit::strAltXlatEUserRoles(const tCQCKit::EUserRoles eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEUserRoles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCKit::EUserRoles tCQCKit::eAltXlatEUserRoles(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EUserRoles(emapEUserRoles.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

const TString& tCQCKit::strLoadEUserRoles(const tCQCKit::EUserRoles eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEUserRoles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}
tCIDLib::TVoid tCQCKit::FormatEUserRoles(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEUserRoles.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCKit::strXlatEUserRoles(const tCQCKit::EUserRoles eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEUserRoles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EUserRoles tCQCKit::eXlatEUserRoles(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EUserRoles(emapEUserRoles.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

TTextOutStream& tCQCKit::operator<<(TTextOutStream& strmTar, const tCQCKit::EUserRoles eVal)
{
    strmTar << emapEUserRoles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EUserRoles* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EUserRoles(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EUserRoles* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EUserRoles eVal)
{
    return emapEUserRoles.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EValResults[4] = 
{
    {  tCIDLib::TInt4(tCQCKit::EValResults::OK), 0, 0,  { L"", L"", L"", L"OK", L"EValResults::OK", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EValResults::Unchanged), 0, 0,  { L"", L"", L"", L"Unchanged", L"EValResults::Unchanged", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EValResults::Unconvertable), 0, 0,  { L"", L"", L"", L"Unconvertable", L"EValResults::Unconvertable", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EValResults::LimitViolation), 0, 0,  { L"", L"", L"", L"LimitViolation", L"EValResults::LimitViolation", L"" } }

};

static TEnumMap emapEValResults
(
     L"EValResults"
     , 4
     , kCIDLib::False
     , aeitemValues_EValResults
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EValResults::Count)
);

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EValResults eVal)
{
    return emapEValResults.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EValQRes[5] = 
{
    {  tCIDLib::TInt4(tCQCKit::EValQRes::NotFound), 0, 0,  { L"", L"", L"", L"NotFound", L"EValQRes::NotFound", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EValQRes::NoChange), 0, 0,  { L"", L"", L"", L"NoChange", L"EValQRes::NoChange", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EValQRes::NewValue), 0, 0,  { L"", L"", L"", L"NewValue", L"EValQRes::NewValue", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EValQRes::InError), 0, 0,  { L"", L"", L"", L"InError", L"EValQRes::InError", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EValQRes::Reconfig), 0, 0,  { L"", L"", L"", L"Reconfig", L"EValQRes::Reconfig", L"" } }

};

static TEnumMap emapEValQRes
(
     L"EValQRes"
     , 5
     , kCIDLib::False
     , aeitemValues_EValQRes
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EValQRes::Count)
);

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EValQRes eVal)
{
    return emapEValQRes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EVerboseLvls[4] = 
{
    {  tCIDLib::TInt4(tCQCKit::EVerboseLvls::Off), 0, kKitMsgs::midVLvl_Off,  { L"", L"", L"", L"Off", L"EVerboseLvls::Off", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EVerboseLvls::Low), 0, kKitMsgs::midVLvl_Low,  { L"", L"", L"", L"Low", L"EVerboseLvls::Low", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EVerboseLvls::Medium), 0, kKitMsgs::midVLvl_Medium,  { L"", L"", L"", L"Medium", L"EVerboseLvls::Medium", L"" } }
  , {  tCIDLib::TInt4(tCQCKit::EVerboseLvls::High), 0, kKitMsgs::midVLvl_High,  { L"", L"", L"", L"High", L"EVerboseLvls::High", L"" } }

};

static TEnumMap emapEVerboseLvls
(
     L"EVerboseLvls"
     , 4
     , kCIDLib::False
     , aeitemValues_EVerboseLvls
     , &facCQCKit()
     , tCIDLib::TCard4(tCQCKit::EVerboseLvls::Count)
);

const TString& tCQCKit::strXlatEVerboseLvls(const tCQCKit::EVerboseLvls eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEVerboseLvls.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EVerboseLvls tCQCKit::eXlatEVerboseLvls(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EVerboseLvls(emapEVerboseLvls.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCKit::EVerboseLvls* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCKit::EVerboseLvls(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCKit::EVerboseLvls* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EVerboseLvls eVal)
{
    return emapEVerboseLvls.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EZoneStates[5] = 
{
    {  tCIDLib::TInt4(tCQCKit::EZoneStates::Secure), 0, 0,  { L"", L"secure", L"", L"Secure", L"EZoneStates::Secure", L"Secure" } }
  , {  tCIDLib::TInt4(tCQCKit::EZoneStates::NotReady), 0, 0,  { L"", L"notready", L"", L"NotReady", L"EZoneStates::NotReady", L"Not Ready" } }
  , {  tCIDLib::TInt4(tCQCKit::EZoneStates::Violated), 0, 0,  { L"", L"violated", L"", L"Violated", L"EZoneStates::Violated", L"Violated" } }
  , {  tCIDLib::TInt4(tCQCKit::EZoneStates::Bypassed), 0, 0,  { L"", L"bypassed", L"", L"Bypassed", L"EZoneStates::Bypassed", L"Bypassed" } }
  , {  tCIDLib::TInt4(tCQCKit::EZoneStates::Unknown), 0, 0,  { L"", L"unknown", L"", L"Unknown", L"EZoneStates::Unknown", L"Unknown" } }

};

static TEnumMap emapEZoneStates
(
     L"EZoneStates"
     , 5
     , kCIDLib::False
     , aeitemValues_EZoneStates
     , nullptr
     , tCIDLib::TCard4(tCQCKit::EZoneStates::Count)
);

const TString& tCQCKit::strAltXlatEZoneStates(const tCQCKit::EZoneStates eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEZoneStates.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::AltText, bThrowIfNot);
}

tCQCKit::EZoneStates tCQCKit::eAltXlatEZoneStates(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EZoneStates(emapEZoneStates.i4MapEnumText(strVal, TEnumMap::ETextVals::AltText, bThrowIfNot));
}

tCIDLib::TVoid tCQCKit::FormatEZoneStates(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEZoneStates.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCKit::strXlatEZoneStates(const tCQCKit::EZoneStates eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEZoneStates.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCKit::EZoneStates tCQCKit::eXlatEZoneStates(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCKit::EZoneStates(emapEZoneStates.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TBoolean tCQCKit::bIsValidEnum(const tCQCKit::EZoneStates eVal)
{
    return emapEZoneStates.bIsValidEnum(tCIDLib::TCard4(eVal));

}

