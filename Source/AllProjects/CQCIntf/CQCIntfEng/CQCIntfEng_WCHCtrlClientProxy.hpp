// ----------------------------------------------------------------------------
//  FILE: CQCIntfEng_WCHCtrlClientProxy.hpp
//  DATE: Fri, Feb 14 18:49:46 2020 -0500
//    ID: D2CE20750A902C56-3E26CBF9499D7A90
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------
#pragma once

#pragma CIDLIB_PACK(CIDLIBPACK)

class CQCINTFENGEXPORT TCQCWCHelperClientProxy : public TOrbClientBase
{
    public :
        // --------------------------------------------------------------------
        // Public, static data
        // --------------------------------------------------------------------
        static const TString strInterfaceId;
        
        // ------------------------------------------------------------------------
        //  These are the available keys that the helper program will accept in the
        //  parameters string it gets in the initial blob of data passed to it
        //  by the controlling application.
        //                  
        // ------------------------------------------------------------------------
        static const TString strParam_CustAR;



        // --------------------------------------------------------------------
        // Public Constructors and Destructor
        // --------------------------------------------------------------------
        TCQCWCHelperClientProxy();
        TCQCWCHelperClientProxy(const TOrbObjId& ooidSrc, const TString& strNSBinding);
        TCQCWCHelperClientProxy(const TCQCWCHelperClientProxy&) = delete;
        TCQCWCHelperClientProxy(TCQCWCHelperClientProxy&&) = delete;
        ~TCQCWCHelperClientProxy();

        // --------------------------------------------------------------------
        // Public operators
        // --------------------------------------------------------------------
        TCQCWCHelperClientProxy& operator=(const TCQCWCHelperClientProxy&) = delete;
        TCQCWCHelperClientProxy& operator=(TCQCWCHelperClientProxy&&) = delete;

        // --------------------------------------------------------------------
        // Public, inherited methods
        // --------------------------------------------------------------------
        tCIDLib::TVoid SetObjId
        (
            const   TOrbObjId& ooidToSet
            , const TString& strNSBinding
            , const tCIDLib::TBoolean bCheck = kCIDLib::True
        )   override;

        // --------------------------------------------------------------------
        // Public, non-virtual methods
        // --------------------------------------------------------------------
        tCIDLib::TVoid Close();

        tCIDLib::TVoid Initialize
        (
            const TArea& areaPar
            , const TArea& areaWidget
            , const tCIDLib::TBoolean bVisibility
        );

        tCIDLib::TVoid Ping();

        tCIDLib::TVoid SetArea
        (
            const TArea& areaPar
            , const TArea& areaWidget
        );

        tCIDLib::TVoid SetMute
        (
            const tCIDLib::TBoolean bNewState
        );

        tCIDLib::TVoid SetVisibility
        (
            const tCIDLib::TBoolean bNewState
        );

        tCIDLib::TVoid SetVolume
        (
            const tCIDLib::TCard4 c4ToSet
        );

    protected :
        // --------------------------------------------------------------------
        // Declare our friends
        // --------------------------------------------------------------------
        friend class TFacCIDOrb;

    private :
        // --------------------------------------------------------------------
        // Magic macros
        // --------------------------------------------------------------------
        RTTIDefs(TCQCWCHelperClientProxy,TOrbClientBase)
};

#pragma CIDLIB_POPPACK

inline tCIDLib::TVoid
TCQCWCHelperClientProxy::SetObjId(const  TOrbObjId& ooidToSet
              , const TString& strNSBinding
              , const tCIDLib::TBoolean bCheck)
{
    TParent::SetObjId(ooidToSet, strNSBinding, bCheck);
}

