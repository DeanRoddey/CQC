// ----------------------------------------------------------------------------
//  FILE: CQCIntfEng_Shared.cpp
//  DATE: Tue, Jan 19 17:39:55 2021 -0500
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

#include "CQCIntfEng_.hpp"

const TString kCQCIntfEng::strAttr_Animate_SkipFirst(L"/Animate/SkipFirst");
const TString kCQCIntfEng::strAttr_Base_Area(L"/Base/Area");
const TString kCQCIntfEng::strAttr_Base_BgnFill(L"/Base/BgnFill");
const TString kCQCIntfEng::strAttr_Base_Border(L"/Base/Border");
const TString kCQCIntfEng::strAttr_Base_GroupName(L"/Base/GroupName");
const TString kCQCIntfEng::strAttr_Base_Grouped(L"/Base/Grouped");
const TString kCQCIntfEng::strAttr_Base_InitInvisible(L"/Base/InitInvisible");
const TString kCQCIntfEng::strAttr_Base_Locked(L"/Base/Locked");
const TString kCQCIntfEng::strAttr_Base_NoInertia(L"/Base/NoInertia");
const TString kCQCIntfEng::strAttr_Base_Rounding(L"/Base/Rounding");
const TString kCQCIntfEng::strAttr_Base_Shadow(L"/Base/Shadow");
const TString kCQCIntfEng::strAttr_Base_Size(L"/Base/Size");
const TString kCQCIntfEng::strAttr_Base_Transparent(L"/Base/Transparent");
const TString kCQCIntfEng::strAttr_Base_Underline(L"/Base/Underline");
const TString kCQCIntfEng::strAttr_Base_WidgetId(L"/Base/WidgetId");
const TString kCQCIntfEng::strAttr_Brws_Layout(L"/Browser/LayoutTemplate");
const TString kCQCIntfEng::strAttr_Bool_AutoToggle(L"/Bool/AutoToggle");
const TString kCQCIntfEng::strAttr_Bool_FalseExpr(L"/Bool/FalseExpr");
const TString kCQCIntfEng::strAttr_Bool_FalseText(L"/BoolText/FalseText");
const TString kCQCIntfEng::strAttr_Bool_StateBasedClrs(L"/BoolText/StateBased");
const TString kCQCIntfEng::strAttr_Bool_TrueExpr(L"/Bool/TrueExpr");
const TString kCQCIntfEng::strAttr_Bool_TrueText(L"/BoolText/TrueText");
const TString kCQCIntfEng::strAttr_Cal_SelectType(L"/Calendar/SelType");
const TString kCQCIntfEng::strAttr_CatBrws_InitType(L"/CatBrws/InitType");
const TString kCQCIntfEng::strAttr_CatBrws_RepoMon(L"/CatBrws/RepoMon");
const TString kCQCIntfEng::strAttr_CheckBox_Layout(L"/CheckBox/Layout");
const TString kCQCIntfEng::strAttr_Clr_Bgn1(L"/Color/Bgn1");
const TString kCQCIntfEng::strAttr_Clr_Bgn2(L"/Color/Bgn2");
const TString kCQCIntfEng::strAttr_Clr_Fgn1(L"/Color/Fgn1");
const TString kCQCIntfEng::strAttr_Clr_Fgn2(L"/Color/Fgn2");
const TString kCQCIntfEng::strAttr_Clr_Fgn3(L"/Color/Fgn3");
const TString kCQCIntfEng::strAttr_Clr_Extra1(L"/Color/Extra1");
const TString kCQCIntfEng::strAttr_Clr_Extra2(L"/Color/Extra2");
const TString kCQCIntfEng::strAttr_Clr_Extra3(L"/Color/Extra3");
const TString kCQCIntfEng::strAttr_DClock_Borders(L"/DClock/Borders");
const TString kCQCIntfEng::strAttr_DClock_Format(L"/DClock/Format");
const TString kCQCIntfEng::strAttr_DClock_Panels(L"/DClock/Panels");
const TString kCQCIntfEng::strAttr_DClock_RawText(L"/DClock/RawText");
const TString kCQCIntfEng::strAttr_DBImage_DName(L"/DBImg/DName");
const TString kCQCIntfEng::strAttr_DBImage_Opacity(L"/DBImg/Opacity");
const TString kCQCIntfEng::strAttr_Field(L"/Field/Single");
const TString kCQCIntfEng::strAttr_Fields(L"/Field/Multi");
const TString kCQCIntfEng::strAttr_Font_Bold(L"/Font/Bold");
const TString kCQCIntfEng::strAttr_Font_Effect(L"/Font/Effect");
const TString kCQCIntfEng::strAttr_Font_EffectOfs(L"/Font/EffectOfs");
const TString kCQCIntfEng::strAttr_Font_Face(L"/Font/Face");
const TString kCQCIntfEng::strAttr_Font_Height(L"/Font/Height");
const TString kCQCIntfEng::strAttr_Font_Italic(L"/Font/Italic");
const TString kCQCIntfEng::strAttr_Font_NoWrap(L"/Font/NoWrap");
const TString kCQCIntfEng::strAttr_Font_HJustify(L"/Font/HJustify");
const TString kCQCIntfEng::strAttr_Font_VJustify(L"/Font/VJustify");
const TString kCQCIntfEng::strAttr_Moniker(L"/Gen/Moniker");
const TString kCQCIntfEng::strAttr_SortOrder(L"/Gen/SortOrder");
const TString kCQCIntfEng::strAttr_Graph_Max(L"/Graph/Max");
const TString kCQCIntfEng::strAttr_Graph_Min(L"/Graph/Min");
const TString kCQCIntfEng::strAttr_Graph_LSName(L"/Graph/LSName");
const TString kCQCIntfEng::strAttr_Graph_Scale(L"/Graph/Scale");
const TString kCQCIntfEng::strAttr_HVBrowser_Horz(L"/HVBrowser/Horz");
const TString kCQCIntfEng::strAttr_HVBrowser_Numbered(L"/HVBrowser/Numbered");
const TString kCQCIntfEng::strAttr_HVBrowser_Size(L"/HVBrowser/Size");
const TString kCQCIntfEng::strAttr_HVBrowser_Spacing(L"/HVBrowser/Spacing");
const TString kCQCIntfEng::strAttr_HVBrowser_TextOfs(L"/HVBrowser/TextOfs");
const TString kCQCIntfEng::strAttr_Img_HitTransparent(L"/Image/HitTransparent");
const TString kCQCIntfEng::strAttr_Img_Image(L"/Image/Image");
const TString kCQCIntfEng::strAttr_Img_Opacity(L"/Image/Opacity");
const TString kCQCIntfEng::strAttr_Img_Placement(L"/Image/Placement");
const TString kCQCIntfEng::strAttr_Img_UseImage(L"/Image/UseImage");
const TString kCQCIntfEng::strAttr_Images(L"/Images/ImageList");
const TString kCQCIntfEng::strAttr_Line_EndType(L"/Line/EndType");
const TString kCQCIntfEng::strAttr_Line_HVDir(L"/Line/HVDir");
const TString kCQCIntfEng::strAttr_Line_Thick(L"/Line/Thick");
const TString kCQCIntfEng::strAttr_LiveTile_Fld1(L"/LiveTile/Fld1");
const TString kCQCIntfEng::strAttr_LiveTile_Fld2(L"/LiveTile/Fld2");
const TString kCQCIntfEng::strAttr_LiveTile_SrcTemplates(L"/LiveTile/SrcTemplates");
const TString kCQCIntfEng::strAttr_LogoImg_Opacity(L"/LogoImg/Opacity");
const TString kCQCIntfEng::strAttr_LogoImg_RepoPath(L"/LogoImg/RepoPath");
const TString kCQCIntfEng::strAttr_MappedImg_DefKey(L"/MappedImg/DefKey");
const TString kCQCIntfEng::strAttr_MappedImg_Mappings(L"/MappedImg/Mappings");
const TString kCQCIntfEng::strAttr_MediaImg_Attr(L"/MediaImg/Attr");
const TString kCQCIntfEng::strAttr_MediaImg_Opacity(L"/MediaImg/Opacity");
const TString kCQCIntfEng::strAttr_Media_Repo(L"/Media/RepoMoniker");
const TString kCQCIntfEng::strAttr_Media_Text(L"/Media/MediaText");
const TString kCQCIntfEng::strAttr_Media_Type(L"/Media/MediaType");
const TString kCQCIntfEng::strAttr_MRItemBrws_RepoMon(L"/MRItemBRws/RepoMon");
const TString kCQCIntfEng::strAttr_NumText_DecDigits(L"/NumText/DecDigits");
const TString kCQCIntfEng::strAttr_NumText_FldWidth(L"/NumText/FldWidth");
const TString kCQCIntfEng::strAttr_NumText_FillChar(L"/NumText/FillChar");
const TString kCQCIntfEng::strAttr_NumText_LeadText(L"/NumText/LeadText");
const TString kCQCIntfEng::strAttr_NumText_TrailText(L"/NumText/TrailText");
const TString kCQCIntfEng::strAttr_NumText_UseGroups(L"/NumText/UseGroups");
const TString kCQCIntfEng::strAttr_NumText_FormatStyle(L"/NumText/FmtStyle");
const TString kCQCIntfEng::strAttr_Overlay_InitTemplate(L"/Overlay/InitTmpl");
const TString kCQCIntfEng::strAttr_Overlay_PageMode(L"/Overlay/PageMode");
const TString kCQCIntfEng::strAttr_Overlay_P1(L"/Overlay/P1");
const TString kCQCIntfEng::strAttr_Overlay_P2(L"/Overlay/P2");
const TString kCQCIntfEng::strAttr_Overlay_P3(L"/Overlay/P3");
const TString kCQCIntfEng::strAttr_Overlay_P4(L"/Overlay/P4");
const TString kCQCIntfEng::strAttr_Overlay_ManualFlick(L"/Overlay/ManualFlick");
const TString kCQCIntfEng::strAttr_PBar_FillUnused(L"/PBar/FillUnused");
const TString kCQCIntfEng::strAttr_PBar_Dir(L"/PBar/Dir");
const TString kCQCIntfEng::strAttr_PBar_Writeable(L"/PBar/Writeable");
const TString kCQCIntfEng::strAttr_Slider_UseLimits(L"/Slider/UseLimits");
const TString kCQCIntfEng::strAttr_Slider_Limits(L"/Slider/Limits");
const TString kCQCIntfEng::strAttr_SpcActButt_Action(L"/SpcActButt/Action");
const TString kCQCIntfEng::strAttr_Static_Type(L"/Static/Type");
const TString kCQCIntfEng::strAttr_Static_Min(L"/Static/Min");
const TString kCQCIntfEng::strAttr_Static_Max(L"/Static/Max");
const TString kCQCIntfEng::strAttr_Static_UseRange(L"/Static/UseRange");
const TString kCQCIntfEng::strAttr_StateItem_Field(L"/StateItem/Field");
const TString kCQCIntfEng::strAttr_TmImg_HourPat(L"/TmImg/HourPat");
const TString kCQCIntfEng::strAttr_TmImg_HourPath(L"/TmImg/HourPath");
const TString kCQCIntfEng::strAttr_TmImg_Opacity(L"/TmImg/Opacity");
const TString kCQCIntfEng::strAttr_TmImg_MinPat(L"/TmImg/MinPat");
const TString kCQCIntfEng::strAttr_TmImg_MinPath(L"/TmImg/MinPath");
const TString kCQCIntfEng::strAttr_TmImg_UseHour(L"/TmImg/UseHour");
const TString kCQCIntfEng::strAttr_TmImg_UseMin(L"/TmImg/UseMin");
const TString kCQCIntfEng::strAttr_Tmpl_TmplActions(L"/Template/TmplActions");
const TString kCQCIntfEng::strAttr_Tmpl_Focus(L"/Template/Focus");
const TString kCQCIntfEng::strAttr_Tmpl_LoadWAV(L"/Template/LoadWAV");
const TString kCQCIntfEng::strAttr_Tmpl_UnloadWAV(L"/Template/UnloadWAV");
const TString kCQCIntfEng::strAttr_Tmpl_MinRole(L"/Template/MinRole");
const TString kCQCIntfEng::strAttr_Tmpl_PopupOpacity(L"/Template/PopupOpacity");
const TString kCQCIntfEng::strAttr_Tmpl_HotKeys(L"/Template/HotKeys");
const TString kCQCIntfEng::strAttr_Tmpl_Notes(L"/Template/Notes");
const TString kCQCIntfEng::strAttr_Tmpl_States(L"/Template/States");
const TString kCQCIntfEng::strAttr_Tmpl_TrigEvents(L"/Template/TrigEvents");
const TString kCQCIntfEng::strAttr_Text_Marquee(L"/Text/MarqueeMode");
const TString kCQCIntfEng::strAttr_Text_Secret(L"/Text/SecretMode");
const TString kCQCIntfEng::strAttr_TimeText_Format(L"/TimeText/Format");
const TString kCQCIntfEng::strAttr_TimeText_HideIfZ(L"/TimeText/HideIfZ");
const TString kCQCIntfEng::strAttr_TimeText_Offset(L"/TimeText/Offset");
const TString kCQCIntfEng::strAttr_ToolBar_Buttons(L"/ToolBar/Buttons");
const TString kCQCIntfEng::strAttr_ToolBar_FillSlots(L"/ToolBar/FillSlots");
const TString kCQCIntfEng::strAttr_ToolBar_Layout(L"/ToolBar/Layout");
const TString kCQCIntfEng::strAttr_ToolBar_Size(L"/ToolBar/Size");
const TString kCQCIntfEng::strAttr_ToolBar_Spacing(L"/ToolBar/Spacing");
const TString kCQCIntfEng::strAttr_ToolBar_VertAdjust(L"/ToolBar/VertAdjust");
const TString kCQCIntfEng::strAttr_Var_Variable(L"/Variable/Variable");
const TString kCQCIntfEng::strAttr_VKnob_Limits(L"/VKnob/Limits");
const TString kCQCIntfEng::strAttr_VKnob_Radius(L"/VKnob/Radius");
const TString kCQCIntfEng::strAttr_VKnob_Range(L"/VKnob/Range");
const TString kCQCIntfEng::strAttr_VKnob_UseLimits(L"/VKnob/UseLimits");
const TString kCQCIntfEng::strAttr_VUMeter_HighPer(L"/VUMeter/HighPer");
const TString kCQCIntfEng::strAttr_VUMeter_LOnly(L"/VUMeter/LightOnly");
const TString kCQCIntfEng::strAttr_VUMeter_MidPer(L"/VUMeter/MidPer");
const TString kCQCIntfEng::strAttr_VUMeter_Spacing(L"/VUMeter/Spacing");
const TString kCQCIntfEng::strAttr_WebCam_InitMute(L"/WebCam/InitMute");
const TString kCQCIntfEng::strAttr_WebCam_InitVolume(L"/WebCam/InitVolume");
const TString kCQCIntfEng::strAttr_WebCam_Params(L"/WebCam/Params");
const TString kCQCIntfEng::strAttr_WebCam_URL(L"/WebCam/URL");
const TString kCQCIntfEng::strAttr_WebCam_WebURL(L"/WebCam/WebURL");
const TString kCQCIntfEng::strAttr_WebBrws_AutoRefresh(L"/WebBrws/AutoRefresh");
const TString kCQCIntfEng::strAttr_WebBrws_InitURL(L"/WebBrws/InitURL");
const TString kCQCIntfEng::strAttr_WebBrws_Minutes(L"/WebBrws/Minutes");
const TString kCQCIntfEng::strAttr_WebBrws_Silent(L"/WebBrws/Silent");
const TString kCQCIntfEng::strAttr_WebImg_HdrKey1(L"/WebImg/Headers/Key1");
const TString kCQCIntfEng::strAttr_WebImg_HdrKey2(L"/WebImg/Headers/Key2");
const TString kCQCIntfEng::strAttr_WebImg_HdrVal1(L"/WebImg/Headers/Val1");
const TString kCQCIntfEng::strAttr_WebImg_HdrVal2(L"/WebImg/Headers/Val2");
const TString kCQCIntfEng::strAttr_WebImg_NoCache(L"/WebImg/NoCache");
const TString kCQCIntfEng::strAttr_WebImg_Opacity(L"/WebImg/Opacity");
const TString kCQCIntfEng::strAttr_WebImg_Placement(L"/WebImg/Placement");
const TString kCQCIntfEng::strAttr_WebImg_RefreshMSs(L"/WebImg/RefreshMSs");
const TString kCQCIntfEng::strAttr_WebImg_URL(L"/WebImg/URL");
const TString kCQCIntfEng::strAttr_Widget_Caption(L"/Widget/Caption");
const TString kCQCIntfEng::strAttr_Widget_StatesNeg(L"/Widget/States/Negate");
const TString kCQCIntfEng::strAttr_Widget_StatesDisplay(L"/Widget/States/DisplayState");
const TString kCQCIntfEng::strAttr_Widget_StatesLogOp(L"/Widget/States/LogOp");
const TString kCQCIntfEng::strAttr_Widget_States(L"/Widget/States/List");
const TString kCQCIntfEng::strAttr_Xlats(L"/Xlats/Xlats");
const TString kCQCIntfEng::strAttrType_Expression(L"/CQC/Expression");
const TString kCQCIntfEng::strAttrType_Image(L"/CQC/Image");
const TString kCQCIntfEng::strAttrType_Images(L"/CQC/Images");
const TString kCQCIntfEng::strAttrType_ImageScope(L"/CQC/ImageScope");
const TString kCQCIntfEng::strAttrType_LSGraph(L"/CQC/LSGraph");
const TString kCQCIntfEng::strAttrType_Moniker(L"/CQC/Moniker");
const TString kCQCIntfEng::strAttrType_RepoMoniker(L"/CQC/RepoMoniker");
const TString kCQCIntfEng::strAttrType_Template(L"/CQC/Template");
const TString kCQCIntfEng::strCTarId_IntfViewer(L"IntfTarget:Viewer");
const TString kCQCIntfEng::strDefWidgetIdPref(L"CQSL_DefWidgetId-");
const TString kCQCIntfEng::strCmdId_LoadOverlay(L"IntfCmd:LoadOverlay");
const TString kCQCIntfEng::strCmdId_DoLink(L"IntfCmd:DoLink");
const TString kCQCIntfEng::strCmdId_SetWidgetClr(L"IntfCmd:SetWidgetClr");
const TString kCQCIntfEng::strCmdId_SetSecretMode(L"IntfCmd:SetSecretMode");
const TString kCQCIntfEng::strCmdId_SetMaxChars(L"IntfCmd:SetMaxChars");
const TString kCQCIntfEng::strCmdId_InvokePopup(L"IntfCmd:InvokePopup");
const TString kCQCIntfEng::strCmdId_InvokePopout(L"IntfCmd:InvokePopout");
const TString kCQCIntfEng::strCmdId_LoadDefTmpl(L"IntfCmd:LoadDefTmpl");
const TString kCQCIntfEng::strCmdId_SetBlankOpts(L"IntfCmd:SetBlankOpts");
const TString kCQCIntfEng::strCmdId_SetBrowserList(L"IntfCmd:SetBrowserList");
const TString kCQCIntfEng::strCmdId_SetUserData(L"IntfCmd:SetUserData");
const TString kCQCIntfEng::strCmdId_SetBrowserList2(L"IntfCmd:SetBrowserList2");
const TString kCQCIntfEng::strCmdId_RunTmplAction(L"IntfCmd:RunTmplAction");
const TString kCQCIntfEng::strCmdId_LoadSiblingOverlay(L"IntfCmd:LoadSiblingOverlay");
const TString kCQCIntfEng::strCmdId_SetTimeout(L"IntfCmd:SetTimeout");
const TString kCQCIntfEng::strCmdId_SetInitTemplate(L"IntfCmd:SetInitTemplate");
const TString kCQCIntfEng::strCmdId_NoChildMouse(L"IntfCmd:NoChildMouse");
const TString kCQCIntfEng::strCmdId_SetAutoBlankMode(L"IntfCmd:SetAutoBlankMode");
const TString kCQCIntfEng::strCmdId_SetFromEnumVar(L"IntfCmd:SetFromEnumVar");
const TString kCQCIntfEng::strCmdId_SetFromEnumFld(L"IntfCmd:SetFromEnumFld");
const TString kCQCIntfEng::strCmdId_SetOpacity(L"IntfCmd:SetOpacity");
const TString kCQCIntfEng::strCmdId_SetWdgState(L"IntfCmd:SetWdgState");
const TString kCQCIntfEng::strCmdId_DismissBlanker(L"IntfCmd:DismissBlanker");
const TString kCQCIntfEng::strCmdId_SetSelType(L"IntfCmd:SetSelType");
const TString kCQCIntfEng::strCmdId_GetMonth(L"IntfCmd:GetMonth");
const TString kCQCIntfEng::strCmdId_AdjustMonth(L"IntfCmd:AdjustMonth");
const TString kCQCIntfEng::strCmdId_GetIsTitleLevel(L"IntfCmd:GetIsTitleLevel");
const TString kCQCIntfEng::strCmdId_GetRetVal(L"IntfCmd:GetRetVal");
const TString kCQCIntfEng::strCmdId_SetRetVal(L"IntfCmd:SetRetVal");
const TString kCQCIntfEng::strCmdId_GetTmplVal(L"IntfCmd:GetTmplVal");
const TString kCQCIntfEng::strCmdId_SetTmplVal(L"IntfCmd:SetTmplVal");
const TString kCQCIntfEng::strCmdId_RetValToTmplVal(L"IntfCmd:RetValToTmplVal");
const TString kCQCIntfEng::strCmdId_TmplValToRetVal(L"IntfCmd:TmplValToRetVal");
const TString kCQCIntfEng::strCmdId_RIVACmd(L"IntfCmd:RIVACmd");
const TString kCQCIntfEng::strCmdId_DoFades(L"IntfCmd:DoFades");
const TString kCQCIntfEng::strCmdId_SetDblBrowserList(L"IntfCmd:SetDblBrowserList");
const TString kCQCIntfEng::strCmdId_SetViewBorderClr(L"IntfCmd:SetViewBorderClr");
const TString kCQCIntfEng::strCmdId_DelTBItem(L"IntfCmd:DelTBItem");
const TString kCQCIntfEng::strCmdId_SetRepoPath(L"IntfCmd:SetRepoPath");
const TString kCQCIntfEng::strCmdId_SetCapPattern(L"IntfCmd:SetCapPattern");
const TString kCQCIntfEng::strCmdId_SetParentState(L"IntfCmd:SetParentState");
const TString kCQCIntfEng::strCmdId_SetLayout(L"IntfCmd:SetLayout");
const TString kCQCIntfEng::strCmdId_LoadAncestor(L"IntfCmd:LoadAncestor");
const TString kCQCIntfEng::strCmdId_ScrollParent(L"IntfCmd:ScrollParent");
const TString kCQCIntfEng::strCmdId_GetWidgetClr(L"IntfCmd:GetWidgetClr");
const TString kCQCIntfEng::strCmdId_SetRange(L"IntfCmd:SetRange");
const TString kCQCIntfEng::strCmdId_CheckPowerTrans(L"IntfCmd:CheckPowerTrans");
const TString kCQCIntfEng::strCmdId_WaitPowerTrans(L"IntfCmd:WaitPowerTrans");
const TString kCQCIntfEng::strCmdId_SetBoolCompVal(L"IntfCmd:SetBoolCompVal");
const TString kCQCIntfEng::strCmdId_GetOverlayParam(L"IntfCmd:GetOverlayParam");
const TString kCQCIntfEng::strCmdId_SetOverlayParam(L"IntfCmd:SetOverlayParam");
const TString kCQCIntfEng::strCmdId_DynOverLoad(L"IntfCmd:DynOverLoad");
const TString kCQCIntfEng::strCmdId_InRIVAMode(L"IntfCmd:InRIVAMode");
const TString kCQCIntfEng::strCmdId_EnableBorder(L"IntfCmd:EnableBorder");
const TString kCQCIntfEng::strRTVId_ListItemText(L"IntfRTV:ListItemText");
const TString kCQCIntfEng::strRTVId_UserData(L"IntfRTV:UserData");
const TString kCQCIntfEng::strRTVId_StateText(L"IntfRTV:StateText");
const TString kCQCIntfEng::strRTVId_SelDay(L"IntfRTV:SelDay");
const TString kCQCIntfEng::strRTVId_SelMonth(L"IntfRTV:SelMonth");
const TString kCQCIntfEng::strRTVId_SelMonthName(L"IntfRTV:SelMonthName");
const TString kCQCIntfEng::strRTVId_SelYear(L"IntfRTV:SelYear");
const TString kCQCIntfEng::strRTVId_HPageInd(L"IntfRTV:HPageInd");
const TString kCQCIntfEng::strRTVId_VPageInd(L"IntfRTV:VPageInd");
const TString kCQCIntfEng::strRTVId_ColorRGB(L"IntfRTV:ColorRGB");
const TString kCQCIntfEng::strRTVId_ColorHSVInt(L"IntfRTV:ColorHSVInt");
const TString kCQCIntfEng::strRTVId_ColorHSVFloat(L"IntfRTV:ColorHSVFloat");
const TString kCQCIntfEng::strRTVId_ColorHSInt(L"IntfRTV:ColorHSInt");
const TString kCQCIntfEng::strRTVId_FlickDir(L"IntfRTV:FlickDir");


static TEnumMap::TEnumValItem aeitemValues_EAutoReps[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EAutoReps::None), 0, 0,  { L"", L"", L"", L"None", L"EAutoReps::None", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EAutoReps::Normal), 0, 0,  { L"", L"", L"", L"Normal", L"EAutoReps::Normal", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EAutoReps::Sloped), 0, 0,  { L"", L"", L"", L"Sloped", L"EAutoReps::Sloped", L"" } }

};

static TEnumMap emapEAutoReps
(
     L"EAutoReps"
     , 3
     , kCIDLib::False
     , aeitemValues_EAutoReps
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EAutoReps::Count)
);

const TString& tCQCIntfEng::strXlatEAutoReps(const tCQCIntfEng::EAutoReps eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEAutoReps.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCIntfEng::EAutoReps tCQCIntfEng::eXlatEAutoReps(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::EAutoReps(emapEAutoReps.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCIntfEng::operator<<(TTextOutStream& strmTar, const tCQCIntfEng::EAutoReps eVal)
{
    strmTar << emapEAutoReps.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::EAutoReps* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::EAutoReps(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::EAutoReps* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EAutoReps eVal)
{
    return emapEAutoReps.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EBgnStyles[5] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EBgnStyles::Fill), 0, kIEngMsgs::midBgnStyle_Fill,  { L"", L"", L"", L"Fill", L"EBgnStyles::Fill", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EBgnStyles::CGradient), 0, kIEngMsgs::midBgnStyle_CGradient,  { L"", L"", L"", L"CGradient", L"EBgnStyles::CGradient", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EBgnStyles::HGradient), 0, kIEngMsgs::midBgnStyle_HGradient,  { L"", L"", L"", L"HGradient", L"EBgnStyles::HGradient", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EBgnStyles::LGradient), 0, kIEngMsgs::midBgnStyle_LGradient,  { L"", L"", L"", L"LGradient", L"EBgnStyles::LGradient", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EBgnStyles::VGradient), 0, kIEngMsgs::midBgnStyle_VGradient,  { L"", L"", L"", L"VGradient", L"EBgnStyles::VGradient", L"" } }

};

static TEnumMap emapEBgnStyles
(
     L"EBgnStyles"
     , 5
     , kCIDLib::False
     , aeitemValues_EBgnStyles
     , &facCQCIntfEng()
     , tCIDLib::TCard4(tCQCIntfEng::EBgnStyles::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatEBgnStyles(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEBgnStyles.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatEBgnStyles(const tCQCIntfEng::EBgnStyles eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEBgnStyles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCIntfEng::EBgnStyles tCQCIntfEng::eXlatEBgnStyles(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::EBgnStyles(emapEBgnStyles.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

TTextOutStream& tCQCIntfEng::operator<<(TTextOutStream& strmTar, const tCQCIntfEng::EBgnStyles eVal)
{
    strmTar << emapEBgnStyles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::EBgnStyles* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::EBgnStyles(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::EBgnStyles* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EBgnStyles eVal)
{
    return emapEBgnStyles.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EBoolStates[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EBoolStates::False), 0, 0,  { L"", L"", L"", L"False", L"EBoolStates::False", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EBoolStates::True), 0, 0,  { L"", L"", L"", L"True", L"EBoolStates::True", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EBoolStates::Error), 0, 0,  { L"", L"", L"", L"Error", L"EBoolStates::Error", L"" } }

};

static TEnumMap emapEBoolStates
(
     L"EBoolStates"
     , 3
     , kCIDLib::False
     , aeitemValues_EBoolStates
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EBoolStates::Count)
);

tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EBoolStates eVal)
{
    return emapEBoolStates.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ECalSelTypes[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::ECalSelTypes::All), 0, 0,  { L"", L"", L"", L"All", L"ECalSelTypes::All", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ECalSelTypes::Forward), 0, 0,  { L"", L"", L"", L"Forward", L"ECalSelTypes::Forward", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ECalSelTypes::Reverse), 0, 0,  { L"", L"", L"", L"Reverse", L"ECalSelTypes::Reverse", L"" } }

};

static TEnumMap emapECalSelTypes
(
     L"ECalSelTypes"
     , 3
     , kCIDLib::False
     , aeitemValues_ECalSelTypes
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::ECalSelTypes::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatECalSelTypes(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapECalSelTypes.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatECalSelTypes(const tCQCIntfEng::ECalSelTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapECalSelTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCIntfEng::ECalSelTypes tCQCIntfEng::eXlatECalSelTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::ECalSelTypes(emapECalSelTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCIntfEng::operator<<(TTextOutStream& strmTar, const tCQCIntfEng::ECalSelTypes eVal)
{
    strmTar << emapECalSelTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::ECalSelTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::ECalSelTypes(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::ECalSelTypes* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::ECalSelTypes eVal)
{
    return emapECalSelTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EClockFmts[2] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EClockFmts::Hour12), 0, 0,  { L"", L"", L"", L"Hour12", L"EClockFmts::Hour12", L"12 Hour" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EClockFmts::Hour24), 0, 0,  { L"", L"", L"", L"Hour24", L"EClockFmts::Hour24", L"24 Hour" } }

};

static TEnumMap emapEClockFmts
(
     L"EClockFmts"
     , 2
     , kCIDLib::False
     , aeitemValues_EClockFmts
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EClockFmts::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatEClockFmts(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEClockFmts.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatEClockFmts(const tCQCIntfEng::EClockFmts eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEClockFmts.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCIntfEng::EClockFmts tCQCIntfEng::eXlatEClockFmts(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::EClockFmts(emapEClockFmts.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

TTextOutStream& tCQCIntfEng::operator<<(TTextOutStream& strmTar, const tCQCIntfEng::EClockFmts eVal)
{
    strmTar << emapEClockFmts.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::EClockFmts* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::EClockFmts(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::EClockFmts* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EClockFmts eVal)
{
    return emapEClockFmts.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EDispStates[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EDispStates::Normal), 0, 0,  { L"", L"", L"", L"Normal", L"EDispStates::Normal", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EDispStates::Disabled), 0, 0,  { L"", L"", L"", L"Disabled", L"EDispStates::Disabled", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EDispStates::Hidden), 0, 0,  { L"", L"", L"", L"Hidden", L"EDispStates::Hidden", L"" } }

};

static TEnumMap emapEDispStates
(
     L"EDispStates"
     , 3
     , kCIDLib::False
     , aeitemValues_EDispStates
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EDispStates::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatEDispStates(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEDispStates.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatEDispStates(const tCQCIntfEng::EDispStates eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEDispStates.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCIntfEng::EDispStates tCQCIntfEng::eXlatEDispStates(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::EDispStates(emapEDispStates.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::EDispStates* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::EDispStates(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::EDispStates* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EDispStates eVal)
{
    return emapEDispStates.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EExprResults[4] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EExprResults::False), 0, 0,  { L"", L"", L"", L"False", L"EExprResults::False", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EExprResults::True), 0, 0,  { L"", L"", L"", L"True", L"EExprResults::True", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EExprResults::Neither), 0, 0,  { L"", L"", L"", L"Neither", L"EExprResults::Neither", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EExprResults::Error), 0, 0,  { L"", L"", L"", L"Error", L"EExprResults::Error", L"" } }

};

static TEnumMap emapEExprResults
(
     L"EExprResults"
     , 4
     , kCIDLib::False
     , aeitemValues_EExprResults
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EExprResults::Count)
);

tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EExprResults eVal)
{
    return emapEExprResults.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EHotKeys[47] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::None), 0, 0,  { L"", L"", L"", L"None", L"EHotKeys::None", L"Otherwise" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::ChannelUp), 0, 0,  { L"", L"", L"", L"ChannelUp", L"EHotKeys::ChannelUp", L"Channel Up" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::ChannelDn), 0, 0,  { L"", L"", L"", L"ChannelDn", L"EHotKeys::ChannelDn", L"Channel Down" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Exit), 0, 0,  { L"", L"", L"", L"Exit", L"EHotKeys::Exit", L"Exit" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Favorites), 0, 0,  { L"", L"", L"", L"Favorites", L"EHotKeys::Favorites", L"Favorites" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Guide), 0, 0,  { L"", L"", L"", L"Guide", L"EHotKeys::Guide", L"Guide" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Home), 0, 0,  { L"", L"", L"", L"Home", L"EHotKeys::Home", L"Home" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::JogDown), 0, 0,  { L"", L"", L"", L"JogDown", L"EHotKeys::JogDown", L"Jog Down" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::JogSelect), 0, 0,  { L"", L"", L"", L"JogSelect", L"EHotKeys::JogSelect", L"Jog Select" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::JogUp), 0, 0,  { L"", L"", L"", L"JogUp", L"EHotKeys::JogUp", L"Jog Up" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Mute), 0, 0,  { L"", L"", L"", L"Mute", L"EHotKeys::Mute", L"Mute" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::NavDown), 0, 0,  { L"", L"", L"", L"NavDown", L"EHotKeys::NavDown", L"Nav Down" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::NavLeft), 0, 0,  { L"", L"", L"", L"NavLeft", L"EHotKeys::NavLeft", L"Nav Left" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::NavRight), 0, 0,  { L"", L"", L"", L"NavRight", L"EHotKeys::NavRight", L"Nav Right" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::NavUp), 0, 0,  { L"", L"", L"", L"NavUp", L"EHotKeys::NavUp", L"Nav Up" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Next), 0, 0,  { L"", L"", L"", L"Next", L"EHotKeys::Next", L"Next" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::PageDn), 0, 0,  { L"", L"", L"", L"PageDn", L"EHotKeys::PageDn", L"Page Down" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::PageUp), 0, 0,  { L"", L"", L"", L"PageUp", L"EHotKeys::PageUp", L"Page Up" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Previous), 0, 0,  { L"", L"", L"", L"Previous", L"EHotKeys::Previous", L"Previous" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Refresh), 0, 0,  { L"", L"", L"", L"Refresh", L"EHotKeys::Refresh", L"Refresh" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Search), 0, 0,  { L"", L"", L"", L"Search", L"EHotKeys::Search", L"Search" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Start), 0, 0,  { L"", L"", L"", L"Start", L"EHotKeys::Start", L"Start" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::TransForward), 0, 0,  { L"", L"", L"", L"TransForward", L"EHotKeys::TransForward", L"Transport Forward" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::TransPause), 0, 0,  { L"", L"", L"", L"TransPause", L"EHotKeys::TransPause", L"Transport Pause" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::TransPlay), 0, 0,  { L"", L"", L"", L"TransPlay", L"EHotKeys::TransPlay", L"Transport Play" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::TransReverse), 0, 0,  { L"", L"", L"", L"TransReverse", L"EHotKeys::TransReverse", L"Transport Reverse" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::TransStop), 0, 0,  { L"", L"", L"", L"TransStop", L"EHotKeys::TransStop", L"Transport Stop" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::VolumeDn), 0, 0,  { L"", L"", L"", L"VolumeDn", L"EHotKeys::VolumeDn", L"Volume Dn" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::VolumeUp), 0, 0,  { L"", L"", L"", L"VolumeUp", L"EHotKeys::VolumeUp", L"Volume Up" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::Web), 0, 0,  { L"", L"", L"", L"Web", L"EHotKeys::Web", L"Web" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey1), 0, 0,  { L"", L"", L"", L"AppKey1", L"EHotKeys::AppKey1", L"AppKey 1" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey2), 0, 0,  { L"", L"", L"", L"AppKey2", L"EHotKeys::AppKey2", L"AppKey 2" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey3), 0, 0,  { L"", L"", L"", L"AppKey3", L"EHotKeys::AppKey3", L"AppKey 3" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey4), 0, 0,  { L"", L"", L"", L"AppKey4", L"EHotKeys::AppKey4", L"AppKey 4" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey5), 0, 0,  { L"", L"", L"", L"AppKey5", L"EHotKeys::AppKey5", L"AppKey 5" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey6), 0, 0,  { L"", L"", L"", L"AppKey6", L"EHotKeys::AppKey6", L"AppKey 6" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey7), 0, 0,  { L"", L"", L"", L"AppKey7", L"EHotKeys::AppKey7", L"AppKey 7" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey8), 0, 0,  { L"", L"", L"", L"AppKey8", L"EHotKeys::AppKey8", L"AppKey 8" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey9), 0, 0,  { L"", L"", L"", L"AppKey9", L"EHotKeys::AppKey9", L"AppKey 9" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey10), 0, 0,  { L"", L"", L"", L"AppKey10", L"EHotKeys::AppKey10", L"AppKey 10" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey11), 0, 0,  { L"", L"", L"", L"AppKey11", L"EHotKeys::AppKey11", L"AppKey 11" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey12), 0, 0,  { L"", L"", L"", L"AppKey12", L"EHotKeys::AppKey12", L"AppKey 12" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey13), 0, 0,  { L"", L"", L"", L"AppKey13", L"EHotKeys::AppKey13", L"AppKey 13" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey14), 0, 0,  { L"", L"", L"", L"AppKey14", L"EHotKeys::AppKey14", L"AppKey 14" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey15), 0, 0,  { L"", L"", L"", L"AppKey15", L"EHotKeys::AppKey15", L"AppKey 15" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::AppKey16), 0, 0,  { L"", L"", L"", L"AppKey16", L"EHotKeys::AppKey16", L"AppKey 16" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHotKeys::OK), 0, 0,  { L"", L"", L"", L"OK", L"EHotKeys::OK", L"OK" } }

};

static TEnumMap emapEHotKeys
(
     L"EHotKeys"
     , 47
     , kCIDLib::False
     , aeitemValues_EHotKeys
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EHotKeys::Count)
);

const TString& tCQCIntfEng::strLoadEHotKeys(const tCQCIntfEng::EHotKeys eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEHotKeys.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}
const TString& tCQCIntfEng::strXlatEHotKeys(const tCQCIntfEng::EHotKeys eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEHotKeys.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCIntfEng::EHotKeys tCQCIntfEng::eXlatEHotKeys(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::EHotKeys(emapEHotKeys.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EHotKeys eVal)
{
    return emapEHotKeys.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EImgQRes[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EImgQRes::NotFound), 0, 0,  { L"", L"", L"", L"NotFound", L"EImgQRes::NotFound", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EImgQRes::Unchanged), 0, 0,  { L"", L"", L"", L"Unchanged", L"EImgQRes::Unchanged", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EImgQRes::NewData), 0, 0,  { L"", L"", L"", L"NewData", L"EImgQRes::NewData", L"" } }

};

static TEnumMap emapEImgQRes
(
     L"EImgQRes"
     , 3
     , kCIDLib::False
     , aeitemValues_EImgQRes
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EImgQRes::Count)
);

tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EImgQRes eVal)
{
    return emapEImgQRes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EImgReqFlags[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EImgReqFlags::Required), 0, 0,  { L"", L"", L"", L"Required", L"EImgReqFlags::Required", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EImgReqFlags::Optional), 0, 0,  { L"", L"", L"", L"Optional", L"EImgReqFlags::Optional", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EImgReqFlags::RequiredIfAny), 0, 0,  { L"", L"", L"", L"RequiredIfAny", L"EImgReqFlags::RequiredIfAny", L"" } }

};

static TEnumMap emapEImgReqFlags
(
     L"EImgReqFlags"
     , 3
     , kCIDLib::False
     , aeitemValues_EImgReqFlags
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EImgReqFlags::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatEImgReqFlags(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEImgReqFlags.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatEImgReqFlags(const tCQCIntfEng::EImgReqFlags eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEImgReqFlags.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCIntfEng::EImgReqFlags tCQCIntfEng::eXlatEImgReqFlags(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::EImgReqFlags(emapEImgReqFlags.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::EImgReqFlags* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::EImgReqFlags(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::EImgReqFlags* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EImgReqFlags eVal)
{
    return emapEImgReqFlags.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EImgTypes[2] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EImgTypes::Repo), 0, 0,  { L"", L"", L"", L"Repo", L"EImgTypes::Repo", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EImgTypes::Web), 0, 0,  { L"", L"", L"", L"Web", L"EImgTypes::Web", L"" } }

};

static TEnumMap emapEImgTypes
(
     L"EImgTypes"
     , 2
     , kCIDLib::False
     , aeitemValues_EImgTypes
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EImgTypes::Count)
);

tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EImgTypes eVal)
{
    return emapEImgTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ELineEnds[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::ELineEnds::None), 0, 0,  { L"", L"", L"", L"None", L"ELineEnds::None", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ELineEnds::Crossbar), 0, 0,  { L"", L"", L"", L"Crossbar", L"ELineEnds::Crossbar", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ELineEnds::Circle), 0, 0,  { L"", L"", L"", L"Circle", L"ELineEnds::Circle", L"" } }

};

static TEnumMap emapELineEnds
(
     L"ELineEnds"
     , 3
     , kCIDLib::False
     , aeitemValues_ELineEnds
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::ELineEnds::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatELineEnds(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapELineEnds.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatELineEnds(const tCQCIntfEng::ELineEnds eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapELineEnds.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCIntfEng::ELineEnds tCQCIntfEng::eXlatELineEnds(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::ELineEnds(emapELineEnds.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCIntfEng::operator<<(TTextOutStream& strmTar, const tCQCIntfEng::ELineEnds eVal)
{
    strmTar << emapELineEnds.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::ELineEnds* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::ELineEnds(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::ELineEnds* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::ELineEnds eVal)
{
    return emapELineEnds.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ENumTxtStyles[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::ENumTxtStyles::Locale), 0, 0,  { L"", L"", L"", L"Locale", L"ENumTxtStyles::Locale", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ENumTxtStyles::Raw), 0, 0,  { L"", L"", L"", L"Raw", L"ENumTxtStyles::Raw", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ENumTxtStyles::Custom), 0, 0,  { L"", L"", L"", L"Custom", L"ENumTxtStyles::Custom", L"" } }

};

static TEnumMap emapENumTxtStyles
(
     L"ENumTxtStyles"
     , 3
     , kCIDLib::False
     , aeitemValues_ENumTxtStyles
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::ENumTxtStyles::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatENumTxtStyles(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapENumTxtStyles.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatENumTxtStyles(const tCQCIntfEng::ENumTxtStyles eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapENumTxtStyles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCIntfEng::ENumTxtStyles tCQCIntfEng::eXlatENumTxtStyles(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::ENumTxtStyles(emapENumTxtStyles.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tCQCIntfEng::operator<<(TTextOutStream& strmTar, const tCQCIntfEng::ENumTxtStyles eVal)
{
    strmTar << emapENumTxtStyles.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::ENumTxtStyles* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::ENumTxtStyles(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::ENumTxtStyles* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::ENumTxtStyles eVal)
{
    return emapENumTxtStyles.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ERepFlags[11] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::ActionParms), 0, 0,  { L"", L"", L"", L"ActionParms", L"ERepFlags::ActionParms", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::AssocField), 0, 0,  { L"", L"", L"", L"AssocField", L"ERepFlags::AssocField", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::AssocDevice), 0, 0,  { L"", L"", L"", L"AssocDevice", L"ERepFlags::AssocDevice", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::AssocVar), 0, 0,  { L"", L"", L"", L"AssocVar", L"ERepFlags::AssocVar", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::Caption), 0, 0,  { L"", L"", L"", L"Caption", L"ERepFlags::Caption", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::Expressions), 0, 0,  { L"", L"", L"", L"Expressions", L"ERepFlags::Expressions", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::Image), 0, 0,  { L"", L"", L"", L"Image", L"ERepFlags::Image", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::Template), 0, 0,  { L"", L"", L"", L"Template", L"ERepFlags::Template", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::URL), 0, 0,  { L"", L"", L"", L"URL", L"ERepFlags::URL", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::FilterParms), 0, 0,  { L"", L"", L"", L"FilterParms", L"ERepFlags::FilterParms", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERepFlags::Children), 0, 0,  { L"", L"", L"", L"Children", L"ERepFlags::Children", L"" } }

};

static TEnumMap emapERepFlags
(
     L"ERepFlags"
     , 11
     , kCIDLib::True
     , aeitemValues_ERepFlags
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::ERepFlags::None)
);

tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::ERepFlags eVal)
{
    return emapERepFlags.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ERIVAWTypes[2] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::ERIVAWTypes::WebBrowser), 0, 0,  { L"", L"", L"", L"WebBrowser", L"ERIVAWTypes::WebBrowser", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ERIVAWTypes::WebCamera), 0, 0,  { L"", L"", L"", L"WebCamera", L"ERIVAWTypes::WebCamera", L"" } }

};

static TEnumMap emapERIVAWTypes
(
     L"ERIVAWTypes"
     , 2
     , kCIDLib::False
     , aeitemValues_ERIVAWTypes
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::ERIVAWTypes::Count)
);

tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::ERIVAWTypes eVal)
{
    return emapERIVAWTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ESpecActs[8] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::ESpecActs::Blanker), 0, kIEngMsgs::midSAct_Blanker,  { L"", L"", L"", L"Blanker", L"ESpecActs::Blanker", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ESpecActs::Exit), 0, kIEngMsgs::midSAct_Exit,  { L"", L"", L"", L"Exit", L"ESpecActs::Exit", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ESpecActs::ExitFS), 0, kIEngMsgs::midSAct_ExitFS,  { L"", L"", L"", L"ExitFS", L"ESpecActs::ExitFS", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ESpecActs::FSMode), 0, kIEngMsgs::midSAct_FSMode,  { L"", L"", L"", L"FSMode", L"ESpecActs::FSMode", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ESpecActs::DisplayOff), 0, kIEngMsgs::midSAct_DisplayOff,  { L"", L"", L"", L"DisplayOff", L"ESpecActs::DisplayOff", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ESpecActs::BlankAndBlanker), 0, kIEngMsgs::midSAct_BlankAndBlanker,  { L"", L"", L"", L"BlankAndBlanker", L"ESpecActs::BlankAndBlanker", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ESpecActs::ClockBlanker), 0, kIEngMsgs::midSAct_ClockBlanker,  { L"", L"", L"", L"ClockBlanker", L"ESpecActs::ClockBlanker", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ESpecActs::ShowBlanker), 0, kIEngMsgs::midSAct_ShowBlanker,  { L"", L"", L"", L"ShowBlanker", L"ESpecActs::ShowBlanker", L"" } }

};

static TEnumMap emapESpecActs
(
     L"ESpecActs"
     , 8
     , kCIDLib::False
     , aeitemValues_ESpecActs
     , &facCQCIntfEng()
     , tCIDLib::TCard4(tCQCIntfEng::ESpecActs::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatESpecActs(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapESpecActs.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatESpecActs(const tCQCIntfEng::ESpecActs eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapESpecActs.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCIntfEng::ESpecActs tCQCIntfEng::eXlatESpecActs(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::ESpecActs(emapESpecActs.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::ESpecActs* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::ESpecActs(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::ESpecActs* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::ESpecActs eVal)
{
    return emapESpecActs.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ETBLayouts[4] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::ETBLayouts::Centered), 0, kIEngMsgs::midTBLayout_Centered,  { L"", L"", L"", L"Centered", L"ETBLayouts::Centered", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETBLayouts::TextAbove), 0, kIEngMsgs::midTBLayout_TextAbove,  { L"", L"", L"", L"TextAbove", L"ETBLayouts::TextAbove", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETBLayouts::TextBelow), 0, kIEngMsgs::midTBLayout_TextBelow,  { L"", L"", L"", L"TextBelow", L"ETBLayouts::TextBelow", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETBLayouts::ImgOnly), 0, kIEngMsgs::midTBLayout_ImgOnly,  { L"", L"", L"", L"ImgOnly", L"ETBLayouts::ImgOnly", L"" } }

};

static TEnumMap emapETBLayouts
(
     L"ETBLayouts"
     , 4
     , kCIDLib::False
     , aeitemValues_ETBLayouts
     , &facCQCIntfEng()
     , tCIDLib::TCard4(tCQCIntfEng::ETBLayouts::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatETBLayouts(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapETBLayouts.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatETBLayouts(const tCQCIntfEng::ETBLayouts eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapETBLayouts.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCIntfEng::ETBLayouts tCQCIntfEng::eXlatETBLayouts(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::ETBLayouts(emapETBLayouts.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::ETBLayouts* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::ETBLayouts(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::ETBLayouts* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::ETBLayouts eVal)
{
    return emapETBLayouts.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ETransIcons[12] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Down), 0, 0,  { L"", L"", L"", L"Down", L"ETransIcons::Down", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Eject), 0, 0,  { L"", L"", L"", L"Eject", L"ETransIcons::Eject", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::FF), 0, 0,  { L"", L"", L"", L"FF", L"ETransIcons::FF", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Left), 0, 0,  { L"", L"", L"", L"Left", L"ETransIcons::Left", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Next), 0, 0,  { L"", L"", L"", L"Next", L"ETransIcons::Next", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Pause), 0, 0,  { L"", L"", L"", L"Pause", L"ETransIcons::Pause", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Play), 0, 0,  { L"", L"", L"", L"Play", L"ETransIcons::Play", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Prev), 0, 0,  { L"", L"", L"", L"Prev", L"ETransIcons::Prev", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Rew), 0, 0,  { L"", L"", L"", L"Rew", L"ETransIcons::Rew", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Right), 0, 0,  { L"", L"", L"", L"Right", L"ETransIcons::Right", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Stop), 0, 0,  { L"", L"", L"", L"Stop", L"ETransIcons::Stop", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::ETransIcons::Up), 0, 0,  { L"", L"", L"", L"Up", L"ETransIcons::Up", L"" } }

};

static TEnumMap emapETransIcons
(
     L"ETransIcons"
     , 12
     , kCIDLib::False
     , aeitemValues_ETransIcons
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::ETransIcons::Count)
);

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::ETransIcons* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::ETransIcons(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::ETransIcons* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::ETransIcons eVal)
{
    return emapETransIcons.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EHTxtImgLayouts[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EHTxtImgLayouts::TextLeft), 0, 0,  { L"", L"", L"", L"TextLeft", L"EHTxtImgLayouts::TextLeft", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHTxtImgLayouts::Center), 0, 0,  { L"", L"", L"", L"Center", L"EHTxtImgLayouts::Center", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EHTxtImgLayouts::TextRight), 0, 0,  { L"", L"", L"", L"TextRight", L"EHTxtImgLayouts::TextRight", L"" } }

};

static TEnumMap emapEHTxtImgLayouts
(
     L"EHTxtImgLayouts"
     , 3
     , kCIDLib::False
     , aeitemValues_EHTxtImgLayouts
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EHTxtImgLayouts::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatEHTxtImgLayouts(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEHTxtImgLayouts.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatEHTxtImgLayouts(const tCQCIntfEng::EHTxtImgLayouts eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEHTxtImgLayouts.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCIntfEng::EHTxtImgLayouts tCQCIntfEng::eXlatEHTxtImgLayouts(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::EHTxtImgLayouts(emapEHTxtImgLayouts.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::EHTxtImgLayouts* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::EHTxtImgLayouts(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::EHTxtImgLayouts* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EHTxtImgLayouts eVal)
{
    return emapEHTxtImgLayouts.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EValErrTypes[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EValErrTypes::Widget), 0, 0,  { L"", L"", L"", L"Widget", L"EValErrTypes::Widget", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EValErrTypes::State), 0, 0,  { L"", L"", L"", L"State", L"EValErrTypes::State", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EValErrTypes::Template), 0, 0,  { L"", L"", L"", L"Template", L"EValErrTypes::Template", L"" } }

};

static TEnumMap emapEValErrTypes
(
     L"EValErrTypes"
     , 3
     , kCIDLib::False
     , aeitemValues_EValErrTypes
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EValErrTypes::Count)
);

tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EValErrTypes eVal)
{
    return emapEValErrTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EVarStates[4] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EVarStates::WaitVar), 0, 0,  { L"", L"", L"", L"WaitVar", L"EVarStates::WaitVar", L"WaitForVar" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EVarStates::Rejected), 0, 0,  { L"", L"", L"", L"Rejected", L"EVarStates::Rejected", L"VarRejected" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EVarStates::ValError), 0, 0,  { L"", L"", L"", L"ValError", L"EVarStates::ValError", L"VarValError" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EVarStates::Ready), 0, 0,  { L"", L"", L"", L"Ready", L"EVarStates::Ready", L"VarReady" } }

};

static TEnumMap emapEVarStates
(
     L"EVarStates"
     , 4
     , kCIDLib::False
     , aeitemValues_EVarStates
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EVarStates::Count)
);

const TString& tCQCIntfEng::strXlatEVarStates(const tCQCIntfEng::EVarStates eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEVarStates.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::Text, bThrowIfNot);
}

tCQCIntfEng::EVarStates tCQCIntfEng::eXlatEVarStates(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::EVarStates(emapEVarStates.i4MapEnumText(strVal, TEnumMap::ETextVals::Text, bThrowIfNot));
}

tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EVarStates eVal)
{
    return emapEVarStates.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EVTxtImgLayouts[3] = 
{
    {  tCIDLib::TInt4(tCQCIntfEng::EVTxtImgLayouts::TextTop), 0, 0,  { L"", L"", L"", L"TextTop", L"EVTxtImgLayouts::TextTop", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EVTxtImgLayouts::Center), 0, 0,  { L"", L"", L"", L"Center", L"EVTxtImgLayouts::Center", L"" } }
  , {  tCIDLib::TInt4(tCQCIntfEng::EVTxtImgLayouts::TextBottom), 0, 0,  { L"", L"", L"", L"TextBottom", L"EVTxtImgLayouts::TextBottom", L"" } }

};

static TEnumMap emapEVTxtImgLayouts
(
     L"EVTxtImgLayouts"
     , 3
     , kCIDLib::False
     , aeitemValues_EVTxtImgLayouts
     , nullptr
     , tCIDLib::TCard4(tCQCIntfEng::EVTxtImgLayouts::Count)
);

tCIDLib::TVoid tCQCIntfEng::FormatEVTxtImgLayouts(TString& strToFill, const TString& strPrefix, const tCIDLib::TCh chSepChar, const TEnumMap::ETextVals eVal)
{
    emapEVTxtImgLayouts.FormatValues(strToFill, strPrefix, chSepChar, eVal);
}
const TString& tCQCIntfEng::strXlatEVTxtImgLayouts(const tCQCIntfEng::EVTxtImgLayouts eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEVTxtImgLayouts.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCIntfEng::EVTxtImgLayouts tCQCIntfEng::eXlatEVTxtImgLayouts(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCIntfEng::EVTxtImgLayouts(emapEVTxtImgLayouts.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tCQCIntfEng::EVTxtImgLayouts* const aeList, const tCIDLib::TCard4 c4Count)
{
    tCIDLib::TCard4 c4Cur;
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
    {
        strmSrc >> c4Cur;
        aeList[c4Index] = tCQCIntfEng::EVTxtImgLayouts(c4Cur);
    }
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tCQCIntfEng::EVTxtImgLayouts* const aeList, const tCIDLib::TCard4 c4Count)
{
    for (tCIDLib::TCard4 c4Index = 0; c4Index < c4Count; c4Index++)
        strmTar << tCIDLib::TCard4(aeList[c4Index]);
}
tCIDLib::TBoolean tCQCIntfEng::bIsValidEnum(const tCQCIntfEng::EVTxtImgLayouts eVal)
{
    return emapEVTxtImgLayouts.bIsValidEnum(tCIDLib::TCard4(eVal));

}

