// ----------------------------------------------------------------------------
//  FILE: CQCWBHelper_CtrlServerBase.cpp
//  DATE: Tue, Jan 19 17:39:55 2021 -0500
//    ID: 897DB4F355CD673E-27AB212C9BA59D73
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
// Includes
// ----------------------------------------------------------------------------
#include "CQCWBHelper.hpp"

// ----------------------------------------------------------------------------
// Magic macros
// ----------------------------------------------------------------------------
RTTIDecls(TCQCWBHelperServerBase,TOrbServerBase)


// ----------------------------------------------------------------------------
// Public, static data
// ----------------------------------------------------------------------------
const TString TCQCWBHelperServerBase::strInterfaceId(L"897DB4F355CD673E-27AB212C9BA59D73");
// ----------------------------------------------------------------------------
// TCQCWBHelperServerBase: Destructor
// ----------------------------------------------------------------------------
TCQCWBHelperServerBase::~TCQCWBHelperServerBase()
{
}

// ----------------------------------------------------------------------------
// TCQCWBHelperServerBase: Protected Constructors
// ----------------------------------------------------------------------------
TCQCWBHelperServerBase::TCQCWBHelperServerBase() :
    TOrbServerBase(strInterfaceId, L"TCQCWBHelperClientProxy" )
{
}

TCQCWBHelperServerBase::TCQCWBHelperServerBase(const TOrbObjId& ooidThis) :
    TOrbServerBase(ooidThis)
{
}

// ----------------------------------------------------------------------------
// TCQCWBHelperServerBase: Public, non-virtual methods
// ----------------------------------------------------------------------------
tCIDLib::TVoid TCQCWBHelperServerBase::Dispatch(const TString& strMethodName, TOrbCmd& orbcToDispatch)
{
    if (strMethodName == L"Close")
    {
        Close
        (
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"DoOp")
    {
        tWebBrowser::ENavOps eToDo;
        orbcToDispatch.strmIn() >> eToDo;
        DoOp
        (
            eToDo
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"Initialize")
    {
        TArea areaPar;
        orbcToDispatch.strmIn() >> areaPar;
        TArea areaWidget;
        orbcToDispatch.strmIn() >> areaWidget;
        tCIDLib::TBoolean bVisibility;
        orbcToDispatch.strmIn() >> bVisibility;
        TString strInitURL;
        orbcToDispatch.strmIn() >> strInitURL;
        Initialize
        (
            areaPar
          , areaWidget
          , bVisibility
          , strInitURL
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"Ping")
    {
        Ping
        (
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"SetArea")
    {
        TArea areaPar;
        orbcToDispatch.strmIn() >> areaPar;
        TArea areaWidget;
        orbcToDispatch.strmIn() >> areaWidget;
        SetArea
        (
            areaPar
          , areaWidget
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"SetURL")
    {
        TString strToSet;
        orbcToDispatch.strmIn() >> strToSet;
        SetURL
        (
            strToSet
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"SetVisibility")
    {
        tCIDLib::TBoolean bNewState;
        orbcToDispatch.strmIn() >> bNewState;
        SetVisibility
        (
            bNewState
        );
        orbcToDispatch.strmOut().Reset();
    }
     else
    {
         TParent::Dispatch(strMethodName, orbcToDispatch);
    }
}

