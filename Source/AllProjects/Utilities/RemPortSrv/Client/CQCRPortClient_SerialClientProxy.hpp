// ----------------------------------------------------------------------------
//  FILE: CQCRPortClient_SerialClientProxy.hpp
//  DATE: Tue, Jan 19 17:39:55 2021 -0500
//    ID: D7E08846B00F19C8-DE9D46C5B2C1AC0C
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------
#pragma once

#pragma CIDLIB_PACK(CIDLIBPACK)

class CQCRPORTCEXPORT TRemSerialSrvClientProxy : public TOrbClientBase
{
    public :
        // --------------------------------------------------------------------
        // Public, static data
        // --------------------------------------------------------------------
        static const TString strInterfaceId;
        static constexpr tCIDLib::TCard4 ippnDefault = 17941;
        static const TString strInstanceId;
        static const TString strSerialPathPrefix;
        static const TString strSerialFactoryId;



        // --------------------------------------------------------------------
        // Public Constructors and Destructor
        // --------------------------------------------------------------------
        TRemSerialSrvClientProxy();
        TRemSerialSrvClientProxy(const TOrbObjId& ooidSrc, const TString& strNSBinding);
        TRemSerialSrvClientProxy(const TRemSerialSrvClientProxy&) = delete;
        TRemSerialSrvClientProxy(TRemSerialSrvClientProxy&&) = delete;
        ~TRemSerialSrvClientProxy();

        // --------------------------------------------------------------------
        // Public operators
        // --------------------------------------------------------------------
        TRemSerialSrvClientProxy& operator=(const TRemSerialSrvClientProxy&) = delete;
        TRemSerialSrvClientProxy& operator=(TRemSerialSrvClientProxy&&) = delete;

        // --------------------------------------------------------------------
        // Public, inherited methods
        // --------------------------------------------------------------------
        tCIDLib::TVoid SetObjId
        (
            const   TOrbObjId& ooidToSet
            , const TString& strNSBinding
            , const tCIDLib::TBoolean bCheck = kCIDLib::True
        )   override;

        // --------------------------------------------------------------------
        // Public, non-virtual methods
        // --------------------------------------------------------------------
        tCIDLib::TBoolean bQueryCommPorts
        (
            TVector<TString>& colToFill
        );

        tCIDLib::TVoid CloseAllPorts();

        tCIDLib::TBoolean bIsOpen
        (
            const tCIDLib::TCard4 c4Cookie
        );

        tCIDLib::TBoolean bQueryCTSOn
        (
            const tCIDLib::TCard4 c4Cookie
        );

        tCIDLib::TBoolean bQueryDSROn
        (
            const tCIDLib::TCard4 c4Cookie
        );

        tCIDLib::TCard4 c4Open
        (
            const TString& strPortPath
            , const tCIDComm::EOpenFlags eFlags
            , const tCIDLib::TCard4 c4ReadBufSz
            , const tCIDLib::TCard4 c4WriteBufSz
        );

        tCIDLib::TCard4 c4WriteBufMS
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDLib::TCard4 c4BufSz_mbufToWrite
            , const THeapBuf& mbufToWrite
            , const tCIDLib::TCard4 c4Wait
        );

        tCIDLib::TVoid Close
        (
            const tCIDLib::TCard4 c4Cookie
        );

        tCIDLib::TVoid Cycle
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDComm::EOpenFlags eFlags
            , const tCIDLib::TCard4 c4ReadBufSz
            , const tCIDLib::TCard4 c4WriteBufSz
        );

        tCIDLib::TVoid FlushWriteBuffer
        (
            const tCIDLib::TCard4 c4Cookie
        );

        tCIDLib::TVoid PurgeReadData
        (
            const tCIDLib::TCard4 c4Cookie
        );

        tCIDLib::TVoid PurgeWriteData
        (
            const tCIDLib::TCard4 c4Cookie
        );

        tCIDLib::TVoid QueryCfg
        (
            const tCIDLib::TCard4 c4Cookie
            , TCommPortCfg& cpcfgToFill
        );

        tCIDLib::TVoid QueryFlags
        (
            const tCIDLib::TCard4 c4Cookie
            , tCIDComm::EFlags& eToFill
        );

        tCIDLib::TVoid QueryLineStates
        (
            const tCIDLib::TCard4 c4Cookie
            , tCIDLib::TBoolean& bCTSOn
            , tCIDLib::TBoolean& bDSROn
            , tCIDLib::TBoolean& bRingOn
            , tCIDLib::TBoolean& bRLSOn
        );

        tCIDLib::TVoid QueryXChars
        (
            const tCIDLib::TCard4 c4Cookie
            , tCIDLib::TCard4& c4On
            , tCIDLib::TCard4& c4Off
        );

        tCIDLib::TVoid ReadBufMS
        (
            const tCIDLib::TCard4 c4Cookie
            , tCIDLib::TCard4& c4BufSz_mbufToFill
            , THeapBuf& mbufToFill
            , const tCIDLib::TCard4 c4MaxBytes
            , const tCIDLib::TCard4 c4Wait
        );

        tCIDLib::TVoid ReadBuf
        (
            const tCIDLib::TCard4 c4Cookie
            , tCIDLib::TCard4& c4BufSz_mbufToFill
            , THeapBuf& mbufToFill
            , const tCIDLib::TCard4 c4MaxBytes
            , const tCIDLib::TCard8 enctEndTime
        );

        tCIDLib::TVoid Reset
        (
            const tCIDLib::TCard4 c4Cookie
        );

        tCIDLib::TVoid SetBaudRate
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDLib::TCard4 c4ToSet
        );

        tCIDLib::TVoid SetBreak
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDLib::TBoolean bState
        );

        tCIDLib::TVoid SetCfg
        (
            const tCIDLib::TCard4 c4Cookie
            , const TCommPortCfg& cpcfgPortCfg
        );

        tCIDLib::TVoid SetDataBits
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDComm::EDataBits eToSet
        );

        tCIDLib::TVoid SetDTR
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDComm::EPortDTR eToSet
        );

        tCIDLib::TVoid SetEOFChar
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDLib::TCard4 c4ToSet
        );

        tCIDLib::TVoid SetFlags
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDComm::EFlags eToSet
            , const tCIDComm::EFlags eMask
        );

        tCIDLib::TVoid SetParity
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDComm::EParities eToSet
        );

        tCIDLib::TVoid SetRTS
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDComm::EPortRTS eToSet
        );

        tCIDLib::TVoid SetStopBits
        (
            const tCIDLib::TCard4 c4Cookie
            , const tCIDComm::EStopBits eToSet
        );

    protected :
        // --------------------------------------------------------------------
        // Declare our friends
        // --------------------------------------------------------------------
        friend class TFacCIDOrb;

    private :
        // --------------------------------------------------------------------
        // Magic macros
        // --------------------------------------------------------------------
        RTTIDefs(TRemSerialSrvClientProxy,TOrbClientBase)
};

#pragma CIDLIB_POPPACK

inline tCIDLib::TVoid
TRemSerialSrvClientProxy::SetObjId(const  TOrbObjId& ooidToSet
              , const TString& strNSBinding
              , const tCIDLib::TBoolean bCheck)
{
    TParent::SetObjId(ooidToSet, strNSBinding, bCheck);
}

