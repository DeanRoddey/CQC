// ----------------------------------------------------------------------------
//  FILE: CQSLRepoImp_CQSLRepoClientProxy.hpp
//  DATE: Thu, Sep 27 21:06:35 2012 -0700
//    ID: 664424407F8B705F-F0C14316C78994B2
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

#pragma CIDLIB_PACK(CIDLIBPACK)

class  TCQSLRepoMgrClientProxy : public TOrbClientBase
{
    public :
        // --------------------------------------------------------------------
        // Public, static data
        // --------------------------------------------------------------------
        static const TString strInterfaceId;
        static const tCIDLib::TCard4 c4ProtoVer;
        static const TString strBindingName;
        static const TString strBindingScope;



        // --------------------------------------------------------------------
        // Public Constructors and Destructor
        // --------------------------------------------------------------------
        TCQSLRepoMgrClientProxy();
        TCQSLRepoMgrClientProxy(const TOrbObjId& ooidSrc, const TString& strNSBinding);
        ~TCQSLRepoMgrClientProxy();

        // --------------------------------------------------------------------
        // Public, inherited methods
        // --------------------------------------------------------------------
        tCIDLib::TVoid SetObjId
        (
            const   TOrbObjId& ooidToSet
            , const TString& strNSBinding
            , const tCIDLib::TBoolean bCheck = kCIDLib::True
        );

        // --------------------------------------------------------------------
        // Public, non-virtual methods
        // --------------------------------------------------------------------
        tCIDLib::TBoolean bAddToPlayList
        (
            const TString& strLeaseId
            , const tCIDLib::TCard4 c4PLId
            , const tCIDLib::TCard4 c4AddId
            , const tCIDLib::TBoolean bIsCollection
        );

        tCIDLib::TBoolean bCheckIdExists
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eMType
            , const tCQCMedia::EDataTypes eDType
            , const tCIDLib::TCard4 c4Id
        );

        tCIDLib::TBoolean bCheckUIDExists
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eMType
            , const tCQCMedia::EDataTypes eDType
            , const TString& strUniqueID
            , tCIDLib::TCard4& c4Id
            , TString& strName
        );

        tCIDLib::TBoolean bGetLease
        (
            const TString& strLeaseId
            , const tCIDLib::TBoolean bOverride
        );

        tCIDLib::TBoolean bQueryArtById
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4Id
            , tCIDLib::TCard4& c4BufSz_mbufArt
            , THeapBuf& mbufArt
            , const tCIDLib::TBoolean bLargeArt
            , const tCIDLib::TBoolean bThrowIfNot
        );

        tCIDLib::TBoolean bQueryCategories
        (
            const TString& strLeaseId
            , tCIDLib::TCard4& c4SerialNum
            , const tCQCMedia::EMediaTypes eType
            , TVector<TMediaCat>& colToFill
            , const tCIDLib::TBoolean bIncludeStd
        );

        tCIDLib::TBoolean bQueryCollectById
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4Id
            , TMediaCollect& mcolFound
            , const tCIDLib::TBoolean bThrowIfNot
        );

        tCIDLib::TBoolean bQueryCollectByUID
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const TString& strUniqueID
            , TMediaCollect& mcolFound
            , const tCIDLib::TBoolean bThrowIfNot
        );

        tCIDLib::TBoolean bQueryItemById
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4Id
            , TMediaItem& mitemFound
            , const tCIDLib::TBoolean bThrowIfNot
        );

        tCIDLib::TBoolean bQueryTitleSetById
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4Id
            , TMediaTitleSet& mtsFound
            , const tCIDLib::TBoolean bThrowIfNot
        );

        tCIDLib::TBoolean bQueryTitleSetByUID
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const TString& strUniqueID
            , TMediaTitleSet& mtsFound
            , const tCIDLib::TBoolean bThrowIfNot
        );

        tCIDLib::TBoolean bRepoIsEmpty
        (
            const TString& strLeaseId
        );

        tCIDLib::TBoolean bStartUpload
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4FileCount
            , const TMediaTitleSet& mtsUpload
            , const TMediaCollect& mcolUpload
            , const tCIDLib::TCard4 c4BufSz_mbufArt
            , const THeapBuf& mbufArt
            , TString& strHostUpload
            , tCIDLib::TCard4& ippnUpload
            , tCIDLib::TCard4& c4Cookie
        );

        tCIDLib::TCard4 c4FindCategory
        (
            const TString& strLeaseId
            , const TString& strName
            , const tCQCMedia::EMediaTypes eType
        );

        tCIDLib::TCard4 c4QueryAvailSlots
        (
            const TString& strLeaseId
            , const TString& strChangerMoniker
            , TBitset& btsToFill
            , const tCIDLib::TCard4 c4MaxSlot
        );

        tCIDLib::TCard4 c4QueryAvailSlots2
        (
            const TString& strLeaseId
            , const TString& strChangerMoniker
            , TBitset& btsToFill
            , const tCIDLib::TCard4 c4MaxSlot
            , TVector<TString>& colColNames
        );

        tCIDLib::TCard4 c4QueryPlayLists
        (
            const TString& strLeaseId
            , TVector<TString>& colNames
            , TFundVector<tCIDLib::TCard2>& fcolIds
        );

        tCIDLib::TVoid QueryStats
        (
            tCIDLib::TCard4& c4MovieTitleCnt
            , tCIDLib::TCard4& c4MovieColCnt
            , tCIDLib::TCard4& c4MovieItemCnt
            , tCIDLib::TCard4& c4MovieArtCnt
            , tCIDLib::TCard4& c4MusicTitleCnt
            , tCIDLib::TCard4& c4MusicColCnt
            , tCIDLib::TCard4& c4MusicItemCnt
            , tCIDLib::TCard4& c4MusicArtCnt
            , TString& strRepoPath
        );

        tCIDLib::TCard4 c4QueryTitleSetChunk
        (
            const TString& strLeaseId
            , const tCIDLib::TCard4 c4StartAt
            , const tCIDLib::TCard4 c4GetUpTo
            , const tCQCMedia::EMediaTypes eType
            , TVector<TMediaTitleSet>& colToFill
        );

        tCIDLib::TVoid CreateCategories
        (
            const TString& strLeaseId
            , const TVector<TString>& colNames
            , const tCQCMedia::EMediaTypes eType
            , TFundVector<tCIDLib::TCard2>& fcolIds
        );

        tCIDLib::TVoid DeleteCat
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4CatId
        );

        tCIDLib::TVoid DeleteCollection
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4TitleId
            , const tCIDLib::TCard4 c4ColId
        );

        tCIDLib::TVoid DeleteTitleSet
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4TitleId
        );

        tCIDLib::TVoid DropLease
        (
            const TString& strLeaseId
        );

        tCIDLib::TVoid QueryChangers
        (
            TVector<TString>& colMonikersToFill
        );

        tCIDLib::TVoid QueryRepoInfo
        (
            const TString& strLeaseId
            , tCQCMedia::EMediaTypes& eDefType
            , tCQCMedia::EMTFlags& eFlags
        );

        tCIDLib::TVoid MoveCollect
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4ColId
            , TMediaTitleSet& mtsOld
            , TMediaTitleSet& mtsNew
            , const tCIDLib::TBoolean bCreateNew
        );

        tCIDLib::TVoid RenameCat
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4Id
            , const TString& strOldName
            , const TString& strNewName
        );

        tCIDLib::TVoid SearchAndReplace
        (
            const TString& strLeaseId
            , const TString& strFind
            , const TString& strReplace
            , tCIDLib::TCard4& c4ModCnt
        );

        tCIDLib::TVoid UploadArt
        (
            const TString& strLeaseId
            , tCIDLib::TCard4& c4Id
            , const tCQCMedia::EMediaTypes eType
            , const tCIDLib::TCard4 c4BufSz_mbufArt
            , const THeapBuf& mbufArt
            , const tCIDLib::TBoolean bCreate
        );

        tCIDLib::TVoid UploadCat
        (
            const TString& strLeaseId
            , TMediaCat& mcatToStore
            , const tCIDLib::TBoolean bCreate
        );

        tCIDLib::TVoid UploadCollect
        (
            const TString& strLeaseId
            , TMediaCollect& mcolToStore
            , const tCIDLib::TBoolean bCreate
        );

        tCIDLib::TVoid UploadItem
        (
            const TString& strLeaseId
            , TMediaItem& mitemToStore
            , const tCIDLib::TBoolean bCreate
        );

        tCIDLib::TVoid UploadTitleSet
        (
            const TString& strLeaseId
            , TMediaTitleSet& mtsToStore
            , const tCIDLib::TBoolean bCreate
        );

        tCIDLib::TVoid UploadNewMeta
        (
            const TString& strLeaseId
            , const tCQCMedia::EMediaTypes eType
            , const TVector<TString>& colCatNames
            , TMediaTitleSet& mtsToStore
            , TMediaCollect& mcolToStore
            , TVector<TMediaItem>& colItems
            , const tCIDLib::TCard4 c4BufSz_mbufArt
            , const THeapBuf& mbufArt
        );

    protected :
        // --------------------------------------------------------------------
        // Declare our friends
        // --------------------------------------------------------------------
        friend class TFacCIDOrb;

    private :
        // --------------------------------------------------------------------
        // Unimplemented ctors and operators
        // --------------------------------------------------------------------
        TCQSLRepoMgrClientProxy(const TCQSLRepoMgrClientProxy&);
        tCIDLib::TVoid operator=(const TCQSLRepoMgrClientProxy&);

        // --------------------------------------------------------------------
        // Magic macros
        // --------------------------------------------------------------------
        RTTIDefs(TCQSLRepoMgrClientProxy,TOrbClientBase)
};

#pragma CIDLIB_POPPACK

inline tCIDLib::TVoid
TCQSLRepoMgrClientProxy::SetObjId(const  TOrbObjId& ooidToSet
              , const TString& strNSBinding
              , const tCIDLib::TBoolean bCheck)
{
    TParent::SetObjId(ooidToSet, strNSBinding, bCheck);
}

