// ----------------------------------------------------------------------------
//  FILE: CQCVoice_Internal.cpp
//  DATE: Fri, Feb 12 21:14:16 2021 -0500
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

#include "CQCVoice.hpp"

const TString kCQCVoice::strAction_CancelOp(L"CancelOp");
const TString kCQCVoice::strAction_ClarifyAddUpdateReminder(L"ClarifyAddUpdateReminder");
const TString kCQCVoice::strAction_ClarifyArmMode(L"ClarifyArmMode");
const TString kCQCVoice::strAction_ClarifyHLSP(L"ClarifyHLSP");
const TString kCQCVoice::strAction_ClarifyIntExtTemp(L"ClarifyIntExtTemp");
const TString kCQCVoice::strAction_ClarifyMinutes(L"ClarifyMinutes");
const TString kCQCVoice::strAction_ClarifyMusicCat(L"ClarifyMusicCat");
const TString kCQCVoice::strAction_ClarifyMusicPL(L"ClarifyMusicPL");
const TString kCQCVoice::strAction_ClarifyMute(L"ClarifyMute");
const TString kCQCVoice::strAction_ClarifyOff(L"ClarifyOff");
const TString kCQCVoice::strAction_ClarifyOn(L"ClarifyOn");
const TString kCQCVoice::strAction_ClarifyPercentVal(L"ClarifyPercentVal");
const TString kCQCVoice::strAction_ClarifyRoomMode(L"ClarifyRoomMode");
const TString kCQCVoice::strAction_ClarifySignedNum(L"ClarifySignedNum");
const TString kCQCVoice::strAction_ClarifyZoneName(L"ClarifyZoneName");
const TString kCQCVoice::strAction_ClarifyZoneState(L"ClarifyZoneState");
const TString kCQCVoice::strAction_WakeupKeyWord(L"WakeupVoice");
const TString kCQCVoice::strAction_No(L"No");
const TString kCQCVoice::strAction_Yes(L"Yes");
const TString kCQCVoice::strFact_Name(L"CQCVoice");
const TString kCQCVoice::strFact_Prefix(L"/CQCVoice/");
const TString kCQCVoice::strCQCVoiceFact_CmdArmSecSystem(L"/CQCVoice/CmdArmSecSystem");
const TString kCQCVoice::strCQCVoiceFact_CmdCancelAllReminders(L"/CQCVoice/CmdCancelAllReminders");
const TString kCQCVoice::strCQCVoiceFact_CmdBringUpLights(L"/CQCVoice/CmdBringUpLights");
const TString kCQCVoice::strCQCVoiceFact_CmdCancelLastReminder(L"/CQCVoice/CmdCancelLastReminder");
const TString kCQCVoice::strCQCVoiceFact_CancelOp(L"/CQCVoice/CancelOp");
const TString kCQCVoice::strCQCVoiceFact_CmdClearMusicPL(L"/CQCVoice/CmdClearMusicPL");
const TString kCQCVoice::strCQCVoiceFact_CmdDisarmSecSystem(L"/CQCVoice/CmdDisarmSecSystem");
const TString kCQCVoice::strCQCVoiceFact_CmdKillLights(L"/CQCVoice/CmdKillLights");
const TString kCQCVoice::strCQCVoiceFact_CmdMusicTransport(L"/CQCVoice/CmdMusicTransport");
const TString kCQCVoice::strCQCVoiceFact_CmdNextMusicItem(L"/CQCVoice/CmdNextMusicItem");
const TString kCQCVoice::strCQCVoiceFact_CmdPlayMusicFromCat(L"/CQCVoice/CmdPlayMusicFromCat");
const TString kCQCVoice::strCQCVoiceFact_CmdPlayMusicPL(L"/CQCVoice/CmdPlayMusicPL");
const TString kCQCVoice::strCQCVoiceFact_CmdReloadCfg(L"/CQCVoice/CmdReloadCfg");
const TString kCQCVoice::strCQCVoiceFact_CmdRemindMe(L"/CQCVoice/CmdRemindMe");
const TString kCQCVoice::strCQCVoiceFact_CmdSetItToNum(L"/CQCVoice/CmdSetItToNum");
const TString kCQCVoice::strCQCVoiceFact_CmdSetLightLevel(L"/CQCVoice/CmdSetLightLevel");
const TString kCQCVoice::strCQCVoiceFact_CmdSetLightSwitch(L"/CQCVoice/CmdSetLightSwitch");
const TString kCQCVoice::strCQCVoiceFact_CmdSetMusicMute(L"/CQCVoice/CmdSetMusicMute");
const TString kCQCVoice::strCQCVoiceFact_CmdSetMusicPLMode(L"/CQCVoice/CmdSetMusicPLMode");
const TString kCQCVoice::strCQCVoiceFact_CmdSetMusicVolume(L"/CQCVoice/CmdSetMusicVolume");
const TString kCQCVoice::strCQCVoiceFact_CmdSetRoomMode(L"/CQCVoice/CmdSetRoomMode");
const TString kCQCVoice::strCQCVoiceFact_CmdSetThermoHLSP(L"/CQCVoice/CmdSetThermoHLSP");
const TString kCQCVoice::strCQCVoiceFact_CmdTurnItOffOn(L"/CQCVoice/CmdTurnItOffOn");
const TString kCQCVoice::strCQCVoiceFact_QueryCQCVer(L"/CQCVoice/QueryCQCVer");
const TString kCQCVoice::strCQCVoiceFact_QueryCurrentTemp(L"/CQCVoice/QueryCurrentTemp");
const TString kCQCVoice::strCQCVoiceFact_QueryCurrentTime(L"/CQCVoice/QueryCurrentTime");
const TString kCQCVoice::strCQCVoiceFact_QueryLightSwitch(L"/CQCVoice/QueryLightSwitch");
const TString kCQCVoice::strCQCVoiceFact_QueryLightSwitchState(L"/CQCVoice/QueryLightSwitchState");
const TString kCQCVoice::strCQCVoiceFact_QuerySecZoneState(L"/CQCVoice/QuerySecZoneState");
const TString kCQCVoice::strCQCVoiceFact_QueryThermoHLSP(L"/CQCVoice/QueryThermoHLSP");
const TString kCQCVoice::strCQCVoiceFact_QueryTodaysDate(L"/CQCVoice/QueryTodaysDate");
const TString kCQCVoice::strCQCVoiceFact_QueryWeatherShortFC(L"/CQCVoice/QueryWeatherShortFC");
const TString kCQCVoice::strCQCVoiceFact_Start(L"/CQCVoice/Start");
const TString kCQCVoice::strRule_ArmModes(L"ArmModes");
const TString kCQCVoice::strRule_LightList(L"LightList");
const TString kCQCVoice::strRule_CmdPlayMusicPL(L"CmdPlayMusicPL");
const TString kCQCVoice::strRule_CustReminders(L"CustReminders");
const TString kCQCVoice::strRule_WakeupKeyWord(L"WakeupKeyWord");
const TString kCQCVoice::strRule_MusicCategories(L"MusicCategories");
const TString kCQCVoice::strRule_PlayLists(L"PlayLists");
const TString kCQCVoice::strRule_RoomModes(L"RoomModes");
const TString kCQCVoice::strRule_SecZones(L"SecZones");
const TString kCQCVoice::strRule_KeyWord(L"KeyWord");
const TString kCQCVoice::strSemVal_Action(L"Action");
const TString kCQCVoice::strSemVal_DataType(L"DataType");
const TString kCQCVoice::strSemVal_Info(L"Info");
const TString kCQCVoice::strSemVal_Prefixed(L"Prefixed");
const TString kCQCVoice::strSemVal_State(L"State");
const TString kCQCVoice::strSemVal_Target(L"Target");
const TString kCQCVoice::strSemVal_TarType(L"TarType");
const TString kCQCVoice::strSemVal_KeyWord(L"KeyWord");
const TString kCQCVoice::strType_LightSwitch(L"LightSwitch");
const TString kCQCVoice::strType_Dimmer(L"Dimmer");
const TString kCQCVoice::strType_HLSetPoint(L"HLSetPoint");
const TString kCQCVoice::strVal_Action(L"Action");
const TString kCQCVoice::strVal_Add(L"Add");
const TString kCQCVoice::strVal_ClrPref(L"CLGHT#");
const TString kCQCVoice::strVal_DefKeyWord(L"Zira");
const TString kCQCVoice::strVal_DataType(L"DataType");
const TString kCQCVoice::strVal_Degrees(L"Degrees");
const TString kCQCVoice::strVal_DimPref(L"LGHT#Dim_");
const TString kCQCVoice::strVal_Enqueue(L"Enqueue");
const TString kCQCVoice::strVal_External(L"External");
const TString kCQCVoice::strVal_Internal(L"Internal");
const TString kCQCVoice::strVal_Light(L"light");
const TString kCQCVoice::strVal_Low(L"Low");
const TString kCQCVoice::strVal_CQCVoiceTree(L"CQCVoice");
const TString kCQCVoice::strVal_Music(L"Music");
const TString kCQCVoice::strVal_Mute(L"Mute");
const TString kCQCVoice::strVal_My(L"My");
const TString kCQCVoice::strVal_OffState(L"0");
const TString kCQCVoice::strVal_OnDemPrefix(L"OnDem");
const TString kCQCVoice::strVal_OnState(L"1");
const TString kCQCVoice::strVal_Pause(L"Pause");
const TString kCQCVoice::strVal_Play(L"Play");
const TString kCQCVoice::strVal_Prefixed(L"Prefixed");
const TString kCQCVoice::strVal_RandomCat(L"Random Category");
const TString kCQCVoice::strVal_Resume(L"Resume");
const TString kCQCVoice::strVal_SecuritySystem(L"security system");
const TString kCQCVoice::strVal_State(L"State");
const TString kCQCVoice::strVal_SwitchPref(L"LGHT#Sw_");
const TString kCQCVoice::strVal_Target(L"Target");
const TString kCQCVoice::strVal_TarType(L"TarType");
const TString kCQCVoice::strVal_Today(L"today");
const TString kCQCVoice::strVal_Thermostat(L"thermostat");
const TString kCQCVoice::strVal_UnMute(L"UnMute");
const TString kCQCVoice::strVal_Update(L"Update");
const TString kCQCVoice::strVal_Weather(L"Weather");
const TString kCQCVoice::strVal_Your(L"Your");
const TString kCQCVoice::strVar_LastTarget(L"LastTar");
const TString kCQCVoice::strVarVal_LastInfo(L"Info");
const TString kCQCVoice::strVarVal_LastTarget(L"Target");
const TString kCQCVoice::strVarVal_LastType(L"Type");


static TEnumMap::TEnumValItem aeitemValues_EConfLevels[4] = 
{
    {  tCIDLib::TInt4(tCQCVoice::EConfLevels::Low), 0, 0,  { L"", L"", L"", L"Low", L"EConfLevels::Low", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::EConfLevels::Medium), 0, 0,  { L"", L"", L"", L"Medium", L"EConfLevels::Medium", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::EConfLevels::High), 0, 0,  { L"", L"", L"", L"High", L"EConfLevels::High", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::EConfLevels::Full), 0, 0,  { L"", L"", L"", L"Full", L"EConfLevels::Full", L"" } }

};

static TEnumMap emapEConfLevels
(
     L"EConfLevels"
     , 4
     , kCIDLib::False
     , aeitemValues_EConfLevels
     , nullptr
     , tCIDLib::TCard4(tCQCVoice::EConfLevels::Count)
);

const TString& tCQCVoice::strXlatEConfLevels(const tCQCVoice::EConfLevels eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEConfLevels.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCVoice::EConfLevels tCQCVoice::eXlatEConfLevels(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCVoice::EConfLevels(emapEConfLevels.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TBoolean tCQCVoice::bIsValidEnum(const tCQCVoice::EConfLevels eVal)
{
    return emapEConfLevels.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_ELightReads[4] = 
{
    {  tCIDLib::TInt4(tCQCVoice::ELightReads::Off), 0, 0,  { L"", L"", L"", L"Off", L"ELightReads::Off", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::ELightReads::On), 0, 0,  { L"", L"", L"", L"On", L"ELightReads::On", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::ELightReads::NotFound), 0, 0,  { L"", L"", L"", L"NotFound", L"ELightReads::NotFound", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::ELightReads::Failed), 0, 0,  { L"", L"", L"", L"Failed", L"ELightReads::Failed", L"" } }

};

static TEnumMap emapELightReads
(
     L"ELightReads"
     , 4
     , kCIDLib::False
     , aeitemValues_ELightReads
     , nullptr
     , tCIDLib::TCard4(tCQCVoice::ELightReads::Count)
);

const TString& tCQCVoice::strXlatELightReads(const tCQCVoice::ELightReads eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapELightReads.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCVoice::ELightReads tCQCVoice::eXlatELightReads(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCVoice::ELightReads(emapELightReads.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TBoolean tCQCVoice::bIsValidEnum(const tCQCVoice::ELightReads eVal)
{
    return emapELightReads.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EStates[6] = 
{
    {  tCIDLib::TInt4(tCQCVoice::EStates::WaitLogin), 0, 0,  { L"", L"", L"", L"WaitLogin", L"EStates::WaitLogin", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::EStates::WaitVoiceCfg), 0, 0,  { L"", L"", L"", L"WaitVoiceCfg", L"EStates::WaitVoiceCfg", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::EStates::WaitRoomCfg), 0, 0,  { L"", L"", L"", L"WaitRoomCfg", L"EStates::WaitRoomCfg", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::EStates::WaitRecoInit), 0, 0,  { L"", L"", L"", L"WaitRecoInit", L"EStates::WaitRecoInit", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::EStates::WaitLoadGrammar), 0, 0,  { L"", L"", L"", L"WaitLoadGrammar", L"EStates::WaitLoadGrammar", L"" } }
  , {  tCIDLib::TInt4(tCQCVoice::EStates::Ready), 0, 0,  { L"", L"", L"", L"Ready", L"EStates::Ready", L"" } }

};

static TEnumMap emapEStates
(
     L"EStates"
     , 6
     , kCIDLib::False
     , aeitemValues_EStates
     , nullptr
     , tCIDLib::TCard4(tCQCVoice::EStates::Count)
);

const TString& tCQCVoice::strXlatEStates(const tCQCVoice::EStates eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEStates.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tCQCVoice::EStates tCQCVoice::eXlatEStates(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tCQCVoice::EStates(emapEStates.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TBoolean tCQCVoice::bIsValidEnum(const tCQCVoice::EStates eVal)
{
    return emapEStates.bIsValidEnum(tCIDLib::TCard4(eVal));

}

