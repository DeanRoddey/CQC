// ----------------------------------------------------------------------------
//  FILE: CQLogicSh_LSIntfClientProxy.hpp
//  DATE: Tue, Jan 19 17:39:55 2021 -0500
//    ID: 2B54D6A15C078D54-8E985C2CDE56A303
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------
#pragma once

#pragma CIDLIB_PACK(CIDLIBPACK)

class CQLOGICSHEXPORT TLogicSrvClientProxy : public TOrbClientBase
{
    public :
        // --------------------------------------------------------------------
        // Public, static data
        // --------------------------------------------------------------------
        static const TString strInterfaceId;
        static const TString strBinding;
        static const TString strCoreAdminBinding;



        // --------------------------------------------------------------------
        // Public Constructors and Destructor
        // --------------------------------------------------------------------
        TLogicSrvClientProxy();
        TLogicSrvClientProxy(const TOrbObjId& ooidSrc, const TString& strNSBinding);
        TLogicSrvClientProxy(const TLogicSrvClientProxy&) = delete;
        TLogicSrvClientProxy(TLogicSrvClientProxy&&) = delete;
        ~TLogicSrvClientProxy();

        // --------------------------------------------------------------------
        // Public operators
        // --------------------------------------------------------------------
        TLogicSrvClientProxy& operator=(const TLogicSrvClientProxy&) = delete;
        TLogicSrvClientProxy& operator=(TLogicSrvClientProxy&&) = delete;

        // --------------------------------------------------------------------
        // Public, inherited methods
        // --------------------------------------------------------------------
        tCIDLib::TVoid SetObjId
        (
            const   TOrbObjId& ooidToSet
            , const TString& strNSBinding
            , const tCIDLib::TBoolean bCheck = kCIDLib::True
        )   override;

        // --------------------------------------------------------------------
        // Public, non-virtual methods
        // --------------------------------------------------------------------
        tCIDLib::TBoolean bQueryFields
        (
            const tCIDLib::TCard4 c4CfgSerialNum
            , tCIDLib::TCard4& c4BufSz_mbufData
            , THeapBuf& mbufData
            , const tCIDLib::TBoolean bReturnAll
        );

        tCIDLib::TBoolean bQueryGraphSamples
        (
            const TString& strFldName
            , tCIDLib::TCard4& c4CfgSerialNum
            , tCIDLib::TCard4& c4SerialNum
            , tCIDLib::TCard4& c4NewSamples
            , TFundVector<tCIDLib::TFloat4>& fcolNewSamples
        );

        tCIDLib::TCard4 c4QueryGraphFlds
        (
            TVector<TString>& colToFill
        );

        tCIDLib::TVoid QueryConfig
        (
            TCQLogicSrvCfg& lscfgToFill
            , tCIDLib::TCard4& c4CfgSerialNum
        );

        tCIDLib::TVoid ResetElTimeFld
        (
            const TString& strField
        );

        tCIDLib::TVoid SetConfig
        (
            const TCQLogicSrvCfg& lscfgNew
            , tCIDLib::TCard4& c4CfgSerialNum
        );

    protected :
        // --------------------------------------------------------------------
        // Declare our friends
        // --------------------------------------------------------------------
        friend class TFacCIDOrb;

    private :
        // --------------------------------------------------------------------
        // Magic macros
        // --------------------------------------------------------------------
        RTTIDefs(TLogicSrvClientProxy,TOrbClientBase)
};

#pragma CIDLIB_POPPACK

inline tCIDLib::TVoid
TLogicSrvClientProxy::SetObjId(const  TOrbObjId& ooidToSet
              , const TString& strNSBinding
              , const tCIDLib::TBoolean bCheck)
{
    TParent::SetObjId(ooidToSet, strNSBinding, bCheck);
}

