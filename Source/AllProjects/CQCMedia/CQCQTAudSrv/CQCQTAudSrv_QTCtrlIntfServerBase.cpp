// ----------------------------------------------------------------------------
//  FILE: CQCQTAudSrv_QTCtrlIntfServerBase.cpp
//  DATE: Tue, Jan 19 17:39:56 2021 -0500
//    ID: 0EA9CE401A3331B3-87EE914CFED50C18
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
// Includes
// ----------------------------------------------------------------------------
#include "CQCQTAudSrv.hpp"

// ----------------------------------------------------------------------------
// Magic macros
// ----------------------------------------------------------------------------
RTTIDecls(TQTIntfServerBase,TOrbServerBase)


// ----------------------------------------------------------------------------
// Public, static data
// ----------------------------------------------------------------------------
const TString TQTIntfServerBase::strInterfaceId(L"0EA9CE401A3331B3-87EE914CFED50C18");
const TString TQTIntfServerBase::strEvResName(L"QTServerEv");
const TString TQTIntfServerBase::strReadyEvResName(L"QTServerReadyEv");
const TString TQTIntfServerBase::strMtxResName(L"QTServerMtx");
const TString TQTIntfServerBase::strMBufResName(L"QTServerMBuf");


// ----------------------------------------------------------------------------
// TQTIntfServerBase: Destructor
// ----------------------------------------------------------------------------
TQTIntfServerBase::~TQTIntfServerBase()
{
}

// ----------------------------------------------------------------------------
// TQTIntfServerBase: Protected Constructors
// ----------------------------------------------------------------------------
TQTIntfServerBase::TQTIntfServerBase() :
    TOrbServerBase(strInterfaceId, L"TQTIntfClientProxy" )
{
}

TQTIntfServerBase::TQTIntfServerBase(const TOrbObjId& ooidThis) :
    TOrbServerBase(ooidThis)
{
}

// ----------------------------------------------------------------------------
// TQTIntfServerBase: Public, non-virtual methods
// ----------------------------------------------------------------------------
tCIDLib::TVoid TQTIntfServerBase::Dispatch(const TString& strMethodName, TOrbCmd& orbcToDispatch)
{
    if (strMethodName == L"bMute")
    {
        tCIDLib::TBoolean bToSet;
        orbcToDispatch.strmIn() >> bToSet;
        tCIDLib::TBoolean retVal = bMute
        (
            bToSet
        );
        orbcToDispatch.strmOut().Reset();
        orbcToDispatch.strmOut() << retVal;
    }
     else if (strMethodName == L"c4Volume")
    {
        tCIDLib::TCard4 c4ToSet;
        orbcToDispatch.strmIn() >> c4ToSet;
        tCIDLib::TCard4 retVal = c4Volume
        (
            c4ToSet
        );
        orbcToDispatch.strmOut().Reset();
        orbcToDispatch.strmOut() << retVal;
    }
     else if (strMethodName == L"LoadFile")
    {
        TString strPath;
        orbcToDispatch.strmIn() >> strPath;
        TString strAudioDevice;
        orbcToDispatch.strmIn() >> strAudioDevice;
        LoadFile
        (
            strPath
          , strAudioDevice
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"Pause")
    {
        Pause
        (
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"Play")
    {
        Play
        (
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"Reset")
    {
        Reset
        (
        );
        orbcToDispatch.strmOut().Reset();
    }
     else if (strMethodName == L"Stop")
    {
        Stop
        (
        );
        orbcToDispatch.strmOut().Reset();
    }
     else
    {
         TParent::Dispatch(strMethodName, orbcToDispatch);
    }
}

