// ----------------------------------------------------------------------------
//  FILE: LutronRA2C_Data.cpp
//  DATE: Fri, Feb 12 21:14:17 2021 -0500
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

#include "LutronRA2C_.hpp"

const TString kLutronRA2C::strAttr_Addr(L"/Attr/Addr");
const TString kLutronRA2C::strAttr_Extra(L"/Attr/Extra");
const TString kLutronRA2C::strAttr_Name(L"/Attr/Name");
const TString kLutronRA2C::strAttr_Trigger(L"/Attr/Trigger");


static TEnumMap::TEnumValItem aeitemValues_EListCols[5] = 
{
    {  tCIDLib::TInt4(tLutronRA2C::EListCols::Type), 0, 0,  { L"", L"", L"", L"Type", L"EListCols::Type", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EListCols::Name), 0, 0,  { L"", L"", L"", L"Name", L"EListCols::Name", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EListCols::Addr), 0, 0,  { L"", L"", L"", L"Addr", L"EListCols::Addr", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EListCols::Trigger), 0, 0,  { L"", L"", L"", L"Trigger", L"EListCols::Trigger", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EListCols::Extra), 0, 0,  { L"", L"", L"", L"Extra", L"EListCols::Extra", L"" } }

};

static TEnumMap emapEListCols
(
     L"EListCols"
     , 5
     , kCIDLib::False
     , aeitemValues_EListCols
     , nullptr
     , tCIDLib::TCard4(tLutronRA2C::EListCols::Count)
);

const TString& tLutronRA2C::strXlatEListCols(const tLutronRA2C::EListCols eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEListCols.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tLutronRA2C::EListCols tLutronRA2C::eXlatEListCols(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tLutronRA2C::EListCols(emapEListCols.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

tCIDLib::TBoolean tLutronRA2C::bIsValidEnum(const tLutronRA2C::EListCols eVal)
{
    return emapEListCols.bIsValidEnum(tCIDLib::TCard4(eVal));

}



static TEnumMap::TEnumValItem aeitemValues_EItemTypes[7] = 
{
    {  tCIDLib::TInt4(tLutronRA2C::EItemTypes::Button), 0, 0,  { L"", L"", L"", L"Button", L"EItemTypes::Button", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EItemTypes::Dimmer), 0, 0,  { L"", L"", L"", L"Dimmer", L"EItemTypes::Dimmer", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EItemTypes::LED), 0, 0,  { L"", L"", L"", L"LED", L"EItemTypes::LED", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EItemTypes::OccSensor), 0, 0,  { L"", L"", L"", L"OccSensor", L"EItemTypes::OccSensor", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EItemTypes::Switch), 0, 0,  { L"", L"", L"", L"Switch", L"EItemTypes::Switch", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EItemTypes::Thermo), 0, 0,  { L"", L"", L"", L"Thermo", L"EItemTypes::Thermo", L"" } }
  , {  tCIDLib::TInt4(tLutronRA2C::EItemTypes::ContactCl), 0, 0,  { L"", L"", L"", L"ContactCl", L"EItemTypes::ContactCl", L"" } }

};

static TEnumMap emapEItemTypes
(
     L"EItemTypes"
     , 7
     , kCIDLib::False
     , aeitemValues_EItemTypes
     , nullptr
     , tCIDLib::TCard4(tLutronRA2C::EItemTypes::Count)
);

const TString& tLutronRA2C::strXlatEItemTypes(const tLutronRA2C::EItemTypes eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEItemTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tLutronRA2C::EItemTypes tLutronRA2C::eXlatEItemTypes(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tLutronRA2C::EItemTypes(emapEItemTypes.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& tLutronRA2C::operator<<(TTextOutStream& strmTar, const tLutronRA2C::EItemTypes eVal)
{
    strmTar << emapEItemTypes.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
tCIDLib::TBoolean tLutronRA2C::bIsValidEnum(const tLutronRA2C::EItemTypes eVal)
{
    return emapEItemTypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}

