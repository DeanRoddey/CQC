// ----------------------------------------------------------------------------
//  FILE: ZWaveUSB3C_TypesConsts.cpp
//  DATE: Tue, Jan 19 17:39:56 2021 -0500
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

#include "ZWaveUSB3C_.hpp"



static TEnumMap::TEnumValItem aeitemValues_EListCols[7] = 
{
    {  tCIDLib::TInt4(tZWaveUSB3C::EListCols::Menu), 0, 0,  { L"", L"v", L"", L"Menu", L"EListCols::Menu", L"" } }
  , {  tCIDLib::TInt4(tZWaveUSB3C::EListCols::Id), 0, 0,  { L"", L"Id", L"", L"Id", L"EListCols::Id", L"" } }
  , {  tCIDLib::TInt4(tZWaveUSB3C::EListCols::Name), 0, 0,  { L"", L"Unit Name", L"", L"Name", L"EListCols::Name", L"" } }
  , {  tCIDLib::TInt4(tZWaveUSB3C::EListCols::State), 0, 0,  { L"", L"State", L"", L"State", L"EListCols::State", L"" } }
  , {  tCIDLib::TInt4(tZWaveUSB3C::EListCols::Make), 0, 0,  { L"", L"Make", L"", L"Make", L"EListCols::Make", L"" } }
  , {  tCIDLib::TInt4(tZWaveUSB3C::EListCols::Model), 0, 0,  { L"", L"Model", L"", L"Model", L"EListCols::Model", L"" } }
  , {  tCIDLib::TInt4(tZWaveUSB3C::EListCols::Listener), 0, 0,  { L"", L"Listener?", L"", L"Listener", L"EListCols::Listener", L"" } }

};

static TEnumMap emapEListCols
(
     L"EListCols"
     , 7
     , kCIDLib::False
     , aeitemValues_EListCols
     , nullptr
     , tCIDLib::TCard4(tZWaveUSB3C::EListCols::Count)
);

const TString& tZWaveUSB3C::strAltXlatEListCols(const tZWaveUSB3C::EListCols eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEListCols.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::AltText, bThrowIfNot);
}

tZWaveUSB3C::EListCols tZWaveUSB3C::eAltXlatEListCols(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tZWaveUSB3C::EListCols(emapEListCols.i4MapEnumText(strVal, TEnumMap::ETextVals::AltText, bThrowIfNot));
}

const TString& tZWaveUSB3C::strLoadEListCols(const tZWaveUSB3C::EListCols eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEListCols.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}
tCIDLib::TBoolean tZWaveUSB3C::bIsValidEnum(const tZWaveUSB3C::EListCols eVal)
{
    return emapEListCols.bIsValidEnum(tCIDLib::TCard4(eVal));

}

